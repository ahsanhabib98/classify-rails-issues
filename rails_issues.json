[
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50958",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50958/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50958/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50958/events",
        "html_url": "https://github.com/rails/rails/pull/50958",
        "id": 2116092234,
        "node_id": "PR_kwDNIULOZeUV5A",
        "number": 50958,
        "title": "Add missing alias to errors array",
        "user": {
            "login": "laomatt",
            "id": 9632282,
            "node_id": "MDQ6VXNlcjk2MzIyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9632282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laomatt",
            "html_url": "https://github.com/laomatt",
            "followers_url": "https://api.github.com/users/laomatt/followers",
            "following_url": "https://api.github.com/users/laomatt/following{/other_user}",
            "gists_url": "https://api.github.com/users/laomatt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laomatt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laomatt/subscriptions",
            "organizations_url": "https://api.github.com/users/laomatt/orgs",
            "repos_url": "https://api.github.com/users/laomatt/repos",
            "events_url": "https://api.github.com/users/laomatt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laomatt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-03T01:01:09Z",
        "updated_at": "2024-02-03T01:01:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50958",
            "html_url": "https://github.com/rails/rails/pull/50958",
            "diff_url": "https://github.com/rails/rails/pull/50958.diff",
            "patch_url": "https://github.com/rails/rails/pull/50958.patch",
            "merged_at": null
        },
        "body": "it used to be that the << operator was able to add error messages during the validation process, this restores that functionality.\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because errors in active record validations seem to be missing the << functionality it used to have\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the array returned by ar errors\r\n\r\n### Additional information\r\n\r\nJust wanted to restore the alias of >> to 'add'\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50958/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50954",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50954/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50954/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50954/events",
        "html_url": "https://github.com/rails/rails/issues/50954",
        "id": 2115098687,
        "node_id": "I_kwDNIULOfhHYPw",
        "number": 50954,
        "title": "esbuild precompilation error in rails 7.1.3",
        "user": {
            "login": "PhilippGsell",
            "id": 58818799,
            "node_id": "MDQ6VXNlcjU4ODE4Nzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58818799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PhilippGsell",
            "html_url": "https://github.com/PhilippGsell",
            "followers_url": "https://api.github.com/users/PhilippGsell/followers",
            "following_url": "https://api.github.com/users/PhilippGsell/following{/other_user}",
            "gists_url": "https://api.github.com/users/PhilippGsell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PhilippGsell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PhilippGsell/subscriptions",
            "organizations_url": "https://api.github.com/users/PhilippGsell/orgs",
            "repos_url": "https://api.github.com/users/PhilippGsell/repos",
            "events_url": "https://api.github.com/users/PhilippGsell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PhilippGsell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T14:43:34Z",
        "updated_at": "2024-02-02T14:43:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\ncreate a new rails 7.1.3 Project with esbuild.\r\n```bash\r\n rails new app --javascript esbuild\r\n```\r\nand try to build the docker image without doing any changes\r\n```bash\r\ndocker build -f Dockerfile -t app_test . && docker run -p 3000:3000 -v .:/rails app_test --env RAILS_MASTER_KEY=xxx\r\n```\r\n\r\n### Expected behavior\r\nThe image should build\r\n\r\n### Actual behavior\r\nyarn throws an error while precompiling the assets.\r\n\r\nyarn run v1.22.21\r\n$ esbuild app/javascript/*.* --bundle --sourcemap --format=esm --outdir=app/assets/builds --public-path=/assets\r\n\u2718 [ERROR] Could not resolve \"@hotwired/turbo-rails\"\r\n\r\n    app/javascript/application.js:2:7:\r\n      2 \u2502 import \"@hotwired/turbo-rails\"\r\n      The command '/bin/sh -c SECRET_KEY_BASE_DUMMY=1 ./bin/rails assets:precompile' returned a non-zero code: 1\r\n\r\n### System configuration\r\n**Ubuntu version**: 22.04\r\n\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.0.2p107 (2021-07-07 revision 0db68f0233) [x86_64-linux-gnu]\r\n\r\n**gem --version**: 3.3.5\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50953",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50953/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50953/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50953/events",
        "html_url": "https://github.com/rails/rails/pull/50953",
        "id": 2114861781,
        "node_id": "PR_kwDNIULOZdP1vw",
        "number": 50953,
        "title": "Add webp as a default to active_storage.web_image_content_types",
        "user": {
            "login": "lewispb",
            "id": 1773614,
            "node_id": "MDQ6VXNlcjE3NzM2MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1773614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lewispb",
            "html_url": "https://github.com/lewispb",
            "followers_url": "https://api.github.com/users/lewispb/followers",
            "following_url": "https://api.github.com/users/lewispb/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewispb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lewispb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewispb/subscriptions",
            "organizations_url": "https://api.github.com/users/lewispb/orgs",
            "repos_url": "https://api.github.com/users/lewispb/repos",
            "events_url": "https://api.github.com/users/lewispb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lewispb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-02T12:51:26Z",
        "updated_at": "2024-02-02T17:19:56Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50953",
            "html_url": "https://github.com/rails/rails/pull/50953",
            "diff_url": "https://github.com/rails/rails/pull/50953.diff",
            "patch_url": "https://github.com/rails/rails/pull/50953.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nCustomers are uploading webp images to our app, and expect them to be rendered just like other images, instead of being converted to the fallback PNG format.\r\n\r\n### Detail\r\n\r\nFollows https://github.com/rails/rails/pull/38918 and https://github.com/rails/rails/pull/38988. At the time, webp browser support was limited. Now 96% of browsers support webp: https://caniuse.com/?search=webp\r\n\r\nThis PR adds webp as a default image type.\r\n\r\n### Additional information\r\n\r\nI think this is a sensible default in 2024, but alternatively each Rails app may choose:\r\n\r\n```\r\nRails.application.configure do\r\n  config.active_storage.web_image_content_types << \"image/webp\"\r\nend\r\n```\r\n\r\n**Changelog**\r\n\r\nI've not added a changelog entry in line with https://github.com/rails/rails/pull/38918#discussion_r410527726, but I'd be happy to add one if it's felt useful now.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\ncc @jeremy \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50953/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50951",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50951/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50951/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50951/events",
        "html_url": "https://github.com/rails/rails/pull/50951",
        "id": 2114685245,
        "node_id": "PR_kwDNIULOZdGIPQ",
        "number": 50951,
        "title": "set default_enforce_utf8 to false",
        "user": {
            "login": "ironsand",
            "id": 4509402,
            "node_id": "MDQ6VXNlcjQ1MDk0MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4509402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ironsand",
            "html_url": "https://github.com/ironsand",
            "followers_url": "https://api.github.com/users/ironsand/followers",
            "following_url": "https://api.github.com/users/ironsand/following{/other_user}",
            "gists_url": "https://api.github.com/users/ironsand/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ironsand/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ironsand/subscriptions",
            "organizations_url": "https://api.github.com/users/ironsand/orgs",
            "repos_url": "https://api.github.com/users/ironsand/repos",
            "events_url": "https://api.github.com/users/ironsand/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ironsand/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-02T11:11:21Z",
        "updated_at": "2024-02-03T08:41:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50951",
            "html_url": "https://github.com/rails/rails/pull/50951",
            "diff_url": "https://github.com/rails/rails/pull/50951.diff",
            "patch_url": "https://github.com/rails/rails/pull/50951.patch",
            "merged_at": null
        },
        "body": "`enforce_utf8` is false by deault in `form_for` #30852\r\nWe normally don't need to consider old IE anymore.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50951/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50950",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50950/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50950/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50950/events",
        "html_url": "https://github.com/rails/rails/pull/50950",
        "id": 2114677525,
        "node_id": "PR_kwDNIULOZdFtKw",
        "number": 50950,
        "title": "Add class name to enum validation exception message",
        "user": {
            "login": "amkisko",
            "id": 54796266,
            "node_id": "MDQ6VXNlcjU0Nzk2MjY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54796266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amkisko",
            "html_url": "https://github.com/amkisko",
            "followers_url": "https://api.github.com/users/amkisko/followers",
            "following_url": "https://api.github.com/users/amkisko/following{/other_user}",
            "gists_url": "https://api.github.com/users/amkisko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amkisko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amkisko/subscriptions",
            "organizations_url": "https://api.github.com/users/amkisko/orgs",
            "repos_url": "https://api.github.com/users/amkisko/repos",
            "events_url": "https://api.github.com/users/amkisko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amkisko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T11:07:18Z",
        "updated_at": "2024-02-02T11:08:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50950",
            "html_url": "https://github.com/rails/rails/pull/50950",
            "diff_url": "https://github.com/rails/rails/pull/50950.diff",
            "patch_url": "https://github.com/rails/rails/pull/50950.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nIn general validation errors should include more information on where it has happened.\r\n\r\n### Detail\r\n\r\nThis PR updates `activerecord/lib/active_record/enum.rb` validation exception message and just adds class name.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50950/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50949",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50949/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50949/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50949/events",
        "html_url": "https://github.com/rails/rails/pull/50949",
        "id": 2114653503,
        "node_id": "PR_kwDNIULOZdEYOA",
        "number": 50949,
        "title": "Add a Rails Guide for tuning performance for deployment",
        "user": {
            "login": "noahgibbs",
            "id": 82408,
            "node_id": "MDQ6VXNlcjgyNDA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/82408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noahgibbs",
            "html_url": "https://github.com/noahgibbs",
            "followers_url": "https://api.github.com/users/noahgibbs/followers",
            "following_url": "https://api.github.com/users/noahgibbs/following{/other_user}",
            "gists_url": "https://api.github.com/users/noahgibbs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noahgibbs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noahgibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/noahgibbs/orgs",
            "repos_url": "https://api.github.com/users/noahgibbs/repos",
            "events_url": "https://api.github.com/users/noahgibbs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noahgibbs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T10:55:44Z",
        "updated_at": "2024-02-02T15:02:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50949",
            "html_url": "https://github.com/rails/rails/pull/50949",
            "diff_url": "https://github.com/rails/rails/pull/50949.diff",
            "patch_url": "https://github.com/rails/rails/pull/50949.patch",
            "merged_at": null
        },
        "body": "This pull request adds a new Rails Guide called \"Tuning Performance for Deployment\".\r\n\r\n### Motivation / Background\r\n\r\nA few weeks ago there was [an issue to change the default thread count for Puma in Rails](https://github.com/rails/rails/issues/50450) and [a PR to make that change](https://github.com/rails/rails/pull/50669).\r\n\r\nThe PR mentioned that a performance tuning guide would be the right way to document some issues, but no such guide exists. I wrote a basic guide and incorporated a lot of feedback from @byroot (Jean Boussier), who wrote the thread count PR.\r\n\r\nThis pull request adds the suggested Rails Guide.\r\n\r\nCC @nateberkopec - though I know you're very busy right now :-)\r\n\r\n### Detail\r\n\r\nIt's impossible to have a detailed guide for all possible Rails deployment options. This guide focuses on Puma (the default server) and CRuby, and on giving a good start to people who don't already know deployment well. I've tried to mention core performance issues without explaining every possible configuration change.\r\n\r\nNext time there is a deployment configuration change, there will be a place to document the tradeoffs.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50949/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50948",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50948/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50948/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50948/events",
        "html_url": "https://github.com/rails/rails/issues/50948",
        "id": 2114571381,
        "node_id": "I_kwDNIULOfgnMdQ",
        "number": 50948,
        "title": "Destroying bi-directional has_one through association only works from one end",
        "user": {
            "login": "airblade",
            "id": 7265,
            "node_id": "MDQ6VXNlcjcyNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7265?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/airblade",
            "html_url": "https://github.com/airblade",
            "followers_url": "https://api.github.com/users/airblade/followers",
            "following_url": "https://api.github.com/users/airblade/following{/other_user}",
            "gists_url": "https://api.github.com/users/airblade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/airblade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/airblade/subscriptions",
            "organizations_url": "https://api.github.com/users/airblade/orgs",
            "repos_url": "https://api.github.com/users/airblade/repos",
            "events_url": "https://api.github.com/users/airblade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/airblade/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T10:14:36Z",
        "updated_at": "2024-02-02T10:14:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Summary\r\n\r\nGiven a `has_one :through` association with `dependent: :destroy`, destroying the parent destroys the through record and the far end.  However if the association is bi-directional, destroying only works from one end \u2013 and the end which succeeds depends on the order of `belongs_to` declarations in the join model.  I believe it should work from both ends.\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :lefts, force: true do |t|\r\n  end\r\n\r\n  create_table :rights, force: true do |t|\r\n  end\r\n\r\n  create_table :middles, force: true do |t|\r\n    t.references :left, foreign_key: true\r\n    t.references :right, foreign_key: true\r\n  end\r\nend\r\n\r\nclass Left < ActiveRecord::Base\r\n  has_one :middle, dependent: :destroy\r\n  has_one :right, through: :middle\r\nend\r\n\r\nclass Middle < ActiveRecord::Base\r\n  belongs_to :left, dependent: :destroy\r\n  belongs_to :right, dependent: :destroy\r\nend\r\n\r\nclass Right < ActiveRecord::Base\r\n  has_one :middle, dependent: :destroy\r\n  has_one :left, through: :middle\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_destroying_left_destroys_right\r\n    left = Left.create!\r\n    right = Right.create!\r\n    middle = Middle.create! left: left, right: right\r\n\r\n    left.destroy\r\n    assert right.destroyed?\r\n  end\r\n\r\n  def test_destroying_right_destroys_left\r\n    left = Left.create!\r\n    right = Right.create!\r\n    middle = Middle.create! left: left, right: right\r\n\r\n    right.destroy\r\n    assert left.destroyed?\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect:\r\n\r\n- `left.destroy` to also destroy its `middle` and its `right`\r\n- `right.destroy` to also destroy its `middle` and its `left`\r\n\r\n### Actual behavior\r\n\r\n- `right.destroy` destroys its `middle` and its `left`\r\n-  `left.destroy` destroys its `middle` but does not destroy its `right`\r\n\r\nHowever if I reverse the order of `Middle`'s `belongs_to` declarations, `right.destroy` stops working and `left.destroy` starts working.\r\n\r\n### Patch\r\n\r\nThis patch fixes the behaviour and does not break any existing tests (via `bundle exec rake test:sqlite3`):\r\n\r\n```diff\r\ndiff --git i/activerecord/lib/active_record/callbacks.rb w/activerecord/lib/active_record/callbacks.rb\r\nindex 29c72d1024..6e9c68b747 100644\r\n--- i/activerecord/lib/active_record/callbacks.rb\r\n+++ w/activerecord/lib/active_record/callbacks.rb\r\n@@ -418,7 +418,7 @@ module ClassMethods\r\n \r\n     def destroy # :nodoc:\r\n       @_destroy_callback_already_called ||= false\r\n-      return if @_destroy_callback_already_called\r\n+      return true if @_destroy_callback_already_called\r\n       @_destroy_callback_already_called = true\r\n       _run_destroy_callbacks { super }\r\n     rescue RecordNotDestroyed => e\r\n```\r\n\r\nCredit for the patch belongs to [Alex](https://stackoverflow.com/users/207090/alex).\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.3.0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50947",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50947/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50947/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50947/events",
        "html_url": "https://github.com/rails/rails/issues/50947",
        "id": 2114046969,
        "node_id": "I_kwDNIULOfgHL-Q",
        "number": 50947,
        "title": "ActiveStorage::IntegrityError (ActiveStorage::IntegrityError)",
        "user": {
            "login": "raoehtesham03",
            "id": 152256436,
            "node_id": "U_kgDOCRM_tA",
            "avatar_url": "https://avatars.githubusercontent.com/u/152256436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoehtesham03",
            "html_url": "https://github.com/raoehtesham03",
            "followers_url": "https://api.github.com/users/raoehtesham03/followers",
            "following_url": "https://api.github.com/users/raoehtesham03/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoehtesham03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoehtesham03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoehtesham03/subscriptions",
            "organizations_url": "https://api.github.com/users/raoehtesham03/orgs",
            "repos_url": "https://api.github.com/users/raoehtesham03/repos",
            "events_url": "https://api.github.com/users/raoehtesham03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoehtesham03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T04:43:40Z",
        "updated_at": "2024-02-02T04:43:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have upgraded my rails application from 5.2 to 6.0 and then 6.0 to 7.0 . So, I am getting ActiveStorage::IntegrityError (ActiveStorage::IntegrityError) while I am trying to get -\r\n```ruby\r\n attachment.variant(resize_to_limit: resize).processed.url\r\n```\r\n\r\n### Expected behavior\r\nIt should not give this error.\r\n\r\n### Actual behavior\r\nGetting this  ActiveStorage::IntegrityError (ActiveStorage::IntegrityError) Error.\r\n\r\n### System configuration\r\n**Rails version**: 3.0.6\r\n\r\n**Ruby version**:  7.0.8\r\n\r\n\r\nPlease provide me the solution to resolve this problem I am stuck on it since a week.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50947/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50947/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50946",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50946/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50946/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50946/events",
        "html_url": "https://github.com/rails/rails/pull/50946",
        "id": 2113959017,
        "node_id": "PR_kwDNIULOZceF3g",
        "number": 50946,
        "title": "Fix error raised when running `db:schema:load:#{name}` and test DB config is missing",
        "user": {
            "login": "ricardotk002",
            "id": 3733470,
            "node_id": "MDQ6VXNlcjM3MzM0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3733470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ricardotk002",
            "html_url": "https://github.com/ricardotk002",
            "followers_url": "https://api.github.com/users/ricardotk002/followers",
            "following_url": "https://api.github.com/users/ricardotk002/following{/other_user}",
            "gists_url": "https://api.github.com/users/ricardotk002/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ricardotk002/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ricardotk002/subscriptions",
            "organizations_url": "https://api.github.com/users/ricardotk002/orgs",
            "repos_url": "https://api.github.com/users/ricardotk002/repos",
            "events_url": "https://api.github.com/users/ricardotk002/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ricardotk002/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T03:17:31Z",
        "updated_at": "2024-02-02T14:50:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50946",
            "html_url": "https://github.com/rails/rails/pull/50946",
            "diff_url": "https://github.com/rails/rails/pull/50946.diff",
            "patch_url": "https://github.com/rails/rails/pull/50946.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFixes #50672\r\n\r\n### Detail\r\n\r\nThe task `db:schema:load:#{name}` depends on `db:test:purge:#{name}` since adb64db which requires the DB config to be present, otherwise an error is raised.\r\n\r\n```\r\n$ bin/rails db:schema:load:one --trace\r\n** Invoke db:schema:load:one (first_time)\r\n** Invoke db:test:purge:one (first_time)\r\n** Invoke db:load_config (first_time)\r\n** Invoke environment (first_time)\r\n** Execute environment\r\n** Execute db:load_config\r\n** Invoke db:check_protected_environments (first_time) ** Invoke db:load_config\r\n** Execute db:check_protected_environments\r\n** Execute db:test:purge:one\r\n** Execute db:schema:load:one\r\n```\r\n\r\nThis commit fixes the problem by returning early when the DB config is indeed missing.\r\n\r\n### Additional information\r\n\r\nThe task `db:schema:load` may need to be updated to depend on `db:test:purge` too, to keep it consistent with `db:schema:load:#{name}`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50946/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50945",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50945/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50945/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50945/events",
        "html_url": "https://github.com/rails/rails/pull/50945",
        "id": 2113809897,
        "node_id": "PR_kwDNIULOZcV_yg",
        "number": 50945,
        "title": "Introduce today_or_future? method",
        "user": {
            "login": "olimart",
            "id": 547754,
            "node_id": "MDQ6VXNlcjU0Nzc1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/547754?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olimart",
            "html_url": "https://github.com/olimart",
            "followers_url": "https://api.github.com/users/olimart/followers",
            "following_url": "https://api.github.com/users/olimart/following{/other_user}",
            "gists_url": "https://api.github.com/users/olimart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olimart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olimart/subscriptions",
            "organizations_url": "https://api.github.com/users/olimart/orgs",
            "repos_url": "https://api.github.com/users/olimart/repos",
            "events_url": "https://api.github.com/users/olimart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olimart/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T00:44:50Z",
        "updated_at": "2024-02-02T00:44:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50945",
            "html_url": "https://github.com/rails/rails/pull/50945",
            "diff_url": "https://github.com/rails/rails/pull/50945.diff",
            "patch_url": "https://github.com/rails/rails/pull/50945.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request introduces a convenient helper to check if a date/time is either today or in the future.\r\n\r\nDrawing inspiration from https://github.com/rails/rails/pull/46786 which introduces `.local?` helper for environment check.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes:\r\n- `ActiveSupport::TimeWithZone`\r\n-  `DateAndTime::Calculations`\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50944",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50944/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50944/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50944/events",
        "html_url": "https://github.com/rails/rails/pull/50944",
        "id": 2113736717,
        "node_id": "PR_kwDNIULOZcR4oQ",
        "number": 50944,
        "title": "Enable DependencyTracker to evaluate interpolated paths",
        "user": {
            "login": "skipkayhil",
            "id": 6014046,
            "node_id": "MDQ6VXNlcjYwMTQwNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6014046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skipkayhil",
            "html_url": "https://github.com/skipkayhil",
            "followers_url": "https://api.github.com/users/skipkayhil/followers",
            "following_url": "https://api.github.com/users/skipkayhil/following{/other_user}",
            "gists_url": "https://api.github.com/users/skipkayhil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skipkayhil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skipkayhil/subscriptions",
            "organizations_url": "https://api.github.com/users/skipkayhil/orgs",
            "repos_url": "https://api.github.com/users/skipkayhil/repos",
            "events_url": "https://api.github.com/users/skipkayhil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skipkayhil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T23:46:28Z",
        "updated_at": "2024-02-02T19:50:39Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50944",
            "html_url": "https://github.com/rails/rails/pull/50944",
            "diff_url": "https://github.com/rails/rails/pull/50944.diff",
            "patch_url": "https://github.com/rails/rails/pull/50944.patch",
            "merged_at": null
        },
        "body": "Previously, neither the PrismRenderParser nor the RipperRenderParser would consider an interpolated string as a dependency. The RubyTracker even included a line to explcitly filter out interpolated paths returned from the RipperRenderParser since they would end in a \"/\". However, the RubyTracker does include the ability to evaluate explicit \"Template Dependency\" comments with wildcard nodes.\r\n\r\nThis commit extends the RipperRenderParser and PrismRenderParser to convert interpolated strings into wildcard globs. Additionally, it changes the RubyTracker to evaluate wildcards the same for both implicit and explicit dependencies. This enables the RubyTracker to identify potential dependencies for interpolated renders, which it was previously unable to do.\r\n\r\ncc @jhawthorn if you think this is a good idea I can try to apply it to ActionView::Precompiler as well\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50944/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50943",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50943/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50943/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50943/events",
        "html_url": "https://github.com/rails/rails/pull/50943",
        "id": 2113672199,
        "node_id": "PR_kwDNIULOZcOUzA",
        "number": 50943,
        "title": "Setup jemalloc in default Dockerfile to optimize memory allocation",
        "user": {
            "login": "northeastprince",
            "id": 55164724,
            "node_id": "MDQ6VXNlcjU1MTY0NzI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/55164724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/northeastprince",
            "html_url": "https://github.com/northeastprince",
            "followers_url": "https://api.github.com/users/northeastprince/followers",
            "following_url": "https://api.github.com/users/northeastprince/following{/other_user}",
            "gists_url": "https://api.github.com/users/northeastprince/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/northeastprince/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/northeastprince/subscriptions",
            "organizations_url": "https://api.github.com/users/northeastprince/orgs",
            "repos_url": "https://api.github.com/users/northeastprince/repos",
            "events_url": "https://api.github.com/users/northeastprince/events{/privacy}",
            "received_events_url": "https://api.github.com/users/northeastprince/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T22:55:15Z",
        "updated_at": "2024-02-01T22:59:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50943",
            "html_url": "https://github.com/rails/rails/pull/50943",
            "diff_url": "https://github.com/rails/rails/pull/50943.diff",
            "patch_url": "https://github.com/rails/rails/pull/50943.patch",
            "merged_at": null
        },
        "body": "[Ruby's use of `malloc` can create memory fragmentation problems, especially when using multiple threads](https://www.speedshop.co/2017/12/04/malloc-doubles-ruby-memory.html) like Puma does. Switching to an allocator that uses different patterns to avoid fragmentation can decrease memory usage by a substantial margin.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50943/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50941",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50941/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50941/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50941/events",
        "html_url": "https://github.com/rails/rails/pull/50941",
        "id": 2113553144,
        "node_id": "PR_kwDNIULOZcHmFg",
        "number": 50941,
        "title": "Retry `ActionableError`s when running tests",
        "user": {
            "login": "andrewn617",
            "id": 39735028,
            "node_id": "MDQ6VXNlcjM5NzM1MDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/39735028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewn617",
            "html_url": "https://github.com/andrewn617",
            "followers_url": "https://api.github.com/users/andrewn617/followers",
            "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewn617/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewn617/orgs",
            "repos_url": "https://api.github.com/users/andrewn617/repos",
            "events_url": "https://api.github.com/users/andrewn617/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewn617/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T21:50:43Z",
        "updated_at": "2024-02-02T14:23:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50941",
            "html_url": "https://github.com/rails/rails/pull/50941",
            "diff_url": "https://github.com/rails/rails/pull/50941.diff",
            "patch_url": "https://github.com/rails/rails/pull/50941.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I want to make it easier to retry actionable errors that occur when running tests. Rails already knows how to recover these errors, so lets make it possible for the user to recover from them and run their tests without exiting the process.\r\n\r\n### Detail\r\n\r\nAllow Actionable Errors encountered when running tests to be retried. This can be configured by `config.actionable_command_line_errors` and is `true` in the test environment unless the `\"CI\"` env variable is set, and false otherwise.\r\n\r\n    \r\n    Migrations are pending. To resolve this issue, run:\r\n    \r\n            bin/rails db:migrate\r\n    \r\n    You have 1 pending migration:\r\n    \r\n    db/migrate/20240201213806_add_a_to_b.rb\r\n    Run pending migrations? [Yn] Y\r\n    == 20240201213806 AddAToB: migrating =========================================\r\n    == 20240201213806 AddAToB: migrated (0.0000s) ================================\r\n    \r\n    Running 7 tests in a single process (parallelization threshold is 50)\r\n    Run options: --seed 22200\r\n    \r\n    # Running:\r\n    \r\n    .......\r\n    \r\n    Finished in 0.243394s, 28.7600 runs/s, 45.1942 assertions/s.\r\n    7 runs, 11 assertions, 0 failures, 0 errors, 0 skips\r\n    \r\n\r\n### Additional information\r\n\r\nRight now this is only implemented in the Test Runner, but I'd also like to follow up with a similar implementation for `Rails::Command::CorrectableNameError`s.\r\n\r\nAlso we could introduce a new framework default for the configuration if this is the direction in this PR is acceptable.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50941/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50939",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50939/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50939/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50939/events",
        "html_url": "https://github.com/rails/rails/issues/50939",
        "id": 2112729539,
        "node_id": "I_kwDNIULOfe2xww",
        "number": 50939,
        "title": "Should there be a RAILS_MASTER_KEY_DUMMY like SECRET_KEY_BASE_DUMMY?",
        "user": {
            "login": "dorianmariefr",
            "id": 58794487,
            "node_id": "MDQ6VXNlcjU4Nzk0NDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/58794487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dorianmariefr",
            "html_url": "https://github.com/dorianmariefr",
            "followers_url": "https://api.github.com/users/dorianmariefr/followers",
            "following_url": "https://api.github.com/users/dorianmariefr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dorianmariefr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dorianmariefr/subscriptions",
            "organizations_url": "https://api.github.com/users/dorianmariefr/orgs",
            "repos_url": "https://api.github.com/users/dorianmariefr/repos",
            "events_url": "https://api.github.com/users/dorianmariefr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dorianmariefr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T14:57:42Z",
        "updated_at": "2024-02-01T14:57:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nHave a rails app with `config.require_master_key = true`\r\n\r\n```\r\nRAILS_ENV=production SECRET_KEY_BASE_DUMMY=1 bin/rails assets:precompile\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt ignores the master key requirement?\r\n\r\n### Actual behavior\r\n\r\nError:\r\n\r\n```\r\nMissing encryption key to decrypt file with. Ask your team for your master key and write it to /rails/config/master.key or put it in the ENV['RAILS_MASTER_KEY'].\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.1.3\r\n**Ruby version**: ruby 3.2.3 (2024-01-18 revision 52bb2ac0a6) [arm64-darwin23]\r\n\r\n----\r\n\r\nWhat about a RAILS_MASTER_KEY_DUMMY=1?",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50939/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50938",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50938/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50938/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50938/events",
        "html_url": "https://github.com/rails/rails/pull/50938",
        "id": 2112546336,
        "node_id": "PR_kwDNIULOZbPi_A",
        "number": 50938,
        "title": "Refactor QueryCache to be owned by the pool",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T13:40:41Z",
        "updated_at": "2024-02-01T13:40:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50938",
            "html_url": "https://github.com/rails/rails/pull/50938",
            "diff_url": "https://github.com/rails/rails/pull/50938.diff",
            "patch_url": "https://github.com/rails/rails/pull/50938.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50793\r\n\r\nIf we want to stop caching the checked out connections, then we must persist the cache in the pool, and assign it to the connection when it's checked out.\r\n\r\nThe pool become responsible for managing the cache lifecycle.\r\n\r\nThis also open the door to sharing the cache between multiple connections, which is valuable for read replicas, etc.\r\n\r\nThis change only really make sense if we go through with no longer caching checked out connections. Otherwise it's just extra complexity.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50938/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50938/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50935",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50935/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50935/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50935/events",
        "html_url": "https://github.com/rails/rails/issues/50935",
        "id": 2112256299,
        "node_id": "I_kwDNIULOfeZ5Kw",
        "number": 50935,
        "title": "Add ability to see on which shard the migration is being run",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T11:23:15Z",
        "updated_at": "2024-02-01T22:51:30Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, when the app uses sharding and the migration is run, there is not way to tell on which shard it is being run.\r\nThis is a problem, because when the migration adds a unique index and we have some duplicates, the migration blows up (with a `ActiveRecord::RecordNotUnique` error) and there is no way to easily know on which shard exactly. \r\n\r\nThe problem can be solved in at least 2 ways:\r\n1. somehow `puts` shard info when running a migration\r\n2. we have a `connection_pool` object attached to the mentioned `ActiveRecord::RecordNotUnique` error (thanks to https://github.com/rails/rails/pull/48295), but the error message is not include this info (https://github.com/rails/rails/pull/48295#issuecomment-1570702063), so needs to fix that\r\n\r\nI would like to provide a PR, but need a suggestion on which path to choose. \r\n@byroot you helped to implement the linked PR, can you please suggest? ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50935/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50932",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50932/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50932/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50932/events",
        "html_url": "https://github.com/rails/rails/issues/50932",
        "id": 2111605159,
        "node_id": "I_kwDNIULOfdyJpw",
        "number": 50932,
        "title": "Rails 7.1 undefined method purge & same for variant using ruby 3.3.0-dev",
        "user": {
            "login": "kashifcodility",
            "id": 157491032,
            "node_id": "U_kgDOCWMfWA",
            "avatar_url": "https://avatars.githubusercontent.com/u/157491032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kashifcodility",
            "html_url": "https://github.com/kashifcodility",
            "followers_url": "https://api.github.com/users/kashifcodility/followers",
            "following_url": "https://api.github.com/users/kashifcodility/following{/other_user}",
            "gists_url": "https://api.github.com/users/kashifcodility/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kashifcodility/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kashifcodility/subscriptions",
            "organizations_url": "https://api.github.com/users/kashifcodility/orgs",
            "repos_url": "https://api.github.com/users/kashifcodility/repos",
            "events_url": "https://api.github.com/users/kashifcodility/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kashifcodility/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            },
            {
                "id": 1071962662,
                "node_id": "MDU6TGFiZWwxMDcxOTYyNjYy",
                "url": "https://api.github.com/repos/rails/rails/labels/more-information-needed",
                "name": "more-information-needed",
                "color": "bfdadc",
                "default": false,
                "description": "When reporter needs to provide more information"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-01T05:45:14Z",
        "updated_at": "2024-02-01T10:02:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "irb(main):047> image\r\n=> \r\n#<ActiveStorage::Attachment:0x00007ff81133c0a0\r\n id: 4,\r\n name: \"images\",\r\n record_type: \"News\",\r\n record_id: 2,\r\n blob_id: 4,\r\n created_at: Wed, 31 Jan 2024 12:00:01.463996000 UTC +00:00>\r\nirb(main):048> \r\nirb(main):049> \r\nirb(main):050> image.class\r\n=> ActiveStorage::Attachment(id: integer, name: string, record_type: string, record_id: integer, blob_id: integer, created_at: datetime)\r\nirb(main):051> \r\nirb(main):052> \r\nirb(main):053> \r\nirb(main):054> image.purge\r\n/home/lap-053/.rbenv/versions/3.3.0-dev/lib/ruby/gems/3.4.0+0/gems/activemodel-7.1.3/lib/active_model/attribute_methods.rb:489:in `method_missing': undefined method `purge' for an instance of ActiveStorage::Attachment (NoMethodError)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50932/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50930",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50930/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50930/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50930/events",
        "html_url": "https://github.com/rails/rails/issues/50930",
        "id": 2111351021,
        "node_id": "I_kwDNIULOfdio7Q",
        "number": 50930,
        "title": "Rails 7.1 doesn't render Enumerator in view correctly",
        "user": {
            "login": "kuwabarahiroshi",
            "id": 816749,
            "node_id": "MDQ6VXNlcjgxNjc0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/816749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kuwabarahiroshi",
            "html_url": "https://github.com/kuwabarahiroshi",
            "followers_url": "https://api.github.com/users/kuwabarahiroshi/followers",
            "following_url": "https://api.github.com/users/kuwabarahiroshi/following{/other_user}",
            "gists_url": "https://api.github.com/users/kuwabarahiroshi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kuwabarahiroshi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kuwabarahiroshi/subscriptions",
            "organizations_url": "https://api.github.com/users/kuwabarahiroshi/orgs",
            "repos_url": "https://api.github.com/users/kuwabarahiroshi/repos",
            "events_url": "https://api.github.com/users/kuwabarahiroshi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kuwabarahiroshi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T02:21:08Z",
        "updated_at": "2024-02-01T02:22:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Prior to Rails 7.1, returning an Enumerator in a view rendered the content correctly. However, starting from Rails 7.1, it appears to render only the Enumerator's string representation (Enumerator#to_s), resulting in a response like `\"#<Enumerator:0xXXXXXX>\"`.\r\n\r\nSetting `self.response_body = Enumerator.new` in an action works for both 7.0 and 7.1 (fixed in https://github.com/rails/rails/issues/49588).\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # gem \"rails\", \"~> 7.0.0\" # => works\r\n  gem \"rails\", \"~> 7.1.0\" # => fails\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"enumerator_in_action\", controller: :test\r\n    get \"enumerator_in_view\", controller: :test\r\n  end\r\nend\r\n\r\nclass TestController < ActionController::Base\r\n  def enumerator_in_action\r\n    self.response_body = Enumerator.new do |buff|\r\n      10.times { buff << _1.to_s }\r\n    end\r\n  end\r\n\r\n  def enumerator_in_view\r\n    render inline: <<~EOS, layout: false, type: :ruby\r\n      Enumerator.new do |buff|\r\n        10.times { buff << _1.to_s }\r\n      end\r\n    EOS\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def test_enumerator_in_action\r\n    get \"/enumerator_in_action\"\r\n    assert_equal \"0123456789\", last_response.body\r\n  end\r\n\r\n  def test_enumerator_in_view\r\n    get \"/enumerator_in_view\"\r\n    assert_equal \"0123456789\", last_response.body\r\n  end\r\n\r\n  private\r\n\r\n    def app\r\n      Rails.application\r\n    end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe content should be rendered by evaluating the Enumerator.\r\n\r\nI'm not sure whether it is guaranteed behavior in specification when it's returned from view, but I expect it works as was the case until Rails 7.0.\r\n\r\n### Actual behavior\r\n\r\nIt currently renders the Enumerator's string representation, such as \"#<Enumerator:0xXXXXXX>\".\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50930/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50928",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50928/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50928/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50928/events",
        "html_url": "https://github.com/rails/rails/pull/50928",
        "id": 2110751556,
        "node_id": "PR_kwDNIULOZZsk5w",
        "number": 50928,
        "title": "Fixes race condition for multiple preprocessed video variants",
        "user": {
            "login": "searls",
            "id": 79303,
            "node_id": "MDQ6VXNlcjc5MzAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/79303?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/searls",
            "html_url": "https://github.com/searls",
            "followers_url": "https://api.github.com/users/searls/followers",
            "following_url": "https://api.github.com/users/searls/following{/other_user}",
            "gists_url": "https://api.github.com/users/searls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/searls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/searls/subscriptions",
            "organizations_url": "https://api.github.com/users/searls/orgs",
            "repos_url": "https://api.github.com/users/searls/repos",
            "events_url": "https://api.github.com/users/searls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/searls/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-31T18:49:44Z",
        "updated_at": "2024-02-01T02:00:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50928",
            "html_url": "https://github.com/rails/rails/pull/50928",
            "diff_url": "https://github.com/rails/rails/pull/50928.diff",
            "patch_url": "https://github.com/rails/rails/pull/50928.patch",
            "merged_at": null
        },
        "body": "This fixes race condition in Active Storage when multiple preprocessed variants are defined for a `Previewable` file is attached.\r\n\r\n## Background\r\n\r\nWhen a variant is specified for a \"previewable\" file type (e.g. video  or PDF) attachment, a `preview_image` attachment is first created and attached on the original blob and then any user-specified variants are derived from _that_ preview image. When those variants are named and have `preprocessed: true`, the jobs to create those variants are queued simultaneously.\r\n\r\nExample from my case:\r\n\r\n```ruby\r\n  has_one_attached :file, dependent: :purge_later do |attachable|\r\n    attachable.variant :preview, resize_to_fill: [400, 400], preprocessed: true\r\n    attachable.variant :still, format: \"jpg\", saver: {quality: 85}, preprocessed: true\r\n  end\r\n```\r\n\r\n## The issue\r\n\r\nWhen a `Previewable` attachment is created (a video, in my case), `TransformJob.perform_later` is called for each named variant with `preprocessed: true`. Unless your queue adapter is synchronous (e.g. :inline or :test), this results in a race condition in which every such variant's worker will check `processed?`, see that no `preview_image` attachment exists yet on the `ActiveStorage::Blob`, and:\r\n\r\n1. Redundantly download the file from storage\r\n2. Create duplicative ActiveStorage::Attachment and `ActiveStorage::Blob` records for the `preview_image` attachment (all but one of which will be orphaned from the original blob's `has_one_attached :preview_image`)\r\n3. Create variant blobs (and associated `ActiveStorage::VariantRecord`) that are similarly orphaned (by virtue of being a variant of an orphaned `preview_image` blob)\r\n\r\nAs a result, if the video is ever purged, `PurgeJob` will only find the current `has_one_attached :preview_image` and whatever variant demanded it into existence, then leave the rest as orphaned records in the database and in storage.\r\n\r\n## The fix\r\n\r\nPretty simple: wrap the first step of the job in `blob.with_lock {}`. By pessimistically locking on the blob, we can prevent processing the preview image multiple times by multiple `TransformJob` jobs running concurrently.\r\n\r\nAlternate approaches would all be more work:\r\n\r\n* Queuing a `PreviewImage` job instead of N `TransformJob` and have it, only after `preview_image` is attached, enqueue those `TransformJob` jobs\r\n* Batching up all the named variant transformations into a single meta-job\r\n\r\n## Testing caveat \r\n\r\nWriting a test for this inside Rails would be difficult because it would require running the resulting TransformJob jobs concurrently. I [started a test](https://github.com/searls/rails/blob/fix-video-duplicate-preview-variants/activestorage/test/models/variant_with_record_test.rb#L348-L367) but failed to reproduce, in part because the test queue adapter will perform enqueued jobs inline instead of concurrently. In order to write a test that replicated the issue appropriately, we might first need a new option for `perform_enqueued_jobs(async: true) {\u00a0\u2026 }`\r\n\r\nIf you're interested, [this gist](https://gist.github.com/searls/5b8298abe88b3206f670ea3c6d574aab) includes a driver script and output before and after the patch showing it working.\r\n\r\n## Evaluating impact on existing Active Storage users\r\n\r\nI only found this because I'm a total cheapskate and was literally counting records in my S3 bucket to ensure `PurgeJob` worked. Then I wasted the next two days trying to figure out why before landing on this. I strongly suspect that ActiveStorage users who host video and take advantage of `preprocessed: true` named variants will have a lot of orphaned stuff floating around their buckets.\r\n\r\nTo see if you have any such \"zombie\" preview_images (and presumably, associated variants) floating around your application that would survive calls to `purge` on the owning attachment, you could write a query like this:\r\n\r\n```\r\nActiveStorage::Attachment\r\n  .joins(\"INNER JOIN active_storage_attachments as other_attachments ON\r\n          active_storage_attachments.record_id = other_attachments.record_id AND\r\n          active_storage_attachments.id != other_attachments.id\")\r\n  .where(\r\n    :name => \"preview_image\",\r\n    :record_type => \"ActiveStorage::Blob\",\r\n    \"other_attachments.name\" => \"preview_image\",\r\n    \"other_attachments.record_type\" => \"ActiveStorage::Blob\"\r\n  )\r\n  .distinct\r\n```\r\n\r\nClearing out one's production database and backend storage to get this all right-sized should be a fun exercise for the reader.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50928/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50920",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50920/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50920/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50920/events",
        "html_url": "https://github.com/rails/rails/pull/50920",
        "id": 2107533190,
        "node_id": "PR_kwDNIULOZW8w1g",
        "number": 50920,
        "title": "Support encrypting binary columns",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-30T10:53:34Z",
        "updated_at": "2024-02-02T14:07:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50920",
            "html_url": "https://github.com/rails/rails/pull/50920",
            "diff_url": "https://github.com/rails/rails/pull/50920.diff",
            "patch_url": "https://github.com/rails/rails/pull/50920.patch",
            "merged_at": null
        },
        "body": "\r\n### Motivation / Background\r\n\r\nActiveRecord Encryption doesn't prevent you from encrypting binary columns but it doesn't have proper support for it either.\r\n\r\nWhen the data is fed through encrypt/decrypt it is converted to a String. This means that the the encryption layer is not transparent to binary data - which should be passed as Type::Binary::Data.\r\n\r\nAs a result the data is not properly escaped in the SQL queries or deserialized correctly after decryption.\r\n\r\nHowever it just happens to work fine for MySQL and SQLite because the MessageSerializer doesn't use any characters that need to be encoded. However if you try to use a custom serializer that does then it breaks.\r\n\r\nPostgreSQL on the other hand does not work - because the Bytea type is passed a String rather than a Type::Binary::Data to deserialize, it attempts to unescape the data and either mangles it or raises an error if it contains null bytes.\r\n\r\n### Detail\r\n\r\nThe commit fixes the issue, by reserializing the data after encryption and decryption. For text data that's a no-op, but for binary data we'll convert it back to a Type::Binary::Data.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50920/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50919",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50919/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50919/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50919/events",
        "html_url": "https://github.com/rails/rails/pull/50919",
        "id": 2107305664,
        "node_id": "PR_kwDNIULOZWwUOw",
        "number": 50919,
        "title": "Add negative_scopes option to ActiveRecord's enum method",
        "user": {
            "login": "Jay0921",
            "id": 12777550,
            "node_id": "MDQ6VXNlcjEyNzc3NTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/12777550?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jay0921",
            "html_url": "https://github.com/Jay0921",
            "followers_url": "https://api.github.com/users/Jay0921/followers",
            "following_url": "https://api.github.com/users/Jay0921/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jay0921/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jay0921/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jay0921/subscriptions",
            "organizations_url": "https://api.github.com/users/Jay0921/orgs",
            "repos_url": "https://api.github.com/users/Jay0921/repos",
            "events_url": "https://api.github.com/users/Jay0921/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jay0921/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-30T09:11:41Z",
        "updated_at": "2024-01-30T09:40:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50919",
            "html_url": "https://github.com/rails/rails/pull/50919",
            "diff_url": "https://github.com/rails/rails/pull/50919.diff",
            "patch_url": "https://github.com/rails/rails/pull/50919.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nIn certain situation, we might need to store and query `negative` values. Having the option to bypass the auto-generated negative scopes can avoid the conflicts.\r\n\r\n### Detail\r\n\r\nAdd `negative_scopes` option to `ActiveRecord::Enum#enum`, this offers the flexibility to optionally skip the creation of negative scopes.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50919/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50916",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50916/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50916/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50916/events",
        "html_url": "https://github.com/rails/rails/issues/50916",
        "id": 2106914874,
        "node_id": "I_kwDNIULOfZT4Og",
        "number": 50916,
        "title": "Unexpected controller prefix path de-duplication in view partial lookup paths",
        "user": {
            "login": "sfnelson",
            "id": 325974,
            "node_id": "MDQ6VXNlcjMyNTk3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/325974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sfnelson",
            "html_url": "https://github.com/sfnelson",
            "followers_url": "https://api.github.com/users/sfnelson/followers",
            "following_url": "https://api.github.com/users/sfnelson/following{/other_user}",
            "gists_url": "https://api.github.com/users/sfnelson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sfnelson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sfnelson/subscriptions",
            "organizations_url": "https://api.github.com/users/sfnelson/orgs",
            "repos_url": "https://api.github.com/users/sfnelson/repos",
            "events_url": "https://api.github.com/users/sfnelson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sfnelson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-30T04:10:56Z",
        "updated_at": "2024-01-30T04:22:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nCreate nested controller and nested object views where there is overlap between the controller and object namespaces. For example:\r\n\r\n- `Courses::Quiz::Question` and `Courses::Quiz::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Quiz::Extra::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Courses::Quiz::QuestionsController`\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\nrequire \"active_model/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/unrelated\" => \"learning/questions#new\"\r\n    get \"/duplication\" => \"courses/quiz/questions#new\"\r\n    get \"/collision\" => \"learning/quiz/extra/questions#new\"\r\n    get \"/repetition\" => \"learning/courses/quiz/questions#new\"\r\n  end\r\nend\r\n\r\nmodule Courses\r\n  module Quiz\r\n    class Question\r\n      include ActiveModel::Model\r\n\r\n      attr_accessor :name\r\n    end\r\n\r\n    class QuestionsController < ActionController::Base\r\n      def new\r\n        render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nmodule Learning\r\n  class QuestionsController < ActionController::Base\r\n    def new\r\n      render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n    end\r\n  end\r\n\r\n  module Quiz\r\n    module Extra\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\n\r\n  module Courses\r\n    module Quiz\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def setup\r\n    super\r\n    @views = Dir.mktmpdir\r\n    ActionController::Base.prepend_view_path @views\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_unrelated_partial\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/unrelated\"\r\n    assert_equal \"Nested partial\", last_response.body\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_duplication\r\n    view_file \"courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n\r\n    get \"/duplication\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  # \u274c FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path breaks after the first match, skips 'extra'\r\n  def test_collision\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Harmful de-duplication <%= question.name %>\"\r\n    view_file \"learning/courses/extra/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/collision\"\r\n    assert_equal \"Collision partial\", last_response.body\r\n  end\r\n\r\n  # \u274c FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path fails to find overlap because offsets do not align\r\n  def test_repetition\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n    view_file \"learning/courses/quiz/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/repetition\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  private\r\n\r\n  def app\r\n    Rails.application\r\n  end\r\n\r\n  def view_file(name, content)\r\n    path = Pathname.new(@views).join(name)\r\n    path.dirname.tap(&:mkpath)\r\n    path.write(content)\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\n- Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `quiz/extra` suffix on the controller does not match the `quiz` prefix on the model so no de-duplication is performed. Partial should be `learning/courses/extra/courses/quiz/questions/_question.html.erb`\r\n- Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   `courses/quiz` suffix on controller matches `courses/quiz` prefix on model so repetition is removed. Partial should be `learning/courses/quiz/questions/_question.html.erb`\r\n\r\n### Actual behavior\r\n\r\n- \u2705 Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- \u274c Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `Quiz` is detected as overlap and `Extra` is dropped from the partial path, this is confusing and inconsistent\r\n- \u274c Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   no module duplication is detected, so full module path to controller is prefixed on the object path \u2013 deep repetition\r\n\r\n### System configuration\r\n**Rails version**: 7.1.0\r\n\r\n**Ruby version**: 3.2.3\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50916/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50916/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50914",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50914/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50914/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50914/events",
        "html_url": "https://github.com/rails/rails/pull/50914",
        "id": 2106594568,
        "node_id": "PR_kwDNIULOZWKOxQ",
        "number": 50914,
        "title": "Generate devcontainer files by default",
        "user": {
            "login": "andrewn617",
            "id": 39735028,
            "node_id": "MDQ6VXNlcjM5NzM1MDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/39735028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewn617",
            "html_url": "https://github.com/andrewn617",
            "followers_url": "https://api.github.com/users/andrewn617/followers",
            "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewn617/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewn617/orgs",
            "repos_url": "https://api.github.com/users/andrewn617/repos",
            "events_url": "https://api.github.com/users/andrewn617/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewn617/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            },
            {
                "id": 1174770998,
                "node_id": "MDU6TGFiZWwxMTc0NzcwOTk4",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailbox",
                "name": "actionmailbox",
                "color": "f4a6cb",
                "default": false,
                "description": ""
            },
            {
                "id": 1180817762,
                "node_id": "MDU6TGFiZWwxMTgwODE3NzYy",
                "url": "https://api.github.com/repos/rails/rails/labels/actiontext",
                "name": "actiontext",
                "color": "3bc667",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-29T23:03:25Z",
        "updated_at": "2024-02-01T23:57:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50914",
            "html_url": "https://github.com/rails/rails/pull/50914",
            "diff_url": "https://github.com/rails/rails/pull/50914.diff",
            "patch_url": "https://github.com/rails/rails/pull/50914.patch",
            "merged_at": null
        },
        "body": "https://github.com/rails/rails/issues/50566\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created to generate `devcontainer` files for new Rails apps.\r\n\r\n### Detail\r\n\r\nThis Pull Request adds templates for devcontainer files (`devcontainer.json`, `Dockerfile` and `docker-compose.yml`) to be generated on `rails new`.\r\n\r\nBy default the devcontainer contains the following:\r\n- A redis container for Sidekiq and Action Cable\r\n- A database (SQLite, Postgres, MySQL or MariaDB)\r\n- A Headless chrome container for system tests\r\n- Active Storage configured to use the local disk and with preview features working\r\n\r\nIf `rails new` is called with options to skip any of the above they will be removed from the dev container config.\r\n\r\nThe dev container can be skipped entirely with the `--skip_devcontainer` option.\r\n\r\n### Additional information\r\n\r\nA few changes are needed to other files generated by rails new to make sure new Rails apps can be developed both in a container and locally.\r\n\r\n- Differentiate `CABLE_REDIS_URL` and `JOBS_REDIS_URL` instead of just using `REDIS_URL` for both (A PR will need to be opened to turbo-rails to make this change as well)\r\n- For MariaDB and MySQL use the `RAILS_DATABASE_HOST` if it's set (which it will be in a container) and fallback to `localhost`\r\n- For Postgres set the host (`RAILS_DATABASE_HOST`), username and password when in a container\r\n\r\nFor system tests, we need to configure the `Capybara` host and port to the selenium container. Rather than expose the implementation details of `Capybara` to the developer, we created a new `served_by` method on `SystemTestCase` to configure these.\r\n\r\n`db:system:change` re-generates `database.yml`. I added a `skip-devcontainer` option to this generator with a default of `true`. So, any existing apps that use this command will not get devcontainer config in their db yaml. Users can opt in to have devcontainer config added to the new db yml by adding `--skip-devcontainer=false`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50909",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50909/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50909/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50909/events",
        "html_url": "https://github.com/rails/rails/pull/50909",
        "id": 2104413485,
        "node_id": "PR_kwDNIULOZUSoNQ",
        "number": 50909,
        "title": "[ci skip] [docs] make increment requirement explicit",
        "user": {
            "login": "jamiemccarthy",
            "id": 40373,
            "node_id": "MDQ6VXNlcjQwMzcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40373?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamiemccarthy",
            "html_url": "https://github.com/jamiemccarthy",
            "followers_url": "https://api.github.com/users/jamiemccarthy/followers",
            "following_url": "https://api.github.com/users/jamiemccarthy/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamiemccarthy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamiemccarthy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamiemccarthy/subscriptions",
            "organizations_url": "https://api.github.com/users/jamiemccarthy/orgs",
            "repos_url": "https://api.github.com/users/jamiemccarthy/repos",
            "events_url": "https://api.github.com/users/jamiemccarthy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamiemccarthy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-29T00:07:29Z",
        "updated_at": "2024-01-29T00:20:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50909",
            "html_url": "https://github.com/rails/rails/pull/50909",
            "diff_url": "https://github.com/rails/rails/pull/50909.diff",
            "patch_url": "https://github.com/rails/rails/pull/50909.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAs of December, [ActionController::Metal::RateLimiting](https://github.com/rails/rails/blob/main/actionpack/lib/action_controller/metal/rate_limiting.rb) provides rate limiting through the `increment` method of any cache store. RateLimiting relies on a feature of the underlying store. This feature needs to be documented, so that it remains supported, and so alternative stores know to support it.\r\n\r\nThis PR has been created to document this behavior.\r\n\r\n### Detail\r\n\r\nThe feature is that `increment`, when passed `expires_in`, will set expiration time when the key is first created, and ignore that option if the key already exists.\r\n\r\nThat functionality is already tested [here](https://github.com/rails/rails/blob/cf26c5482924babca573e6c01594d77e3321ae58/activesupport/test/cache/behaviors/cache_increment_decrement_behavior.rb#L34), in the `CacheIncrementDecrementBehavior` test module.\r\n\r\nThis Pull Request changes the documentation of `ActiveSupport::Cache::Store.increment` to reflect a now-required feature of existing stores.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50909/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50909/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50901",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50901/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50901/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50901/events",
        "html_url": "https://github.com/rails/rails/pull/50901",
        "id": 2104069423,
        "node_id": "PR_kwDNIULOZUBH_g",
        "number": 50901,
        "title": "[Fix #50897] Autosaving `has_one` sets foreign key attribute when unchanged",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-28T09:30:20Z",
        "updated_at": "2024-01-30T10:42:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50901",
            "html_url": "https://github.com/rails/rails/pull/50901",
            "diff_url": "https://github.com/rails/rails/pull/50901.diff",
            "patch_url": "https://github.com/rails/rails/pull/50901.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes https://github.com/rails/rails/issues/50897\r\nSimilar to https://github.com/rails/rails/pull/46759\r\n\r\n### Detail\r\n\r\nUpdates `ActiveRecord::AutosaveAssociation#save_has_one_association` to only update the foreign key attribute on the child record if it has changed. This makes its behaviour consistent with `belongs_to` associations and ensures that `ActiveRecord::ReadOnlyAttributeError` isn't raised when no changes have been made to the attribute.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nNone.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50901/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50897",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50897/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50897/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50897/events",
        "html_url": "https://github.com/rails/rails/issues/50897",
        "id": 2103568249,
        "node_id": "I_kwDNIULOfWHneQ",
        "number": 50897,
        "title": "Incorrectly raising `ReadonlyAttributeError` when autosaving `has_one` association with readonly foreign key",
        "user": {
            "login": "Earlopain",
            "id": 14981592,
            "node_id": "MDQ6VXNlcjE0OTgxNTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/14981592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Earlopain",
            "html_url": "https://github.com/Earlopain",
            "followers_url": "https://api.github.com/users/Earlopain/followers",
            "following_url": "https://api.github.com/users/Earlopain/following{/other_user}",
            "gists_url": "https://api.github.com/users/Earlopain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Earlopain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Earlopain/subscriptions",
            "organizations_url": "https://api.github.com/users/Earlopain/orgs",
            "repos_url": "https://api.github.com/users/Earlopain/repos",
            "events_url": "https://api.github.com/users/Earlopain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Earlopain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 4,
        "created_at": "2024-01-27T12:29:15Z",
        "updated_at": "2024-01-28T20:15:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Rails 7.1 sets `raise_on_assign_to_attr_readonly` to true. In the following repro I set a column unrelated to `attr_readonly` yet the error is still being set. If I stop setting this column the error goes away.\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord.raise_on_assign_to_attr_readonly = true\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :forum_topics, force: true do |t|\r\n    t.integer :updater_id\r\n    t.text :title\r\n  end\r\n\r\n  create_table :forum_posts, force: true do |t|\r\n    t.integer :updater_id\r\n    t.integer :forum_topic_id\r\n    t.text :body\r\n  end\r\nend\r\n\r\nclass ForumTopic < ActiveRecord::Base\r\n  has_one :original_forum_post, -> { order(\"forum_posts.id asc\") }, class_name: \"ForumPost\", inverse_of: :forum_topic\r\n  validates_associated :original_forum_post\r\n  accepts_nested_attributes_for :original_forum_post\r\nend\r\n\r\nclass ForumPost < ActiveRecord::Base\r\n  attr_readonly :forum_topic_id\r\n  belongs_to :forum_topic\r\n\r\n  before_validation do |rec|\r\n    # next # Skipping setting this column makes the error go away\r\n    if persisted?\r\n      rec.updater_id = 456\r\n    else\r\n      rec.updater_id = 123\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_readonly_attr_exception\r\n    topic = ForumTopic.create!(title: \"Hi!\", original_forum_post_attributes: { body: \"What's up?\" })\r\n    topic.update(title: \"nevermind\") # => ActiveRecord::ReadonlyAttributeError: forum_topic_id\r\n    assert_equal(456, topic.original_forum_post.updater_id)\r\n  end\r\nend\r\n```\r\n\r\n### System configuration\r\n**Rails version**: master\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50895",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50895/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50895/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50895/events",
        "html_url": "https://github.com/rails/rails/pull/50895",
        "id": 2103219381,
        "node_id": "PR_kwDNIULOZTZN2g",
        "number": 50895,
        "title": "Enhanced ActiveStorage variant tracking control",
        "user": {
            "login": "JaceBayless",
            "id": 25781337,
            "node_id": "MDQ6VXNlcjI1NzgxMzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25781337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JaceBayless",
            "html_url": "https://github.com/JaceBayless",
            "followers_url": "https://api.github.com/users/JaceBayless/followers",
            "following_url": "https://api.github.com/users/JaceBayless/following{/other_user}",
            "gists_url": "https://api.github.com/users/JaceBayless/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JaceBayless/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JaceBayless/subscriptions",
            "organizations_url": "https://api.github.com/users/JaceBayless/orgs",
            "repos_url": "https://api.github.com/users/JaceBayless/repos",
            "events_url": "https://api.github.com/users/JaceBayless/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JaceBayless/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-27T04:41:38Z",
        "updated_at": "2024-01-27T04:42:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50895",
            "html_url": "https://github.com/rails/rails/pull/50895",
            "diff_url": "https://github.com/rails/rails/pull/50895.diff",
            "patch_url": "https://github.com/rails/rails/pull/50895.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n#### My Specific Use Case\r\n\r\nIn my project, where `ActiveStorage.track_variants = true`, I needed to generate a variant of an image (a thumbnail for a room on a floorplan) but did not want to create a variant record of the original image record. This is because I intended to save the variant on a child relation, separate from the original image record.\r\n\r\n#### The Challenge\r\nWith `ActiveStorage.track_variants = true` every variant generated through `ActiveStorage` is automatically tracked in the database to the original record. There are cases in this application where we **do** want to track these variant records so I was unable to change the default configuration. This meant to properly generate my variant I had to use `ImageProcessing::Vips` directly to not generate the variant record. This worked but generated two concerns for me:\r\n\r\n1. This specific code is dependent on `ImageProcessing::Vips` and if we were to ever migrate to another image processor we would have to remember to update this code as well instead of just relying on the `ActiveStorage` default processor.\r\n2. It strays enough from the standard pattern when generating `ActiveStorage` variants that without good documentation it can become confusing to maintain.\r\n\r\n### Detail\r\n\r\nThis pull request adds the `track` option to the `variant` method which allows for overriding of the `ActiveStorage.track_variants`. This is useful when in cases where you want to stray from the application's standard configuration.\r\n\r\n```ruby\r\nActiveSupport.track_variants\r\n# => true\r\nuser.avatar.variant(track: false, resize_to_limit: [100, 100])\r\n# => #<ActiveStorage::Variant:0x00007f4e0004ffb0> \r\n```\r\nand\r\n```ruby\r\nActiveSupport.track_variants\r\n# => false\r\nuser.avatar.variant(track: true, resize_to_limit: [100, 100])\r\n# => #<ActiveStorage::VariantWithRecord:0x00007f4e0004ffb0> \r\n```\r\n\r\n### Additional information\r\n\r\nThis is my first time contributing to Rails and I appreciate anyone who takes the time to read all this. I tried my best to follow all conventions and to keep all current functionality, but in the case that I missed something I'd be happy to discuss and fix whatever is needed.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50895/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50895/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50894",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50894/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50894/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50894/events",
        "html_url": "https://github.com/rails/rails/pull/50894",
        "id": 2103022783,
        "node_id": "PR_kwDNIULOZTPMhg",
        "number": 50894,
        "title": "Add cost argument to has_secure_password",
        "user": {
            "login": "t27duck",
            "id": 545604,
            "node_id": "MDQ6VXNlcjU0NTYwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/545604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t27duck",
            "html_url": "https://github.com/t27duck",
            "followers_url": "https://api.github.com/users/t27duck/followers",
            "following_url": "https://api.github.com/users/t27duck/following{/other_user}",
            "gists_url": "https://api.github.com/users/t27duck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t27duck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t27duck/subscriptions",
            "organizations_url": "https://api.github.com/users/t27duck/orgs",
            "repos_url": "https://api.github.com/users/t27duck/repos",
            "events_url": "https://api.github.com/users/t27duck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t27duck/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-26T22:52:13Z",
        "updated_at": "2024-01-27T05:30:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50894",
            "html_url": "https://github.com/rails/rails/pull/50894",
            "diff_url": "https://github.com/rails/rails/pull/50894.diff",
            "patch_url": "https://github.com/rails/rails/pull/50894.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThere may be instances where a developer is working in an environment where a higher cost than the default (12) for BCrypt is required either due to arbitrary security requirements or the recommended minimum changes and the version of bcrypt used isn't updated.\r\n\r\n### Detail\r\n\r\nThis change adds a `cost:` argument to `has_secure_password`. If provided, it will use that value for the password cost. Its value is validated to make sure it's between `BCrypt::Engine::MIN_COST` and `BCrypt::Engine::MAX_COST`.\r\n\r\nAdditionally `[password attribute]_cost` is exposed as a convenience method to determine the cost used for the set password hash. This can be used to review the current costs from a user record and either transparently upgrade the user's password or force a password reset.\r\n\r\n### Additional information\r\n\r\nI'm not 100% married to using `cost` as the argument name as it affects only new passwords created for the record going forward.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50892",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50892/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50892/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50892/events",
        "html_url": "https://github.com/rails/rails/pull/50892",
        "id": 2102819884,
        "node_id": "PR_kwDNIULOZTEC2A",
        "number": 50892,
        "title": "Documentation: Expand documentation on has_one_attached method [ci-skip].",
        "user": {
            "login": "Takahashi-Seiji",
            "id": 140453075,
            "node_id": "U_kgDOCF8k0w",
            "avatar_url": "https://avatars.githubusercontent.com/u/140453075?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Takahashi-Seiji",
            "html_url": "https://github.com/Takahashi-Seiji",
            "followers_url": "https://api.github.com/users/Takahashi-Seiji/followers",
            "following_url": "https://api.github.com/users/Takahashi-Seiji/following{/other_user}",
            "gists_url": "https://api.github.com/users/Takahashi-Seiji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Takahashi-Seiji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Takahashi-Seiji/subscriptions",
            "organizations_url": "https://api.github.com/users/Takahashi-Seiji/orgs",
            "repos_url": "https://api.github.com/users/Takahashi-Seiji/repos",
            "events_url": "https://api.github.com/users/Takahashi-Seiji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Takahashi-Seiji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-26T20:02:30Z",
        "updated_at": "2024-01-30T18:45:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50892",
            "html_url": "https://github.com/rails/rails/pull/50892",
            "diff_url": "https://github.com/rails/rails/pull/50892.diff",
            "patch_url": "https://github.com/rails/rails/pull/50892.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nGive further context about the requirements for using the has_one_attached method. \r\n\r\nI have an application that does not have an ActiveJob::Backend queue adapter. When I tried to destroy a record, it raised an error that I needed a queue adapter. There is a dependency between the has_one_attached method and a queue adapter. \r\n\r\nThat is why adding more context about the functionality and requirements about using the has_one_attached method is important. \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50889",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50889/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50889/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50889/events",
        "html_url": "https://github.com/rails/rails/pull/50889",
        "id": 2102411019,
        "node_id": "PR_kwDNIULOZStxpQ",
        "number": 50889,
        "title": "Introduce `ActiveSupport::TestCase.around`",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2024-01-26T15:29:23Z",
        "updated_at": "2024-01-29T19:58:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50889",
            "html_url": "https://github.com/rails/rails/pull/50889",
            "diff_url": "https://github.com/rails/rails/pull/50889.diff",
            "patch_url": "https://github.com/rails/rails/pull/50889.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nWhen discussing testing frameworks for new projects, the absence of `around` hooks is usually a focal point of the conversation that pushes consensus toward alternative test harnesses.\r\n\r\nMinitest itself [will not support built-in `around` hooks](https://github.com/minitest/minitest/issues/892). While the [minitest-hooks](https://github.com/jeremyevans/minitest-hooks) gem provides support for `around`, Active Support's callback system makes adding `around` hooks fairly trivial, and is guaranteed to be implemented in the same way as all other callbacks (Controller, Jobs, Mailers, etc.).\r\n\r\n\r\n### Detail\r\n\r\nAdd a callback, which runs around `TestCase#setup`, the `test` block, and `TestCase#teardown`. Yields the test class instance and the test case to the block:\r\n\r\n```ruby\r\nclass Test < ActiveSupport::TestCase\r\n  around do |test_case, &block|\r\n    Client.with(stubbed: true, &block)\r\n  end\r\nend\r\n```\r\n\r\n### Additional Information\r\n\r\nTo support this change, rename the `activesupport/test/testing/after_teardown_test.rb` file to `activesupport/test/testing/callbacks_test.rb`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50889/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50889/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50886",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50886/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50886/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50886/events",
        "html_url": "https://github.com/rails/rails/pull/50886",
        "id": 2102255707,
        "node_id": "PR_kwDNIULOZSlTeQ",
        "number": 50886,
        "title": "[Fix #50812] Don't duplicate selects, inner and outer joins when merging with STI",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-26T13:54:50Z",
        "updated_at": "2024-01-30T10:41:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50886",
            "html_url": "https://github.com/rails/rails/pull/50886",
            "diff_url": "https://github.com/rails/rails/pull/50886.diff",
            "patch_url": "https://github.com/rails/rails/pull/50886.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes https://github.com/rails/rails/issues/50812\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `#merge_select_values`, `#merge_joins` and `#merge_outer_joins` in `ActiveRecord::Relation::Merger` to unionise selects, inner and outer joins when the two sources of a `merge` are related via STI.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nThe only similar case left in `ActiveRecord::Relation::Merger` is when [merging preloads](https://github.com/rails/rails/blob/68eade83c87ae309191add6dfa4959d7d7e07464/activerecord/lib/active_record/relation/merger.rb#L101).\r\n\r\nI don't think that is similar to these cases since the preload values are simply used to preload associations. I thought I would just mention it anyway.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50886/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50886/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50885",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50885/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50885/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50885/events",
        "html_url": "https://github.com/rails/rails/pull/50885",
        "id": 2102202900,
        "node_id": "PR_kwDNIULOZSiasw",
        "number": 50885,
        "title": "Document Attached::Model#attachment_changes [ci skip]",
        "user": {
            "login": "tsvallender",
            "id": 122306143,
            "node_id": "U_kgDOB0o-Xw",
            "avatar_url": "https://avatars.githubusercontent.com/u/122306143?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tsvallender",
            "html_url": "https://github.com/tsvallender",
            "followers_url": "https://api.github.com/users/tsvallender/followers",
            "following_url": "https://api.github.com/users/tsvallender/following{/other_user}",
            "gists_url": "https://api.github.com/users/tsvallender/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tsvallender/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tsvallender/subscriptions",
            "organizations_url": "https://api.github.com/users/tsvallender/orgs",
            "repos_url": "https://api.github.com/users/tsvallender/repos",
            "events_url": "https://api.github.com/users/tsvallender/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tsvallender/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-26T13:18:39Z",
        "updated_at": "2024-01-26T14:14:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50885",
            "html_url": "https://github.com/rails/rails/pull/50885",
            "diff_url": "https://github.com/rails/rails/pull/50885.diff",
            "patch_url": "https://github.com/rails/rails/pull/50885.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAdds documentation for the `attachment_changes` method of Active Storage.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50885/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50883",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50883/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50883/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50883/events",
        "html_url": "https://github.com/rails/rails/pull/50883",
        "id": 2101864232,
        "node_id": "PR_kwDNIULOZSQNiA",
        "number": 50883,
        "title": "Put plural inverse association inference behind a configuration flag",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/83",
            "html_url": "https://github.com/rails/rails/milestone/83",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/83/labels",
            "id": 9964242,
            "node_id": "MI_kwDNIULOAJgK0g",
            "number": 83,
            "title": "7.2.0",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 9,
            "closed_issues": 7,
            "state": "open",
            "created_at": "2023-09-25T20:29:14Z",
            "updated_at": "2024-01-26T09:49:33Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 1,
        "created_at": "2024-01-26T09:19:56Z",
        "updated_at": "2024-01-26T17:23:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50883",
            "html_url": "https://github.com/rails/rails/pull/50883",
            "diff_url": "https://github.com/rails/rails/pull/50883.diff",
            "patch_url": "https://github.com/rails/rails/pull/50883.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50284\r\n\r\nWhile having the inverse association configured it generally positive as it avoid some extra queries etc, infering it may break legecy code, as evidenced by how it broke `ActiveStorage::Blob` in https://github.com/rails/rails/pull/50800\r\n\r\nAs such we can't just enable this behavior immediately, we need to provide and upgrade path for users.\r\n\r\nAt this stage this PR is just a quick draft to discuss how exactly we should gate this. We can just make it a regular framework default, but perhaps emitting a deprecation warning when we would have infered the inverse relation would help users upgrade?  cc @rafaelfranca as you generally have great insights on this kind of new framework default.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50883/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50879",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50879/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50879/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50879/events",
        "html_url": "https://github.com/rails/rails/pull/50879",
        "id": 2101071156,
        "node_id": "PR_kwDNIULOZRn03Q",
        "number": 50879,
        "title": "Transform actionpack documentation to Markdown",
        "user": {
            "login": "rafaelfranca",
            "id": 47848,
            "node_id": "MDQ6VXNlcjQ3ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rafaelfranca",
            "html_url": "https://github.com/rafaelfranca",
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-25T19:53:03Z",
        "updated_at": "2024-01-25T22:29:37Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50879",
            "html_url": "https://github.com/rails/rails/pull/50879",
            "diff_url": "https://github.com/rails/rails/pull/50879.diff",
            "patch_url": "https://github.com/rails/rails/pull/50879.patch",
            "merged_at": null
        },
        "body": "Related to #50759\r\n\r\n`./tools/rdoc-to-md -a --only=actionpack` to reproduce the results.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50879/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50873",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50873/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50873/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50873/events",
        "html_url": "https://github.com/rails/rails/pull/50873",
        "id": 2100413008,
        "node_id": "PR_kwDNIULOZREGFA",
        "number": 50873,
        "title": "dump schema: ignore tables from any postgres schema",
        "user": {
            "login": "gagalago",
            "id": 519226,
            "node_id": "MDQ6VXNlcjUxOTIyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/519226?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gagalago",
            "html_url": "https://github.com/gagalago",
            "followers_url": "https://api.github.com/users/gagalago/followers",
            "following_url": "https://api.github.com/users/gagalago/following{/other_user}",
            "gists_url": "https://api.github.com/users/gagalago/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gagalago/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gagalago/subscriptions",
            "organizations_url": "https://api.github.com/users/gagalago/orgs",
            "repos_url": "https://api.github.com/users/gagalago/repos",
            "events_url": "https://api.github.com/users/gagalago/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gagalago/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-25T13:31:52Z",
        "updated_at": "2024-01-25T13:41:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50873",
            "html_url": "https://github.com/rails/rails/pull/50873",
            "diff_url": "https://github.com/rails/rails/pull/50873.diff",
            "patch_url": "https://github.com/rails/rails/pull/50873.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nthis pull request improve the current implementation of ignoring table during the schema dump by allowing to ignore tables from other postgres schema than \"public\".\r\n\r\n### Detail\r\n\r\nThis Pull Request changes [REPLACE ME]\r\n\r\n### Additional information\r\n\r\nthe proposed implementation lack the ability to specify exactly from which schema, the table is ignored but I think that even do, it's better than the current implementation.\r\n\r\n- [pg_dump documentation](https://www.postgresql.org/docs/current/app-pgdump.html)\r\n- [pattern documentation](https://www.postgresql.org/docs/current/app-psql.html#APP-PSQL-PATTERNS\r\n\r\n### Checklist\r\n\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\nI feel that the code change is too small to request updating CHANGELOG or writing new tests",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50868",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50868/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50868/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50868/events",
        "html_url": "https://github.com/rails/rails/issues/50868",
        "id": 2099221011,
        "node_id": "I_kwDNIULOfR-SEw",
        "number": 50868,
        "title": "Comparing `Time` object with an integer doesn't throw an error ",
        "user": {
            "login": "tgxworld",
            "id": 4335742,
            "node_id": "MDQ6VXNlcjQzMzU3NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4335742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgxworld",
            "html_url": "https://github.com/tgxworld",
            "followers_url": "https://api.github.com/users/tgxworld/followers",
            "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
            "organizations_url": "https://api.github.com/users/tgxworld/orgs",
            "repos_url": "https://api.github.com/users/tgxworld/repos",
            "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgxworld/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-24T22:29:19Z",
        "updated_at": "2024-01-30T04:47:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/time\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_stuff\r\n    # This would have raise an argument error in Ruby for trying to compare a Time object with an Integer\r\n    assert Time.now >= Time.now.to_i - 999_999\r\n\r\n    assert Time.now.to_i >= Time.now.to_i - 999_999\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI'm not sure but I would expect one of the following:\r\n\r\n1. Raise an argument error like what Ruby does when trying to compare a `Time` object with an `Integer`\r\n2. Convert the `Time` object to an `Integer` before comparing\r\n3. Convert the `Integer` to a `Time` object before comparing\r\n\r\n### Actual behavior\r\n\r\nNo errors are raised and the code will always evaluate to `false`.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50867",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50867/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50867/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50867/events",
        "html_url": "https://github.com/rails/rails/pull/50867",
        "id": 2098780342,
        "node_id": "PR_kwDNIULOZPrnLA",
        "number": 50867,
        "title": "Initialize ActiveRecord::Migrator.migrations_paths at application initialization",
        "user": {
            "login": "fsateler",
            "id": 1322013,
            "node_id": "MDQ6VXNlcjEzMjIwMTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsateler",
            "html_url": "https://github.com/fsateler",
            "followers_url": "https://api.github.com/users/fsateler/followers",
            "following_url": "https://api.github.com/users/fsateler/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsateler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsateler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsateler/subscriptions",
            "organizations_url": "https://api.github.com/users/fsateler/orgs",
            "repos_url": "https://api.github.com/users/fsateler/repos",
            "events_url": "https://api.github.com/users/fsateler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsateler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-24T17:44:10Z",
        "updated_at": "2024-01-24T17:46:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50867",
            "html_url": "https://github.com/rails/rails/pull/50867",
            "diff_url": "https://github.com/rails/rails/pull/50867.diff",
            "patch_url": "https://github.com/rails/rails/pull/50867.patch",
            "merged_at": null
        },
        "body": "This is already done in rake tasks in the `load_config` task. However, if migrations want to be manipulated/used by a non-rake program this initialization would miss any extra directories configured by the user.\r\n\r\nWe move the initialization to an initializer block. With this we can remove the rake config since it depends on `environment` anyway.\r\n\r\n### Motivation / Background\r\n\r\nIn our app we use schema-based multitenancy which means we need to setup and migrate for each tenant. We have created\r\na few helpers to aid in this task. \r\nRecently, we began modularizing our app, and started moving our migrations into packs. \r\nThen we started facing issues with migrations that tried to run more than once.\r\nWe diagnosed the root cause that our tenant creation command was not invoking `db:load_config` before loading the schema.\r\nThis resulted in \"packed\" migrations not being recorded in the initial seed of the `schema_migrations` table. Then when we attempted to run migrations on that tenant those migrations would try to run and fail. \r\n\r\nThis Pull Request has been created because a fix for this is to ensure whenever the app is loaded, the correct default paths\r\nare loaded.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the initialization from a rake task to the app initialization process.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50867/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 3,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50862",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50862/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50862/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50862/events",
        "html_url": "https://github.com/rails/rails/pull/50862",
        "id": 2097954073,
        "node_id": "PR_kwDNIULOZO-RWg",
        "number": 50862,
        "title": "Accept Tempfile as ActiveStorage attachable",
        "user": {
            "login": "shouichi",
            "id": 99586,
            "node_id": "MDQ6VXNlcjk5NTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/99586?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shouichi",
            "html_url": "https://github.com/shouichi",
            "followers_url": "https://api.github.com/users/shouichi/followers",
            "following_url": "https://api.github.com/users/shouichi/following{/other_user}",
            "gists_url": "https://api.github.com/users/shouichi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shouichi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shouichi/subscriptions",
            "organizations_url": "https://api.github.com/users/shouichi/orgs",
            "repos_url": "https://api.github.com/users/shouichi/repos",
            "events_url": "https://api.github.com/users/shouichi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shouichi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-24T10:31:28Z",
        "updated_at": "2024-01-29T23:50:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50862",
            "html_url": "https://github.com/rails/rails/pull/50862",
            "diff_url": "https://github.com/rails/rails/pull/50862.diff",
            "patch_url": "https://github.com/rails/rails/pull/50862.patch",
            "merged_at": null
        },
        "body": "`File` is already accepted as an attachable, so why not?",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50861",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50861/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50861/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50861/events",
        "html_url": "https://github.com/rails/rails/pull/50861",
        "id": 2097724253,
        "node_id": "PR_kwDNIULOZOxlpw",
        "number": 50861,
        "title": "ActionView: Raise on invalid format",
        "user": {
            "login": "3v0k4",
            "id": 5238698,
            "node_id": "MDQ6VXNlcjUyMzg2OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5238698?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3v0k4",
            "html_url": "https://github.com/3v0k4",
            "followers_url": "https://api.github.com/users/3v0k4/followers",
            "following_url": "https://api.github.com/users/3v0k4/following{/other_user}",
            "gists_url": "https://api.github.com/users/3v0k4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3v0k4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3v0k4/subscriptions",
            "organizations_url": "https://api.github.com/users/3v0k4/orgs",
            "repos_url": "https://api.github.com/users/3v0k4/repos",
            "events_url": "https://api.github.com/users/3v0k4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3v0k4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-24T08:37:24Z",
        "updated_at": "2024-01-24T08:37:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50861",
            "html_url": "https://github.com/rails/rails/pull/50861",
            "diff_url": "https://github.com/rails/rails/pull/50861.diff",
            "patch_url": "https://github.com/rails/rails/pull/50861.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFixes #45636 \r\n\r\n### Detail\r\n\r\nThis Pull Request adds a check in `ActionView::PathSet#find_all` to ensure all passed formats are valid.\r\n\r\nSince `#find_all` is used by `#exists?` and `#find`, the check is extended to all the public methods in the class that search templates.\r\n\r\n### Additional information\r\n\r\n.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50861/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50858",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50858/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50858/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50858/events",
        "html_url": "https://github.com/rails/rails/pull/50858",
        "id": 2097141500,
        "node_id": "PR_kwDNIULOZOSs4A",
        "number": 50858,
        "title": "Support options for ActionMailer delivery callbacks",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107188,
                "node_id": "MDU6TGFiZWwxMDcxODg=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
                "name": "actionmailer",
                "color": "8B00FC",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T23:16:27Z",
        "updated_at": "2024-01-23T23:16:31Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50858",
            "html_url": "https://github.com/rails/rails/pull/50858",
            "diff_url": "https://github.com/rails/rails/pull/50858.diff",
            "patch_url": "https://github.com/rails/rails/pull/50858.patch",
            "merged_at": null
        },
        "body": "Closes https://github.com/rails/rails/issues/50830.\r\n\r\nThe code works, but docs/tests etc are currently missing. I want to validate the approach before proceeding.\r\n\r\nInside action mailer I am reusing private methods from the implementation of callbacks from the action controller, see https://github.com/rails/rails/blob/main/actionpack/lib/abstract_controller/callbacks.rb.\r\n\r\nThe questions to consider are:\r\n1. Should the mailer callbacks really depend on the internals of controller callbacks, considering that it already includes it https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionmailer/lib/action_mailer/base.rb#L493\r\n2. Controllers callbacks have a `raise_on_missing_callbacks_action`, see https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionpack/lib/abstract_controller/callbacks.rb#L36 which can be set via `config.action_controller. raise_on_missing_callbacks_action`. This kinda makes sense for action mailer too, so should we introduce `config.action_mailer.raise_on_missing_callbacks_action` config? \r\n3. Controller callbacks use the word `\"controller\"`, see https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionpack/lib/abstract_controller/callbacks.rb#L54, while for mailer we should use the `\"mailer\"` word or should we make the message text more generic? \r\n\r\ncc @bensheldon ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50856",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50856/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50856/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50856/events",
        "html_url": "https://github.com/rails/rails/pull/50856",
        "id": 2096854463,
        "node_id": "PR_kwDNIULOZODAXw",
        "number": 50856,
        "title": "Document autosave validation behavior for ActiveRecord associations [ci skip]",
        "user": {
            "login": "Dmoment",
            "id": 29010172,
            "node_id": "MDQ6VXNlcjI5MDEwMTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/29010172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dmoment",
            "html_url": "https://github.com/Dmoment",
            "followers_url": "https://api.github.com/users/Dmoment/followers",
            "following_url": "https://api.github.com/users/Dmoment/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dmoment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dmoment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dmoment/subscriptions",
            "organizations_url": "https://api.github.com/users/Dmoment/orgs",
            "repos_url": "https://api.github.com/users/Dmoment/repos",
            "events_url": "https://api.github.com/users/Dmoment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dmoment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-23T19:41:36Z",
        "updated_at": "2024-01-23T21:03:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50856",
            "html_url": "https://github.com/rails/rails/pull/50856",
            "diff_url": "https://github.com/rails/rails/pull/50856.diff",
            "patch_url": "https://github.com/rails/rails/pull/50856.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nThis Pull Request needs to be merged to document the behavior of autosave: true enabling validations for belongs_to and has_one associations in ActiveRecord. Currently, this behavior is implemented in the code but not mentioned in the official documentation. This can lead to confusion for developers who rely on the Rails guides for accurate information on how ActiveRecord associations work. Including this information will improve the clarity and comprehensiveness of the Rails documentation.\r\n-->\r\n\r\n### Detail\r\n\r\nThis Pull Request adds documentation comments to the belongs_to and has_one methods in ActiveRecord::Associations to explain that autosave: true also enables validations by default. This is to reflect the actual behavior of these methods, as described in the source code and observed in application behavior.\r\n\r\n### Additional information\r\n\r\nReference to the issue discussed in Rails: Undocumented - validations enabled by autosave #50807\r\nInline gemfile with bundler example -\r\n``` ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n  gem \"rails\", \"7.1.3\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :authors do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table :books do |t|\r\n    t.belongs_to :author\r\n    t.string :title\r\n  end\r\nend\r\n\r\nclass Author < ActiveRecord::Base\r\n  has_one :book, autosave: true\r\nend\r\n\r\nclass Book < ActiveRecord::Base\r\n  belongs_to :author\r\n  validates :title, presence: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_autosave_with_validations\r\n    author = Author.new(name: \"J.K. Rowling\")\r\n    author.build_book # Not setting a title to trigger validation failure\r\n\r\n    refute author.save, \"Author should not be saved due to book validation failure\"\r\n    assert author.book.errors.full_messages.include?(\"Title can't be blank\"), \"Book should contain error on title\"\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change, specifically the addition of documentation for autosave: true behavior.\r\n* [x] Commit message includes a detailed description of the changes, for example: [Doc #50807] Document autosave validation behavior for associations.\r\n* [x] Tests are not required as this is a documentation update.\r\n* [x] CHANGELOG is not updated since this is a minor documentation change and does not affect library behavior.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50856/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50852",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50852/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50852/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50852/events",
        "html_url": "https://github.com/rails/rails/pull/50852",
        "id": 2096320468,
        "node_id": "PR_kwDNIULOZNlvqQ",
        "number": 50852,
        "title": "Action View: Fallback to existing partial when possible",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T15:19:52Z",
        "updated_at": "2024-01-23T15:27:15Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50852",
            "html_url": "https://github.com/rails/rails/pull/50852",
            "diff_url": "https://github.com/rails/rails/pull/50852.diff",
            "patch_url": "https://github.com/rails/rails/pull/50852.patch",
            "merged_at": null
        },
        "body": "Closes [#50844][]\r\n\r\nMotivation / Background\r\n---\r\n\r\nA controller declared in the top-level module can render a top-level Active Model instance whose partial is declared in the root view directory (like `articles/_article.html.erb`).\r\n\r\nA controller scoped within a module can render an Active Model instance whose partial is similarly scoped within view directory (like `scoped/articles/_article.html.erb`).\r\n\r\nA controller scoped within a module cannot render an Active Model instance whose partial is declared in the root view directory (like `articles/_article.html.erb`), despite the absence of a similarly scoped partial.\r\n\r\nThis is intended behavior that's powered by\r\n[`config.action_view.prefix_partial_path_with_controller_namespace = true`][prefix_partial_path_with_controller_namespace] (`true` by default).\r\n\r\nThis change was introduced in March of 2012 as part of [#5625][].\r\n\r\nDetail\r\n---\r\n\r\nAs a consumer of Action View, my intuition is that the lookup would fallback, in the same way that a controller that inherits from `ApplicationController` could define its own view, then rely on fallback to render an `app/views/application` partial.\r\n\r\nThis commit modifies the behavior to gracefully fall back to the root-level view partial.\r\n\r\nChecklist\r\n---\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n[#59844]: https://github.com/rails/rails/issues/50844\r\n[prefix_partial_path_with_controller_namespace]: https://guides.rubyonrails.org/configuring.html#config-action-view-prefix-partial-path-with-controller-namespace\r\n[#5625]: https://github.com/rails/rails/pull/5625\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50852/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50850",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50850/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50850/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50850/events",
        "html_url": "https://github.com/rails/rails/issues/50850",
        "id": 2095807650,
        "node_id": "I_kwDNIULOfOt8og",
        "number": 50850,
        "title": "belongs_to association doesn't work with composite `primary_key` option",
        "user": {
            "login": "bguban",
            "id": 1564376,
            "node_id": "MDQ6VXNlcjE1NjQzNzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1564376?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bguban",
            "html_url": "https://github.com/bguban",
            "followers_url": "https://api.github.com/users/bguban/followers",
            "following_url": "https://api.github.com/users/bguban/following{/other_user}",
            "gists_url": "https://api.github.com/users/bguban/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bguban/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bguban/subscriptions",
            "organizations_url": "https://api.github.com/users/bguban/orgs",
            "repos_url": "https://api.github.com/users/bguban/repos",
            "events_url": "https://api.github.com/users/bguban/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bguban/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-23T10:56:14Z",
        "updated_at": "2024-01-25T15:00:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have an aggregator model that represents the same entity from different providers. This model has a single primary but some of the providers have a composite key. So I must use 2 columns to be able to build the reflection\r\n\r\n```\r\nclass Ticker < ApplicationRecord\r\n  # this model has gvkey and iid but they are not the primary key. just fields to build the relation\r\n  has_many :co_actions, primary_key: [:gvkey, :iid], query_constraints: [:gvkey, :iid]\r\nend\r\n\r\nclass CoAction\r\n  # this model has gvkey and iid as a foreign key\r\n  belongs_to :ticker, primary_key: [:gvkey, :iid], query_constraints: [:gvkey, :iid]\r\nend\r\n```\r\n\r\nWhen I run\r\n```\r\nCoAction.take.ticker\r\n```\r\nit returns\r\n```\r\n/activerecord-7.1.3/lib/active_record/reflection.rb:576:in `check_validity!': Association CoAction#ticker primary key [:gvkey, :iid] doesn't match with foreign key [\"gvkey\", \"iid\"]. Please specify query_constraints, or primary_key and foreign_key values. (ActiveRecord::CompositePrimaryKeyMismatchError)\r\n```\r\nbut I would expect to receive the ticker model instead. The composite_primary_key gem does what expected but rails 7.1.3 relation builder converts the primary key into a string instead. So what you see in the message is a string `\"[:gvkey, :iid]\"`. (ActiveRecord::Reflection::BelongsToReflection#association_primary_key)\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.1\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50850/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50849",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50849/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50849/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50849/events",
        "html_url": "https://github.com/rails/rails/pull/50849",
        "id": 2095108275,
        "node_id": "PR_kwDNIULOZMkKDg",
        "number": 50849,
        "title": "Fixes ActionView::Template::Error when pasting images via Trix",
        "user": {
            "login": "schristm",
            "id": 24068,
            "node_id": "MDQ6VXNlcjI0MDY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schristm",
            "html_url": "https://github.com/schristm",
            "followers_url": "https://api.github.com/users/schristm/followers",
            "following_url": "https://api.github.com/users/schristm/following{/other_user}",
            "gists_url": "https://api.github.com/users/schristm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schristm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schristm/subscriptions",
            "organizations_url": "https://api.github.com/users/schristm/orgs",
            "repos_url": "https://api.github.com/users/schristm/repos",
            "events_url": "https://api.github.com/users/schristm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schristm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1180817762,
                "node_id": "MDU6TGFiZWwxMTgwODE3NzYy",
                "url": "https://api.github.com/repos/rails/rails/labels/actiontext",
                "name": "actiontext",
                "color": "3bc667",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T02:14:58Z",
        "updated_at": "2024-01-23T02:15:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50849",
            "html_url": "https://github.com/rails/rails/pull/50849",
            "diff_url": "https://github.com/rails/rails/pull/50849.diff",
            "patch_url": "https://github.com/rails/rails/pull/50849.patch",
            "merged_at": null
        },
        "body": "The asset pipeline really shouldn't be checked for remote images regardless, but this also happens to fix an issue with images pasted into Trix that get serialized as action-text-attachments with \"blob:\" urls.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50849/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50848",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50848/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50848/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50848/events",
        "html_url": "https://github.com/rails/rails/issues/50848",
        "id": 2095071717,
        "node_id": "I_kwDNIULOfOBB5Q",
        "number": 50848,
        "title": "O(N^2) operation in `CollectionAssociation#replace_common_records_in_memory` and **another** O(N^2) operation in `ActiveStorage::Attached::Many#attach`",
        "user": {
            "login": "malavbhavsar",
            "id": 1080592,
            "node_id": "MDQ6VXNlcjEwODA1OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1080592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malavbhavsar",
            "html_url": "https://github.com/malavbhavsar",
            "followers_url": "https://api.github.com/users/malavbhavsar/followers",
            "following_url": "https://api.github.com/users/malavbhavsar/following{/other_user}",
            "gists_url": "https://api.github.com/users/malavbhavsar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malavbhavsar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malavbhavsar/subscriptions",
            "organizations_url": "https://api.github.com/users/malavbhavsar/orgs",
            "repos_url": "https://api.github.com/users/malavbhavsar/repos",
            "events_url": "https://api.github.com/users/malavbhavsar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malavbhavsar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T01:29:33Z",
        "updated_at": "2024-01-23T01:39:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nApologies for not following the template. I wasn't sure how to include my half-baked fix with it... I have full repro and additional information here: [malavbhavsar/rails#1](https://github.com/malavbhavsar/rails/pull/1) \r\n\r\n```ruby\r\nuser_1 = User.create!(name: \"Jason\")\r\nuser_1.highlights.attach(\r\n  1000.times.map do |i|\r\n    {\r\n      io: StringIO.new(\"Example string inside text_file_#{i}\"),\r\n      filename: \"text_file_#{i}.txt\",\r\n      content_type: \"text/plain\",\r\n    }\r\n  end\r\n)\r\nuser_1.save!\r\nuser_1.reload\r\n\r\n# Below operation takes 5 seconds\r\nBenchmark.bm(30) do |x|\r\n  x.report(\"attach performance without fix\") do\r\n    user_1.highlights.attach(\r\n      {\r\n        io: StringIO.new(\"another text file. wow.\"),\r\n        filename: \"text_file_another.txt\",\r\n        content_type: \"text/plain\",\r\n      }\r\n    )\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nExecution time of `#attach` should not depend on how big a collection is.\r\n\r\n### Actual behavior\r\nOn a big `has_many_attached` collection, `#attach` takes a long time. If there are 1000 existing attachments, it will take 5 seconds to attach a new one.\r\n\r\n### System configuration\r\n**Rails version**: `main`\r\n\r\n**Ruby version**: `3.1.4`\r\n\r\n### Explanation\r\nWhen we call `#attach` on an already big activestorage collection, it first calls `record.public_send(\"#{name}=\", blobs + attachables.flatten) # e.g. record.highlights=...`. This eventually ends up calling `CollectionAssociation#replace_common_records_in_memory` which has been discovered as a performance problem in #46652. It ends up calling `Array#index` **n** times and `#==` **(n*n1)/2** times. In this case, `499500` times.\r\n\r\nFor ActiveRecord has_many collections, this is not a huge problem because, in my experience, `post.comments = new_comments` is not a common pattern. The general use case is `post.comments << new_comment`, which does pretty well performance-wise.\r\n\r\nUnfortunately for `has_many_attached` collection, calling `#attach` is a common use case and it calls `record.things_attachments=` under the hood. Aside - seems like people are running into this [problem](https://discuss.rubyonrails.org/t/attach-pictures-gets-very-slow/81684).\r\n\r\n### Flamegraph\r\n![flamegraph_1](https://github.com/rails/rails/assets/1080592/0bef4acf-aaa7-44b8-a830-daf4a6717ab5)\r\n\r\n### Possible solutions\r\n- Get #46652 merged\r\n- If we are concerned about the increased complexity of `@target_index_map` in #46652, I tried the [same approach with a local variable](https://github.com/malavbhavsar/rails/pull/1/files#diff-ceff30ddab4e756e3a70ece45076eb17ff2f587a068dae657d2ad3a265a3f0d6) and it helped.\r\n\r\n### ANOTHER problem\r\nAs flamegraph shows, there is another O(N^2) in `#attach`. That one is coming from `Attached::Changes::CreateOneOfMany#find_attachment`. I haven't figured out a possible solution for it... I don't understand the change tracking(?) active storage is doing but if someone can help me understand I can try fixing it. I assume this will probably need a new `Attached::Changes::AttachMany` and `Attached::Changes::AttachOne`?\r\n\r\n### Workaround\r\nI have found that creating blobs and attachments manually gets rid of BOTH problems and doesn't leave `highlights_attachments` and `highlights_blobs` stale.\r\n\r\n```ruby\r\nuser_3 = User.create!(name: \"Lauren\")\r\nuser_3.highlights.attach(\r\n  1000.times.map do |i|\r\n    {\r\n      io: StringIO.new(\"Example string inside text_file_#{i}\"),\r\n      filename: \"text_file_#{i}.txt\",\r\n      content_type: \"text/plain\",\r\n    }\r\n  end\r\n)\r\nuser_3.save!\r\nuser_3.reload\r\n\r\n# Below operation takes 0.02 second\r\nApplicationRecord.transaction do\r\n  blob = ActiveStorage::Blob.create_and_upload!(\r\n    io: StringIO.new(\"another text file. wow.\"),\r\n    filename: \"text_file_another.txt\",\r\n    content_type: \"text/plain\",\r\n  )\r\n  user_3.highlights_attachments.create!(\r\n    blob_id: blob.id,\r\n    name: 'highlights',\r\n  )\r\n  user_3.save!\r\nend\r\n```\r\n\r\n### Final performance stats\r\n\r\n```\r\n                                              user     system      total        real\r\nattach performance without fix            4.711782   0.013564   4.725346 (  4.760098)\r\n                                              user     system      total        real\r\nattach performance with half-ish fix      1.855833   0.009120   1.864953 (  1.901090)\r\n                                              user     system      total        real\r\nattach performance manual                 0.024790   0.002624   0.027414 (  0.030269)\r\n```\r\n\r\ncc: @jonathanhefner, @jeffcarbs, @danny-pflughoeft",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50848/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50846",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50846/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50846/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50846/events",
        "html_url": "https://github.com/rails/rails/pull/50846",
        "id": 2094996849,
        "node_id": "PR_kwDNIULOZMeOHA",
        "number": 50846,
        "title": "Set ActiveRecord::RecordNotFound#id when raised from a call to #reload a deleted record",
        "user": {
            "login": "segiddins",
            "id": 1946610,
            "node_id": "MDQ6VXNlcjE5NDY2MTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1946610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/segiddins",
            "html_url": "https://github.com/segiddins",
            "followers_url": "https://api.github.com/users/segiddins/followers",
            "following_url": "https://api.github.com/users/segiddins/following{/other_user}",
            "gists_url": "https://api.github.com/users/segiddins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/segiddins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/segiddins/subscriptions",
            "organizations_url": "https://api.github.com/users/segiddins/orgs",
            "repos_url": "https://api.github.com/users/segiddins/repos",
            "events_url": "https://api.github.com/users/segiddins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/segiddins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T00:04:37Z",
        "updated_at": "2024-01-23T16:49:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50846",
            "html_url": "https://github.com/rails/rails/pull/50846",
            "diff_url": "https://github.com/rails/rails/pull/50846.diff",
            "patch_url": "https://github.com/rails/rails/pull/50846.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because I am writing some tests for my app around records being deleted by calling `reload`, and there was no easy way to assert that the record raising the `ActiveRecord::RecordNotFound` exception was the record I was expecting\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `raise_record_not_found_exception!` to find IDs based on the primary key from the where condition, if no IDs are explicitly passed\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50846/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50844",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50844/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50844/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50844/events",
        "html_url": "https://github.com/rails/rails/issues/50844",
        "id": 2094843344,
        "node_id": "I_kwDNIULOfNzF0A",
        "number": 50844,
        "title": "`ActionView::Template::Error`: Missing Active Model partial when rendered from Controller declared in module",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-22T22:05:18Z",
        "updated_at": "2024-01-23T15:20:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_model/railtie\"\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/\" => \"test#index\"\r\n    get \"/scoped\" => \"scoped/test#index\"\r\n  end\r\nend\r\n\r\nclass Model\r\n  include ActiveModel::Model\r\nend\r\n\r\nclass TestController < ActionController::Base\r\nend\r\n\r\nmodule Scoped\r\n  class TestController < ActionController::Base\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def setup\r\n    super\r\n    @views = Dir.mktmpdir\r\n    ActionController::Base.prepend_view_path @views\r\n\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"test/index.html.erb\", \"<%= render Model.new %>\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_controller_renders_unscoped_partial\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_scoped_controller_renders_scoped_partial\r\n    view_file \"scoped/models/_model.html.erb\", \"Rendered\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/scoped\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  # \ud83d\udd34 FAILS\r\n  def test_scoped_controller_renders_unscoped_partial\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/scoped\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  private\r\n    def app\r\n      Rails.application\r\n    end\r\n\r\n    def view_file(name, content)\r\n      path = Pathname.new(@views).join(name)\r\n      path.dirname.tap(&:mkpath)\r\n      path.write(content)\r\n    end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nA controller declared in the top-level module (as exercised by `test_controller_renders_unscoped_partial`) can render a top-level Active Model instance whose partial is declared in the root view directory (like `models/_model.html.erb`).\r\n\r\nA controller scoped within a module (as exercised by `test_scoped_controller_renders_scoped_partial`) can render an Active Model instance whose partial is similarly scoped within view directory (like `scoped/models/_model.html.erb`).\r\n\r\nA controller scoped within a module (as exercised by `test_scoped_controller_renders_unscoped_partial`) should be able to render an Active Model instance whose partial is declared in the root view directory (like `models/_model.html.erb`), despite the absence of a similarly scoped partial. **It should gracefully fall back to the root-level view partial).\r\n\r\n### Actual behavior\r\n\r\nThe `test_scoped_controller_renders_unscoped_partial` test raises an Action View error:\r\n\r\n```\r\nActionView::Template::Error (Missing partial scoped/models/_model with {:locale=>[:en], :formats=>[:html], :variants=>[], :handlers=>[:raw, :erb, :html, :builder, :ruby]}.\r\n                                                                                                          \r\nSearched in:                                                                                              \r\n  * \"/var/folders/4q/q308vb3s12x2rzrgppdsz0540000gn/T/d20240122-19453-6bve0b\"\r\n):                                                                                                        \r\n    1: <%= render Model.new %>                                                                            \r\n                                          \r\n```\r\n\r\nIt cannot resolve the `models/_model` partial, since the rendering controller is namespaced within `scoped/`.\r\n\r\n### System configuration\r\n**Rails version**: `7.1.3`\r\n\r\n**Ruby version**: `3.2.0`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50844/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50842",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50842/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50842/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50842/events",
        "html_url": "https://github.com/rails/rails/issues/50842",
        "id": 2094312908,
        "node_id": "I_kwDNIULOfNStzA",
        "number": 50842,
        "title": "How to use Azure Managed Identity for authentication and authorization for Ruby On Rails Active Storage?",
        "user": {
            "login": "avivansh",
            "id": 40461477,
            "node_id": "MDQ6VXNlcjQwNDYxNDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/40461477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/avivansh",
            "html_url": "https://github.com/avivansh",
            "followers_url": "https://api.github.com/users/avivansh/followers",
            "following_url": "https://api.github.com/users/avivansh/following{/other_user}",
            "gists_url": "https://api.github.com/users/avivansh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/avivansh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/avivansh/subscriptions",
            "organizations_url": "https://api.github.com/users/avivansh/orgs",
            "repos_url": "https://api.github.com/users/avivansh/repos",
            "events_url": "https://api.github.com/users/avivansh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/avivansh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-22T16:41:34Z",
        "updated_at": "2024-01-22T16:41:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Current setup\r\n```yaml\r\nazure:\r\n  service: AzureStorage\r\n  storage_account_name: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-NAME\") %>\r\n  storage_access_key: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-ACCESS-KEY\") %>\r\n  container: <%= VaultService.get_secret('AZURE-ATTACHMENTS-BUCKET-NAME') %>\r\n```\r\n\r\nGiven the implementation of accessing Azure Storage using Access Token. [Link](https://github.com/azure/azure-storage-ruby/tree/master/blob#access-token)\r\n \r\n```ruby\r\nrequire \"azure/storage/common\"\r\n\r\naccess_token = <your initial access token>\r\n\r\n# Creating an instance of `Azure::Storage::Common::Core::TokenCredential`\r\ntoken_credential = Azure::Storage::Common::Core::TokenCredential.new access_token\r\ntoken_signer = Azure::Storage::Common::Core::Auth::TokenSigner.new token_credential\r\nblob_token_client = Azure::Storage::Blob::BlobService.new(storage_account_name: <your_account_name>, signer: token_signer)\r\n```\r\n\r\n\r\nGiven the implementation of Active Storage for Ruby on Rails. It uses azure-storage-blob gem under the hood.\r\n[link](https://github.com/rails/rails/blob/61d6eb119fc53678d8f5028bd73ae77e69b91fb6/activestorage/lib/active_storage/service/azure_storage_service.rb#L16)\r\n\r\n```ruby\r\n    def initialize(storage_account_name:, storage_access_key:, container:, public: false, **options)\r\n      @client = Azure::Storage::Blob::BlobService.create(storage_account_name: storage_account_name, storage_access_key: storage_access_key, **options)\r\n      @signer = Azure::Storage::Common::Core::Auth::SharedAccessSignature.new(storage_account_name, storage_access_key)\r\n      @container = container\r\n      @public = public\r\n    end\r\n```\r\n\r\nNew Setup, config/storage.yml\r\n\r\n```yaml\r\nazure:\r\n  service: AzureStorage\r\n  storage_account_name: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-NAME\") %>\r\n  container: <%= VaultService.get_secret('AZURE-ATTACHMENTS-BUCKET-NAME') %>\r\n```\r\n\r\nMonkey patched to use the above information to use active storage using managed identity\r\n\r\n```ruby\r\nmodule ActiveStorage\r\n  class Service::AzureStorageService < Service\r\n    def initialize(storage_account_name:, container:, public: false, **options)\r\n      access_token = AzureAd::ManagedIdentityTokenProvider.new('https://storage.azure.com/', client_id: ENV['AKS_MANAGED_IDENTITY_ID']).get_authentication_header.split(' ').last\r\n      # Creating an instance of `Azure::Storage::Common::Core::TokenCredential`\r\n      token_credential = ::Azure::Storage::Common::Core::TokenCredential.new access_token\r\n      token_signer = ::Azure::Storage::Common::Core::Auth::TokenSigner.new token_credential\r\n      @client = Azure::Storage::Blob::BlobService.create(storage_account_name: storage_account_name, signer: token_signer, **options)\r\n      user_delegation_key = @client.get_user_delegation_key(DateTime.now - 1.minute, DateTime.now + 6.day + 23.hours)\r\n      @signer = Azure::Storage::Common::Core::Auth::SharedAccessSignature.new(storage_account_name: storage_account_name, user_delegation_key: user_delegation_key )\r\n      @container = container\r\n      @public = public\r\n    rescue StandardError => e\r\n      raise e unless Rake.respond_to?(:application) && (!Rake.application.top_level_tasks.exclude?('assets:precompile') || !Rake.application.top_level_tasks.exclude?('source_map:upload_source_map'))\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n\r\nIs this approach correct? (I am yet to test this.). Also, is there any other approach on how to achieve this? I have posted the question on [stackoverflow](https://stackoverflow.com/questions/77846948/can-we-connect-active-storage-in-ruby-on-rails-with-azure-using-managed-identity) as well.\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: Rails 6.1.7.3\r\n\r\n**Ruby version**: ruby 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50842/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50838",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50838/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50838/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50838/events",
        "html_url": "https://github.com/rails/rails/pull/50838",
        "id": 2093903637,
        "node_id": "PR_kwDNIULOZLiUKA",
        "number": 50838,
        "title": "Fix SQLite table definition parsing bug to handle commas in default function definitions",
        "user": {
            "login": "fractaledmind",
            "id": 5077225,
            "node_id": "MDQ6VXNlcjUwNzcyMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5077225?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fractaledmind",
            "html_url": "https://github.com/fractaledmind",
            "followers_url": "https://api.github.com/users/fractaledmind/followers",
            "following_url": "https://api.github.com/users/fractaledmind/following{/other_user}",
            "gists_url": "https://api.github.com/users/fractaledmind/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fractaledmind/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fractaledmind/subscriptions",
            "organizations_url": "https://api.github.com/users/fractaledmind/orgs",
            "repos_url": "https://api.github.com/users/fractaledmind/repos",
            "events_url": "https://api.github.com/users/fractaledmind/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fractaledmind/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-22T13:18:21Z",
        "updated_at": "2024-01-22T13:18:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50838",
            "html_url": "https://github.com/rails/rails/pull/50838",
            "diff_url": "https://github.com/rails/rails/pull/50838.diff",
            "patch_url": "https://github.com/rails/rails/pull/50838.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request fixes a bug in the low-level SQLite adapter introspection logic. I came across the bug when working with virtual columns and JSON, but there are many possible cases where this would cause problems. Here is one reproducible bug script though:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\");\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.json :payload, null: false, default: {}\r\n    t.virtual :external_id, type: :string, as: \"JSON_EXTRACT(payload, '$.id')\", stored: true, null: false, index: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_with_comma_in_definition_is_autopopulated\r\n    post = Post.create!(payload: { id: 'pst_1' })\r\n\r\n    assert_equal 'pst_1', post.external_id\r\n  end\r\nend\r\n```\r\n\r\n### Detail\r\n\r\nThis Pull Request more intelligently parses the SQL string description of the table to ensure that we only split by commas that mark a new column definition. In order to accomplish this, the table parsing method needs the list of column names for the table. When `table_structure_sql` is called by `table_structure_with_collation`, these can be supplied as they are already present; when it is called by `foreign_keys`, however, they are not present and thus must be fetched.\r\n\r\nI also added a simple regression test as a part of the virtual column test case.\r\n\r\n### Additional information\r\n\r\nThis bug has existed for a long time, but I most recently touched the relevant code in https://github.com/rails/rails/pull/49376.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\ncc: @byroot (this is related to #49346), @tenderlove (this is related to https://github.com/rails/rails/pull/49290), @yahonda (this is related to https://github.com/rails/rails/pull/49376)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50838/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50837",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50837/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50837/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50837/events",
        "html_url": "https://github.com/rails/rails/pull/50837",
        "id": 2093866588,
        "node_id": "PR_kwDNIULOZLgRiw",
        "number": 50837,
        "title": "Ensure pre-7.1 migrations use legacy index names when using `rename_table`",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-22T12:59:01Z",
        "updated_at": "2024-01-28T20:19:02Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50837",
            "html_url": "https://github.com/rails/rails/pull/50837",
            "diff_url": "https://github.com/rails/rails/pull/50837.diff",
            "patch_url": "https://github.com/rails/rails/pull/50837.patch",
            "merged_at": null
        },
        "body": "Fixes https://github.com/rails/rails/issues/50833.\r\nFollow up to https://github.com/rails/rails/pull/47753 and https://github.com/rails/rails/pull/47863.\r\n\r\nThe easiest way to preserve the old behavior is to rename indexes back after the `rename_table` was run.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50837/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50835",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50835/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50835/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50835/events",
        "html_url": "https://github.com/rails/rails/issues/50835",
        "id": 2093550361,
        "node_id": "I_kwDNIULOfMkLGQ",
        "number": 50835,
        "title": "ActiveStorage::FileNotFoundError (ActiveStorage::FileNotFoundError)",
        "user": {
            "login": "raoehtesham03",
            "id": 152256436,
            "node_id": "U_kgDOCRM_tA",
            "avatar_url": "https://avatars.githubusercontent.com/u/152256436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoehtesham03",
            "html_url": "https://github.com/raoehtesham03",
            "followers_url": "https://api.github.com/users/raoehtesham03/followers",
            "following_url": "https://api.github.com/users/raoehtesham03/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoehtesham03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoehtesham03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoehtesham03/subscriptions",
            "organizations_url": "https://api.github.com/users/raoehtesham03/orgs",
            "repos_url": "https://api.github.com/users/raoehtesham03/repos",
            "events_url": "https://api.github.com/users/raoehtesham03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoehtesham03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1071962662,
                "node_id": "MDU6TGFiZWwxMDcxOTYyNjYy",
                "url": "https://api.github.com/repos/rails/rails/labels/more-information-needed",
                "name": "more-information-needed",
                "color": "bfdadc",
                "default": false,
                "description": "When reporter needs to provide more information"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-22T10:07:53Z",
        "updated_at": "2024-01-23T13:33:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have upgraded my rails application from 6.0 to 6.1 . Since then when I am  executing below queries\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n d = Document.find(768365)\r\n d.page_image.variant(resize_to_limit: Document::PAGE_IMAGE_STYLES[:small]).processed\r\n\r\n```\r\nI am getting this error\r\n### Actual behavior\r\n  ActiveStorage::FileNotFoundError (ActiveStorage::FileNotFoundError)\r\n\r\n### System configuration\r\n**Rails version**: 7.0.8\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50835/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50833",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50833/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50833/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50833/events",
        "html_url": "https://github.com/rails/rails/issues/50833",
        "id": 2092932851,
        "node_id": "I_kwDNIULOfL-e8w",
        "number": 50833,
        "title": "`ActiveRecord::Migration[7.0]`'s `rename_table` uses 7.1's new truncated index name format",
        "user": {
            "login": "r7kamura",
            "id": 111689,
            "node_id": "MDQ6VXNlcjExMTY4OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/111689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/r7kamura",
            "html_url": "https://github.com/r7kamura",
            "followers_url": "https://api.github.com/users/r7kamura/followers",
            "following_url": "https://api.github.com/users/r7kamura/following{/other_user}",
            "gists_url": "https://api.github.com/users/r7kamura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/r7kamura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/r7kamura/subscriptions",
            "organizations_url": "https://api.github.com/users/r7kamura/orgs",
            "repos_url": "https://api.github.com/users/r7kamura/repos",
            "events_url": "https://api.github.com/users/r7kamura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/r7kamura/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-22T02:09:26Z",
        "updated_at": "2024-01-23T03:17:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.3\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_index_name_after_rename_table_with_long_table_name\r\n    long_table_name = \"a\" * 48\r\n\r\n    migration_class = Class.new(ActiveRecord::Migration[7.0]) do\r\n      define_method :migrate do |x|\r\n        create_table :posts do |t|\r\n          t.string :title\r\n          t.index :title\r\n        end\r\n        rename_table :posts, long_table_name\r\n      end\r\n    end\r\n    migration = migration_class.new\r\n\r\n    ActiveRecord::Migrator.new(\r\n      :up,\r\n      [migration],\r\n      ActiveRecord::Base.connection.schema_migration,\r\n      ActiveRecord::Base.connection.internal_metadata\r\n    ).migrate\r\n\r\n    assert_equal \"index_#{long_table_name}_on_title\", ActiveRecord::Base.connection.indexes(long_table_name).first.name\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe above test should pass.\r\n\r\nThis means that since the index name was renamed to `index_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_on_title` in Rails 7.0 and earlier, if `ActiveRecord::Migration[7.0]` or earlier is specified, the same name should be used even in Rails 7.1 or later.\r\n\r\n### Actual behavior\r\n\r\nThe above test fails with the following output:\r\n\r\n```\r\nF\r\n\r\nFailure:\r\nBugTest#test_index_name_after_rename_table_with_long_table_name [example.rb:53]:\r\n--- expected\r\n+++ actual\r\n@@ -1 +1 @@\r\n-\"index_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_on_title\"\r\n+\"idx_on_title_0b3d36c24b\"\r\n\r\n\r\n\r\nbin/rails test example.rb:32\r\n\r\n\r\n\r\nFinished in 0.026827s, 37.2753 runs/s, 37.2753 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\nAs a result, if db/migrate contains `rename_table`, the index names created between Rails 7.0 and 7.1 may be different.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]\r\n\r\n### Other information\r\n\r\nThis is due to the following change:\r\n\r\n- https://github.com/rails/rails/pull/47753\r\n\r\nI think a similar change to the following is needed for `#rename_table`:\r\n\r\n- https://github.com/rails/rails/pull/47863\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50833/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50830",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50830/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50830/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50830/events",
        "html_url": "https://github.com/rails/rails/issues/50830",
        "id": 2092565763,
        "node_id": "I_kwDNIULOfLoFAw",
        "number": 50830,
        "title": "Add support for `ActionMailer.*_delivery` callback `only` and `except` options",
        "user": {
            "login": "viralpraxis",
            "id": 39729785,
            "node_id": "MDQ6VXNlcjM5NzI5Nzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/39729785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viralpraxis",
            "html_url": "https://github.com/viralpraxis",
            "followers_url": "https://api.github.com/users/viralpraxis/followers",
            "following_url": "https://api.github.com/users/viralpraxis/following{/other_user}",
            "gists_url": "https://api.github.com/users/viralpraxis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viralpraxis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viralpraxis/subscriptions",
            "organizations_url": "https://api.github.com/users/viralpraxis/orgs",
            "repos_url": "https://api.github.com/users/viralpraxis/repos",
            "events_url": "https://api.github.com/users/viralpraxis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viralpraxis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107188,
                "node_id": "MDU6TGFiZWwxMDcxODg=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
                "name": "actionmailer",
                "color": "8B00FC",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-21T12:31:43Z",
        "updated_at": "2024-01-21T18:59:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nCurrently ActionMailer's `*_delivery` callbacks do not support `only` and `except` filters, which are quite useful because some callback actions are required for a subset of mailer methods. Technically, only/except can be emulated via `if` option, but another problem is that's not clear from the documentation which options can be passed (currently `only` and `except` are simply ignored).\r\n\r\nI believe that many developers might except `ActionMailer` to behave just like `ActionController`,  so current API implementation might lead to unexpected bugs.\r\n\r\nNote that documentation on `before_action` (and similar callbacks) explicitly refer to possible options:\r\n\r\n> before_action(names, block)[Link](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-before_action)\r\n> Append a callback before actions. See [_insert_callbacks](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_insert_callbacks) for parameter details.\r\n\r\n### Expected behavior\r\nAt least some explicit info on possible `*_delivery` callback options, or (which would be better) support for `only` and `except` options.\r\n\r\n### Actual behavior\r\nMentioned options are simply ignored, no documentation on possible options.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50829",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50829/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50829/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50829/events",
        "html_url": "https://github.com/rails/rails/pull/50829",
        "id": 2092440404,
        "node_id": "PR_kwDNIULOZKUusw",
        "number": 50829,
        "title": "Fix query references for non-hash association where clause values",
        "user": {
            "login": "ezekg",
            "id": 6979737,
            "node_id": "MDQ6VXNlcjY5Nzk3Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6979737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezekg",
            "html_url": "https://github.com/ezekg",
            "followers_url": "https://api.github.com/users/ezekg/followers",
            "following_url": "https://api.github.com/users/ezekg/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezekg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezekg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezekg/subscriptions",
            "organizations_url": "https://api.github.com/users/ezekg/orgs",
            "repos_url": "https://api.github.com/users/ezekg/repos",
            "events_url": "https://api.github.com/users/ezekg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezekg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-21T06:11:40Z",
        "updated_at": "2024-01-30T22:33:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50829",
            "html_url": "https://github.com/rails/rails/pull/50829",
            "diff_url": "https://github.com/rails/rails/pull/50829.diff",
            "patch_url": "https://github.com/rails/rails/pull/50829.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nThis PR fixes an issue where non-hash where-clause values for associations would not set `references_values`. This could (and often does) end up causing hard-to-debug SQL errors due to association name vs table name mismatch, e.g. querying on a singular association name while the actual join table is plural, or vice-versa due to a prior scope.\r\n\r\nMore detailed reproduction script:  https://gist.github.com/ezekg/5969735eb8c5092fb25198bd8fac4053\r\n\r\n#### Before\r\n\r\n```rb\r\nscope = Comment.where(post: { id: post })\r\nscope.references_values # => [\"post\"]\r\n\r\nscope = Comment.where(post: post)\r\nscope.references_values # => []\r\n```\r\n\r\nI'd expect these to be synonymous since [`#id` is called on `post`](https://github.com/ezekg/rails/blob/c37450b76b24cac7951032c4210db17a9c1b7f51/activerecord/lib/active_record/relation/predicate_builder.rb#L58) for the second case.\r\n\r\n#### After\r\n\r\n```rb\r\nscope = Comment.where(post: { id: post })\r\nscope.references_values # => [\"post\"]\r\n\r\nscope = Comment.where(post: post)\r\nscope.references_values # => [\"post\"]\r\n```\r\n\r\nWith this patch, they're now more or less synonymous, both setting `references_values`.\r\n\r\nSince this is likely a breaking change (it broke a few tests in [keygen-sh/keygen-api](https://github.com/keygen-sh/keygen-api) when testing against the patch), this may require some more thought. But it is worth noting that all broken tests were related to various workarounds for this particular bug.\r\n\r\nLet me know what you guys think is the best course of action here.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50828",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50828/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50828/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50828/events",
        "html_url": "https://github.com/rails/rails/pull/50828",
        "id": 2092434369,
        "node_id": "PR_kwDNIULOZKUcQg",
        "number": 50828,
        "title": "Add examples for form helper tags [ci skip]",
        "user": {
            "login": "akhilgkrishnan",
            "id": 22231095,
            "node_id": "MDQ6VXNlcjIyMjMxMDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22231095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akhilgkrishnan",
            "html_url": "https://github.com/akhilgkrishnan",
            "followers_url": "https://api.github.com/users/akhilgkrishnan/followers",
            "following_url": "https://api.github.com/users/akhilgkrishnan/following{/other_user}",
            "gists_url": "https://api.github.com/users/akhilgkrishnan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akhilgkrishnan/subscriptions",
            "organizations_url": "https://api.github.com/users/akhilgkrishnan/orgs",
            "repos_url": "https://api.github.com/users/akhilgkrishnan/repos",
            "events_url": "https://api.github.com/users/akhilgkrishnan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akhilgkrishnan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-21T05:48:04Z",
        "updated_at": "2024-02-01T04:02:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50828",
            "html_url": "https://github.com/rails/rails/pull/50828",
            "diff_url": "https://github.com/rails/rails/pull/50828.diff",
            "patch_url": "https://github.com/rails/rails/pull/50828.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nThis Pull Request add examples for `FormTagHelper` methods.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50828/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50827",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50827/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50827/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50827/events",
        "html_url": "https://github.com/rails/rails/issues/50827",
        "id": 2092292151,
        "node_id": "I_kwDNIULOfLXYNw",
        "number": 50827,
        "title": "System tests not working on Rails 7.1.3 running on a remote machine/docker container.",
        "user": {
            "login": "srabuini",
            "id": 286604,
            "node_id": "MDQ6VXNlcjI4NjYwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/286604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srabuini",
            "html_url": "https://github.com/srabuini",
            "followers_url": "https://api.github.com/users/srabuini/followers",
            "following_url": "https://api.github.com/users/srabuini/following{/other_user}",
            "gists_url": "https://api.github.com/users/srabuini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srabuini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srabuini/subscriptions",
            "organizations_url": "https://api.github.com/users/srabuini/orgs",
            "repos_url": "https://api.github.com/users/srabuini/repos",
            "events_url": "https://api.github.com/users/srabuini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srabuini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-21T00:44:06Z",
        "updated_at": "2024-01-30T12:48:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nI've been running my system tests using a remote browser (on a docker container) since Rails 7.0 without a problem, with the following set up.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nclass ApplicationSystemTestCase < ActionDispatch::SystemTestCase\r\n  driven_by :selenium,\r\n            using: :chrome,\r\n            screen_size: [1400, 1400],\r\n            options: { browser: :remote,\r\n                       url: 'http://chrome-server:4444' } do |driver_option|\r\n    driver_option.add_argument 'disable-dev-shm-usage'\r\n  end\r\n```\r\n\r\nIt looks like the problem was introduced in #49908 and related issues/fixes.\r\n\r\nI fixed it locally just monkeypatching `Selenium::Webdriver::DriverFinder.path` just to return nil.\r\n\r\nHaving a look at the code, I think that it would be nice to avoid `Browser#preload` when browser is `:remote` in:\r\n\r\nhttps://github.com/rails/rails/blob/3064d4f53a48beb107a549a2249820350e698050/actionpack/lib/action_dispatch/system_testing/driver.rb#L19\r\n\r\nIf you think it's the right way to tackle it, I could post a fix.\r\n\r\n### Actual behavior\r\nAfter a while, an exception is raised:\r\n\r\n```\r\nSelenium::WebDriver::Error::SessionNotCreatedError: Could not start a new session. Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: unknown error: no chrome binary at /root/.cache/selenium/chrome/linux64/120.0.6099.109/chrome \r\nHost info: host: 'c3260b1b08ce', ip: '192.168.16.3'\r\nBuild info: version: '4.10.0', revision: 'c14d967899'\r\nSystem info: os.name: 'Linux', os.arch: 'aarch64', os.version: '6.5.11-linuxkit', java.version: '11.0.18'\r\nDriver info: driver.version: unknown\r\nBuild info: version: '4.10.0', revision: 'c14d967899'\r\nSystem info: os.name: 'Linux', os.arch: 'aarch64', os.version: '6.5.11-linuxkit', java.version: '11.0.18'\r\nDriver info: driver.version: unknown\r\n    [remote server] org.openqa.selenium.grid.node.config.DriverServiceSessionFactory(DriverServiceSessionFactory.java):210:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.config.DriverServiceSessionFactory(DriverServiceSessionFactory.java):69:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.local.SessionSlot(SessionSlot.java):147:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.local.LocalNode(LocalNode.java):467:in `newSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor(LocalDistributor.java):643:in `startSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor(LocalDistributor.java):560:in `newSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable(LocalDistributor.java):814:in `handleNewSessionRequest'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable(LocalDistributor.java):773:in `lambda$run$1'\r\n    [remote server] java.util.concurrent.ThreadPoolExecutor(ThreadPoolExecutor.java):1128:in `runWorker'\r\n    [remote server] java.util.concurrent.ThreadPoolExecutor$Worker(ThreadPoolExecutor.java):628:in `run'\r\n    [remote server] java.lang.Thread(Thread.java):829:in `run'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:55:in `assert_ok'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:34:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `create_response'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/default.rb:103:in `request'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:601:in `execute'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:53:in `create_session'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:317:in `block in create_bridge'\r\n    <internal:kernel>:90:in `tap'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:316:in `create_bridge'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:74:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/driver.rb:38:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:57:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:57:in `for'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver.rb:89:in `for'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/selenium/driver.rb:83:in `browser'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:55:in `block in register_selenium'\r\n    <internal:kernel>:90:in `tap'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:54:in `register_selenium'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:41:in `block in register'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/session.rb:105:in `driver'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/session.rb:91:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:421:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:421:in `block in session_pool'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:317:in `current_session'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/dsl.rb:46:in `page'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:106:in `save_image'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:36:in `take_screenshot'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:47:in `take_failed_screenshot'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/setup_and_teardown.rb:8:in `before_teardown'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.1..3\r\n\r\n**Ruby version**: 3.2.2 (2023-03-30 revision e51014f9c0) [aarch64-linux]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50826",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50826/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50826/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50826/events",
        "html_url": "https://github.com/rails/rails/pull/50826",
        "id": 2092286908,
        "node_id": "PR_kwDNIULOZKMR9Q",
        "number": 50826,
        "title": "[docs] Add more examples to `#in_order_of` [ci-skip]",
        "user": {
            "login": "thdaraujo",
            "id": 707418,
            "node_id": "MDQ6VXNlcjcwNzQxOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thdaraujo",
            "html_url": "https://github.com/thdaraujo",
            "followers_url": "https://api.github.com/users/thdaraujo/followers",
            "following_url": "https://api.github.com/users/thdaraujo/following{/other_user}",
            "gists_url": "https://api.github.com/users/thdaraujo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thdaraujo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thdaraujo/subscriptions",
            "organizations_url": "https://api.github.com/users/thdaraujo/orgs",
            "repos_url": "https://api.github.com/users/thdaraujo/repos",
            "events_url": "https://api.github.com/users/thdaraujo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thdaraujo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-21T00:21:26Z",
        "updated_at": "2024-01-31T16:16:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50826",
            "html_url": "https://github.com/rails/rails/pull/50826",
            "diff_url": "https://github.com/rails/rails/pull/50826.diff",
            "patch_url": "https://github.com/rails/rails/pull/50826.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n`#in_order_of` is an excellent method and makes ordering enum columns easier, and many complex order case/when queries can be refactored to use it.\r\n\r\nThis PR was created because I believe having more examples would help people understand this method a bit better.\r\n\r\nAlso, I think it's useful to document that this method will order results, but also FILTER them, excluding rows in which the column doesn't match any of the given values.\r\n\r\nSo I expanded the description and added these examples:\r\n- what happens when dealing with `enum` +columns+\r\n- what happens when passing `nil` as a +value+ for nullable columns\r\n\r\nHere's a gist with some tests: https://gist.github.com/thdaraujo/7d9aa5ffd1b61bf57604ded14535e357\r\n\r\nI'd be happy to add other examples for other usecases you think are relevant, just let me know!\r\n\r\n### Detail\r\n\r\nThis Pull Request expands the documentation for [in_order_of](https://api.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-in_order_of)\r\n\r\n### Additional information\r\n\r\nn/a\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* ~[ ] Tests are added or updated if you fix a bug or add a feature.~ not applicable\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50826/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50823",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50823/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50823/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50823/events",
        "html_url": "https://github.com/rails/rails/pull/50823",
        "id": 2092154145,
        "node_id": "PR_kwDNIULOZKF0tA",
        "number": 50823,
        "title": "Add methods to `ActiveRecord::Relation::FinderMethods` to determine if it contains exactly/more than/less than N records",
        "user": {
            "login": "jordinl",
            "id": 16135423,
            "node_id": "MDQ6VXNlcjE2MTM1NDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16135423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordinl",
            "html_url": "https://github.com/jordinl",
            "followers_url": "https://api.github.com/users/jordinl/followers",
            "following_url": "https://api.github.com/users/jordinl/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordinl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordinl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordinl/subscriptions",
            "organizations_url": "https://api.github.com/users/jordinl/orgs",
            "repos_url": "https://api.github.com/users/jordinl/repos",
            "events_url": "https://api.github.com/users/jordinl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordinl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2024-01-20T16:56:20Z",
        "updated_at": "2024-02-01T14:30:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50823",
            "html_url": "https://github.com/rails/rails/pull/50823",
            "diff_url": "https://github.com/rails/rails/pull/50823.diff",
            "patch_url": "https://github.com/rails/rails/pull/50823.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nI've had to check in a few places if a relation had exactly or less than or more than N records. On top of that, if the collection contains a lot of records, counting on the entire collection not only is slower but also unnecessary and limiting the count the first N or N+1 records is sufficient and faster.\r\n\r\n### Detail\r\n\r\nAdds the following methods to `ActiveRecord::Relation::FinderMethods`:\r\n  * `exactly?` returns true if the relation contains exactly N records, false otherwise.\r\n  * `at_least?` returns true if the relation contains at least N records, false otherwise.\r\n  * `at_most?` returns true if the relation contains at most N records, false otherwise.\r\n  * `less_than?` returns true if the relation contains less than N records, false otherwise.\r\n  * `more_than?` returns true if the relation contains more than N records, false otherwise.\r\n\r\nThese methods perform a `limit(M).count` (where M = N or N + 1) under the hood.\r\n\r\n### Additional information\r\n\r\nI think the naming of these methods is fine as is. Don't know if others would prefer to prefix these with `has_` or `contains_`, ie `has_exactly?` or `contains_exactly?`.\r\n\r\nWith regards to performance of doing the count with and without the limit. Without the limit when there are 8M records I get:\r\n\r\n```sql\r\n  Referral Count (135.2ms)  SELECT COUNT(*) FROM \"referrals\" WHERE \"referrals\".\"company_id\" = $1  [[\"company_id\", \"29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535\"]]\r\n=> 8467786\r\n```\r\n\r\nWith a limit of a 100:\r\n\r\n```sql\r\n  Referral Count (0.4ms)  SELECT COUNT(*) FROM (SELECT 1 AS one FROM \"referrals\" WHERE \"referrals\".\"company_id\" = $1 LIMIT $2) subquery_for_count  [[\"company_id\",\"29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535\", [\"LIMIT\", 100]]\r\n=> 100\r\n```\r\n\r\nSo it's 300x faster even when doing an index only scan:\r\n\r\n```sql\r\nexplain SELECT COUNT(*) FROM \"referrals\" WHERE \"referrals\".\"company_id\" ='29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535';\r\n\r\n                                                                          QUERY PLAN                                                                           \r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n Finalize Aggregate  (cost=136744.58..136744.59 rows=1 width=8)\r\n   ->  Gather  (cost=136744.36..136744.57 rows=2 width=8)\r\n         Workers Planned: 2\r\n         ->  Partial Aggregate  (cost=135744.36..135744.37 rows=1 width=8)\r\n               ->  Parallel Index Only Scan using index_referrals_on_company_id_and_conversion_state on referrals  (cost=0.56..127008.31 rows=3494420 width=0)\r\n                     Index Cond: (company_id = '29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535'::uuid)\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50823/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50820",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50820/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50820/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50820/events",
        "html_url": "https://github.com/rails/rails/pull/50820",
        "id": 2091981384,
        "node_id": "PR_kwDNIULOZJ9GIg",
        "number": 50820,
        "title": "docs: Update validation status based on autosave status",
        "user": {
            "login": "MONSURU-rgb",
            "id": 78952006,
            "node_id": "MDQ6VXNlcjc4OTUyMDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78952006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MONSURU-rgb",
            "html_url": "https://github.com/MONSURU-rgb",
            "followers_url": "https://api.github.com/users/MONSURU-rgb/followers",
            "following_url": "https://api.github.com/users/MONSURU-rgb/following{/other_user}",
            "gists_url": "https://api.github.com/users/MONSURU-rgb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MONSURU-rgb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MONSURU-rgb/subscriptions",
            "organizations_url": "https://api.github.com/users/MONSURU-rgb/orgs",
            "repos_url": "https://api.github.com/users/MONSURU-rgb/repos",
            "events_url": "https://api.github.com/users/MONSURU-rgb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MONSURU-rgb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-20T09:24:46Z",
        "updated_at": "2024-01-22T07:16:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50820",
            "html_url": "https://github.com/rails/rails/pull/50820",
            "diff_url": "https://github.com/rails/rails/pull/50820.diff",
            "patch_url": "https://github.com/rails/rails/pull/50820.patch",
            "merged_at": null
        },
        "body": "This Pull Request has been created to enlighten users that validations are enabled by default when autosave is True for the  `has_one` and `belongs_to`.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50815",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50815/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50815/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50815/events",
        "html_url": "https://github.com/rails/rails/pull/50815",
        "id": 2091630145,
        "node_id": "PR_kwDNIULOZJpzBQ",
        "number": 50815,
        "title": "Add format constraints for generated pwa routes",
        "user": {
            "login": "rossta",
            "id": 11673,
            "node_id": "MDQ6VXNlcjExNjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11673?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rossta",
            "html_url": "https://github.com/rossta",
            "followers_url": "https://api.github.com/users/rossta/followers",
            "following_url": "https://api.github.com/users/rossta/following{/other_user}",
            "gists_url": "https://api.github.com/users/rossta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rossta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rossta/subscriptions",
            "organizations_url": "https://api.github.com/users/rossta/orgs",
            "repos_url": "https://api.github.com/users/rossta/repos",
            "events_url": "https://api.github.com/users/rossta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rossta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T23:10:41Z",
        "updated_at": "2024-01-22T12:00:23Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50815",
            "html_url": "https://github.com/rails/rails/pull/50815",
            "diff_url": "https://github.com/rails/rails/pull/50815.diff",
            "patch_url": "https://github.com/rails/rails/pull/50815.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAs a followup to #50528, which added default pwa manifest and service worker routes and files to the new app generator, I'd like to associate the new routes with the expected mime types.\r\n\r\n### Detail\r\n\r\nWe expect the `pwa#manifest` request to be limited to json, i.e. `manifest.json` and we expect the `pwa#service_worker` request to be limited to js, i.e. `service-worker.js`. This change adds format constraints to the generated routes.\r\n\r\n### Additional information\r\n\r\nI didn't see associated tests with the previous change but would be open to adding some if desired.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50812",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50812/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50812/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50812/events",
        "html_url": "https://github.com/rails/rails/issues/50812",
        "id": 2091410608,
        "node_id": "I_kwDNIULOfKhksA",
        "number": 50812,
        "title": "Redundant JOIN produced when merging relations from STI classes",
        "user": {
            "login": "mintyfresh",
            "id": 7896757,
            "node_id": "MDQ6VXNlcjc4OTY3NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7896757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintyfresh",
            "html_url": "https://github.com/mintyfresh",
            "followers_url": "https://api.github.com/users/mintyfresh/followers",
            "following_url": "https://api.github.com/users/mintyfresh/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintyfresh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintyfresh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintyfresh/subscriptions",
            "organizations_url": "https://api.github.com/users/mintyfresh/orgs",
            "repos_url": "https://api.github.com/users/mintyfresh/repos",
            "events_url": "https://api.github.com/users/mintyfresh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintyfresh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-19T20:59:12Z",
        "updated_at": "2024-01-26T14:10:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nMerging relations with joins to the same association by different classes in an STI tree results in duplicated, redundant JOINs in the emitted SQL.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :type\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n    t.boolean :published\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n\r\n  scope :with_comments, -> { joins(:comments).where(comments: { published: true }) }\r\nend\r\n\r\nclass CustomPost < Post\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_merge_base_case\r\n    posts_with_comments1 = CustomPost.with_comments\r\n    posts_with_comments2 = CustomPost.with_comments\r\n\r\n    assert_equal [:comments], posts_with_comments1.joins_values\r\n    assert_equal [:comments], posts_with_comments2.joins_values\r\n\r\n    combined_scope = posts_with_comments1.merge(posts_with_comments2)\r\n\r\n    puts combined_scope.to_sql\r\n    assert_equal [:comments], combined_scope.joins_values\r\n  end\r\n\r\n  def test_merge_sti_case\r\n    posts_with_comments = Post.with_comments\r\n    custom_posts_with_comments = CustomPost.with_comments\r\n\r\n    assert_equal [:comments], posts_with_comments.joins_values\r\n    assert_equal [:comments], custom_posts_with_comments.joins_values\r\n\r\n    combined_scope = posts_with_comments.merge(custom_posts_with_comments)\r\n\r\n    puts combined_scope.to_sql\r\n    # FAILS! two joins are generated\r\n    assert_equal [:comments], combined_scope.joins_values\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nA query with a single join to the foreign table is produced\r\ne.g.\r\n```sql\r\nSELECT\r\n  \"posts\".*\r\nFROM\r\n  \"posts\"\r\n  INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\"\r\nWHERE\r\n  \"posts\".\"type\" = 'CustomPost'\r\n  AND \"comments\".\"published\" = 1\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nA query with two redundant joins to the foreign table is produced\r\n```sql\r\nSELECT\r\n  \"posts\".*\r\nFROM\r\n  \"posts\"\r\n  INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\"\r\n  INNER JOIN \"comments\" \"comments_posts\" ON \"comments_posts\".\"post_id\" = \"posts\".\"id\"\r\nWHERE\r\n  \"posts\".\"type\" = 'CustomPost'\r\n  AND \"comments\".\"published\" = 1\r\n```\r\nThis duplicated join is not referenced by the rest of the query in any way\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.1.0\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50811",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50811/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50811/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50811/events",
        "html_url": "https://github.com/rails/rails/pull/50811",
        "id": 2090495786,
        "node_id": "PR_kwDNIULOZItj4w",
        "number": 50811,
        "title": "Add multiple databases AR bug template [ci skip]",
        "user": {
            "login": "HeyNonster",
            "id": 47484308,
            "node_id": "MDQ6VXNlcjQ3NDg0MzA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47484308?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HeyNonster",
            "html_url": "https://github.com/HeyNonster",
            "followers_url": "https://api.github.com/users/HeyNonster/followers",
            "following_url": "https://api.github.com/users/HeyNonster/following{/other_user}",
            "gists_url": "https://api.github.com/users/HeyNonster/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HeyNonster/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HeyNonster/subscriptions",
            "organizations_url": "https://api.github.com/users/HeyNonster/orgs",
            "repos_url": "https://api.github.com/users/HeyNonster/repos",
            "events_url": "https://api.github.com/users/HeyNonster/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HeyNonster/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T12:54:28Z",
        "updated_at": "2024-01-19T12:58:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50811",
            "html_url": "https://github.com/rails/rails/pull/50811",
            "diff_url": "https://github.com/rails/rails/pull/50811.diff",
            "patch_url": "https://github.com/rails/rails/pull/50811.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because there are a few PRs we'd like to open that relate to the multiple database code in Rails but there was no existing template for a multiple database setup. \ud83d\ude42 \r\n\r\n### Detail\r\n\r\nThis commit adds a new bug report template that's based off of the existing [Active Record bug report\r\ntemplate](https://github.com/rails/rails/blob/main/guides/bug_report_templates/active_record.rb) but creates a multiple database setup.\r\n\r\nThe template creates an `UnshardedModel` abstract `ActiveRecord` model that connects to a single database (with a replica configured) and a `ShardedModel` abstract `ActiveRecord` model that has two shards configured, each with their own replica.\r\n\r\nEach sqlite3 in-memory database is separate because [opening multiple database connections each with the filename \":memory:\" will create independent in-memory databases](https://www.sqlite.org/inmemorydb.html).\r\n\r\nNote, that while replica databases are configured, sqlite3 does not support database replication and therefore records written to the writer databases will not auto-populate on the replica/reader databases. The replica configurations are included to allow for testing role switching, not for validating replication itself.\r\n\r\n### Additional information\r\n\r\nYou can test that the template works by running:\r\n\r\n `ruby guides/bug_report_templates/active_record_multiple_databases.rb` \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50807",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50807/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50807/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50807/events",
        "html_url": "https://github.com/rails/rails/issues/50807",
        "id": 2090245533,
        "node_id": "I_kwDNIULOfJadnQ",
        "number": 50807,
        "title": "Undocumented - validations enabled by autosave",
        "user": {
            "login": "semaperepelitsa",
            "id": 347921,
            "node_id": "MDQ6VXNlcjM0NzkyMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/347921?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semaperepelitsa",
            "html_url": "https://github.com/semaperepelitsa",
            "followers_url": "https://api.github.com/users/semaperepelitsa/followers",
            "following_url": "https://api.github.com/users/semaperepelitsa/following{/other_user}",
            "gists_url": "https://api.github.com/users/semaperepelitsa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semaperepelitsa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semaperepelitsa/subscriptions",
            "organizations_url": "https://api.github.com/users/semaperepelitsa/orgs",
            "repos_url": "https://api.github.com/users/semaperepelitsa/repos",
            "events_url": "https://api.github.com/users/semaperepelitsa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semaperepelitsa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T10:47:52Z",
        "updated_at": "2024-01-20T17:25:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Validations are enabled by default when autosave is true:\r\n\r\n    belongs_to :foo, autosave: true\r\n    has_one :foo, autosave: true\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/reflection.rb#L653-L658\r\n\r\nHowever, this is not documented in `has_one` or `belongs_to`:\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/associations.rb#L1660-L1669\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/associations.rb#L1830-L1840",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50807/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50793",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50793/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50793/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50793/events",
        "html_url": "https://github.com/rails/rails/pull/50793",
        "id": 2088694143,
        "node_id": "PR_kwDNIULOZHJaNQ",
        "number": 50793,
        "title": "PoC: Add an option to disable connection checkout caching",
        "user": {
            "login": "byroot",
            "id": 44640,
            "node_id": "MDQ6VXNlcjQ0NjQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/byroot",
            "html_url": "https://github.com/byroot",
            "followers_url": "https://api.github.com/users/byroot/followers",
            "following_url": "https://api.github.com/users/byroot/following{/other_user}",
            "gists_url": "https://api.github.com/users/byroot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/byroot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/byroot/subscriptions",
            "organizations_url": "https://api.github.com/users/byroot/orgs",
            "repos_url": "https://api.github.com/users/byroot/repos",
            "events_url": "https://api.github.com/users/byroot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/byroot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-18T16:54:17Z",
        "updated_at": "2024-01-19T22:11:55Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50793",
            "html_url": "https://github.com/rails/rails/pull/50793",
            "diff_url": "https://github.com/rails/rails/pull/50793.diff",
            "patch_url": "https://github.com/rails/rails/pull/50793.patch",
            "merged_at": null
        },
        "body": "### Context\r\n\r\nIn part for performance and simplicity reasons, and in part because of its historical lack of threading support, Active Record rely quite heavily on `ActiveRecord::Base.connection` checking out and holding a connection inside a thread of fiber local variable.\r\n\r\nConcretly, every request or job lazily checkout connections when it needs to perform a database operations, and then holds onto it until the request or job completes, at which point the `Executor` hook automatically check it back in the pool.\r\n\r\nFor the overwhelming majority of Rails application, which don't do enough IOs to benefit from more than a handful of threads, it's a perfectly adequate solution, as it pretty much remove connection management as a concern.\r\n\r\nHowever for applications that spent most of their time on IOs others than the database (e.g. 3rd party APIs), and would benefit from much higher levels of concurrency, this strategy is problematic because it requires about as many database connections as there is threads or fibers, even though most connections are idle but can't be used because they checked out of the pool and held by another thead or fiber.\r\n\r\n### Goal\r\n\r\nI believe the current model is still preferable for the vast majority of Rails users, and changing the way `ActiveRecord::Base.connection` behaves would break a ton of code anyway. So I believe it should remain the default.\r\n\r\nHowever I think we could support an alternative mode, in which `ActiveRecord::Base.connection` doesn't hold onto the connection until the end of the request cycle, but instead immediately check it back in, allowing it to be re-used immediately.\r\n\r\n### Implementation\r\n\r\nFirst, nothing changes unless you disable `ActiveRecord.cache_connection_checkout`.\r\n\r\nThen, since a lot of code in Rails itself, in third party libraries, and in private Rails applications do rely on `Model.connection.something()`, we must make it work without caching the connection.\r\n\r\nTo solve this, when caching is disabled, `Model.connection` returns a proxy object, that delegates the methods it receive to a freshly checked out connection, and then check it back in. See `LazyConnectionProxy` in `connection_pool.rb` for the details.\r\n\r\nThat is the key to permitting this feature while retaining backward compatibility. It's not perfect, as code might assume that subsequent calls to `Model.connection` will return the same connection instance, but in most case it's not necessary.\r\n\r\nAlso, while the proxy holds the connection, it caches in on the thread or fiber, so subsequent calls to `Model.connection` will return the same connection until it's checked back in. This solves most of the statefulness issues, like opening a transaction etc, as long as the APIs are blocked based.\r\n\r\n### Status\r\n\r\nThis is a proof of concept, it's nowhere near ready to merge, it's mostly to explore whether it's doable with some work, or just not possible.\r\n\r\nMost of the Active Record test suite passes against Sqlite3, except for 3 tests that do disconnect and reconnect. In general all the tests had to be opted out of the feature, I still need to dig into why exactly.\r\n\r\nI also had to disable the feature for a few test suites that rely too much on the caching, and would need a bit of refactoring to pass without, but at first glance it doesn't look like a fundamental incompatibility.\r\n\r\n### Concerns\r\n\r\nThere is a number of Active Record methods that currently cause more than one checkout/checkin cycle and would benefit from a strategically placed `with_connection do` call to optimize that. But that is mostly a performance concern, not a fundamental incompatibility.\r\n\r\nOne more major concern is the query cache. As it stand it's pretty much useless when checkout caching is disabled, because when we check the connection back in, we have to clear the cache, so it's pretty much always empty. To make it usable again, we need a substantial refactoring. At first glance it looks possible, just not trivial.\r\n\r\n### Conclusion\r\n\r\nI'm a bit on the fence about this. I think we can make it work, but I already spent most of one day on just the proof of concept, and would need substantially more work to iron out all the issues.\r\n\r\nThe actual code changes needed in Active Record itself are relatively small, it's really all the test suite and 3rd party code that would need to be updated to properly work with this option that is the big can of worm I'm worried about.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50793/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50792",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50792/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50792/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50792/events",
        "html_url": "https://github.com/rails/rails/issues/50792",
        "id": 2088620752,
        "node_id": "I_kwDNIULOfH3S0A",
        "number": 50792,
        "title": "`app:update` from Rails 7.1.2 to 7.1.3 creates `new_framework_defaults_7_1.rb`",
        "user": {
            "login": "GitToTheHub",
            "id": 13721821,
            "node_id": "MDQ6VXNlcjEzNzIxODIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13721821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GitToTheHub",
            "html_url": "https://github.com/GitToTheHub",
            "followers_url": "https://api.github.com/users/GitToTheHub/followers",
            "following_url": "https://api.github.com/users/GitToTheHub/following{/other_user}",
            "gists_url": "https://api.github.com/users/GitToTheHub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GitToTheHub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GitToTheHub/subscriptions",
            "organizations_url": "https://api.github.com/users/GitToTheHub/orgs",
            "repos_url": "https://api.github.com/users/GitToTheHub/repos",
            "events_url": "https://api.github.com/users/GitToTheHub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GitToTheHub/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-18T16:15:11Z",
        "updated_at": "2024-01-19T09:40:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI made an update from Rails 7.1.2 to 7.1.3 by changing the rails version number to 7.1.3 in the gemfile and running `bundle update`. After that i ran `rails app:update` which produced the file `config/initializers/new_framework_defaults_7_1.rb`. I already have `config.load_defaults 7.1` in my `config/application.rb`, so I think, this file shouldn't be generated?\r\n\r\n### Expected behavior\r\nThe file `config/initializers/new_framework_defaults_7_1.rb` should not be created, if `config.load_defaults 7.1` is already present in `config/application.rb`.\r\n\r\n### Actual behavior\r\nThe file `config/initializers/new_framework_defaults_7_1.rb` is created after  `rails app:update`, despite `config.load_defaults 7.1` is already present in `config/application.rb`.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x64-mingw-ucrt]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50785",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50785/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50785/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50785/events",
        "html_url": "https://github.com/rails/rails/pull/50785",
        "id": 2087298785,
        "node_id": "PR_kwDNIULOZF9HWA",
        "number": 50785,
        "title": "Add note about `params` hash in Action Controller Overview [ci skip] ",
        "user": {
            "login": "JunichiIto",
            "id": 1148320,
            "node_id": "MDQ6VXNlcjExNDgzMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1148320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunichiIto",
            "html_url": "https://github.com/JunichiIto",
            "followers_url": "https://api.github.com/users/JunichiIto/followers",
            "following_url": "https://api.github.com/users/JunichiIto/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunichiIto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunichiIto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunichiIto/subscriptions",
            "organizations_url": "https://api.github.com/users/JunichiIto/orgs",
            "repos_url": "https://api.github.com/users/JunichiIto/repos",
            "events_url": "https://api.github.com/users/JunichiIto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunichiIto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-18T01:26:00Z",
        "updated_at": "2024-01-18T17:22:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50785",
            "html_url": "https://github.com/rails/rails/pull/50785",
            "diff_url": "https://github.com/rails/rails/pull/50785.diff",
            "patch_url": "https://github.com/rails/rails/pull/50785.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nNewbies tend to misunderstand `params` hash is a plain old Hash. So I added a note that `params` hash is ActionController::Parameters.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes \"4 Parameters\" in Action Controller Overview.\r\n\r\n![Screenshot 2024-01-18 at 10 31 55](https://github.com/rails/rails/assets/1148320/de0dc860-35d1-4d3b-b209-ab4abbac5a17)\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50785/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50785/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50780",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50780/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50780/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50780/events",
        "html_url": "https://github.com/rails/rails/pull/50780",
        "id": 2086045509,
        "node_id": "PR_kwDNIULOZE41OQ",
        "number": 50780,
        "title": "Preserve `--asset-pipeline propshaft` when running `app:update`",
        "user": {
            "login": "zachasme",
            "id": 986290,
            "node_id": "MDQ6VXNlcjk4NjI5MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/986290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zachasme",
            "html_url": "https://github.com/zachasme",
            "followers_url": "https://api.github.com/users/zachasme/followers",
            "following_url": "https://api.github.com/users/zachasme/following{/other_user}",
            "gists_url": "https://api.github.com/users/zachasme/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zachasme/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zachasme/subscriptions",
            "organizations_url": "https://api.github.com/users/zachasme/orgs",
            "repos_url": "https://api.github.com/users/zachasme/repos",
            "events_url": "https://api.github.com/users/zachasme/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zachasme/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-17T12:02:43Z",
        "updated_at": "2024-01-28T20:30:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50780",
            "html_url": "https://github.com/rails/rails/pull/50780",
            "diff_url": "https://github.com/rails/rails/pull/50780.diff",
            "patch_url": "https://github.com/rails/rails/pull/50780.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because `skip_sprockets?` wasn't being preserved when running `app:update` in a project using `propshaft`. Helpful when #50444 lands.\r\n\r\n### Detail\r\n\r\nThis Pull Request sets `options[:asset_pipeline]` in `AppUpdater` based on whether Sprockets/Propshaft Railtie is defined.\r\n\r\nWithout this change, `app:update` will suggest injecting sprocket configuration in a propshaft project.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50780/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50772",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50772/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50772/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50772/events",
        "html_url": "https://github.com/rails/rails/issues/50772",
        "id": 2084942985,
        "node_id": "I_kwDNIULOfEW0iQ",
        "number": 50772,
        "title": "Tests can't run without yarn",
        "user": {
            "login": "arusa",
            "id": 623008,
            "node_id": "MDQ6VXNlcjYyMzAwOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/623008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arusa",
            "html_url": "https://github.com/arusa",
            "followers_url": "https://api.github.com/users/arusa/followers",
            "following_url": "https://api.github.com/users/arusa/following{/other_user}",
            "gists_url": "https://api.github.com/users/arusa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arusa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arusa/subscriptions",
            "organizations_url": "https://api.github.com/users/arusa/orgs",
            "repos_url": "https://api.github.com/users/arusa/repos",
            "events_url": "https://api.github.com/users/arusa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arusa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-16T21:11:58Z",
        "updated_at": "2024-01-29T19:27:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n1. Create a new rails app that uses yarn\r\n2. `docker build -t testimage:1 .`\r\n3. `docker run -it testimage:1 /bin/bash`\r\n4. `bin/rails test`\r\n\r\n### Expected behavior\r\n\r\nAs the image already contains all precompiled assets I would expect the tests to be able to run successfully even without precompiling first.\r\n\r\n### Actual behavior\r\n\r\n`bin/rails test` now always runs `test:prepare`, which tries to compile the assets and therefore crashes, because the default Dockerfile doesn't keep yarn in the image.\r\n\r\nI want an option to skip running `test:prepare` when running tests.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.1.4",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50772/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50768",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50768/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50768/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50768/events",
        "html_url": "https://github.com/rails/rails/issues/50768",
        "id": 2084328879,
        "node_id": "I_kwDNIULOfDxVrw",
        "number": 50768,
        "title": "The `counter_cache_column?` method is depending of initialisation order.",
        "user": {
            "login": "BuonOmo",
            "id": 11378424,
            "node_id": "MDQ6VXNlcjExMzc4NDI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11378424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BuonOmo",
            "html_url": "https://github.com/BuonOmo",
            "followers_url": "https://api.github.com/users/BuonOmo/followers",
            "following_url": "https://api.github.com/users/BuonOmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/BuonOmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BuonOmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BuonOmo/subscriptions",
            "organizations_url": "https://api.github.com/users/BuonOmo/orgs",
            "repos_url": "https://api.github.com/users/BuonOmo/repos",
            "events_url": "https://api.github.com/users/BuonOmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BuonOmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-16T15:54:58Z",
        "updated_at": "2024-01-20T17:21:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :people, force: true do |t|\r\n    t.integer :cars_count, default: 0\r\n  end\r\n\r\n  create_table :cars, force: true do |t|\r\n    t.belongs_to :person\r\n  end\r\nend\r\n\r\nclass Car < ActiveRecord::Base\r\n  belongs_to :person, counter_cache: true\r\nend\r\n\r\n# If the `Person` class was defined before, the test below would work\r\nclass Person < ActiveRecord::Base\r\n  has_many :cars\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_counter_cache_column?\r\n    assert Person.counter_cache_column?(\"cars_count\")\r\n    assert_not Car.counter_cache_column?(\"cars_count\")\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nthe `Person` class should identify clearly `cars_count` as a counter cache column\r\n\r\n### Actual behavior\r\n\r\nSince `Person` is initialized afterwards, when running `belong_to`, the `cars_count` column is not added to its counter_cache\r\n\r\n### System configuration\r\n**Rails version**: found in `7.1.2`, present in edge as well\r\n\r\n**Ruby version**: 3.2.1\r\n\r\n### Notes\r\n\r\nIn the actual ActiveRecord test suite, this test could fall if in the future a file requiring first `models/car` is loaded before the `counter_cache_test` file.\r\n\r\nAlso I'd be so glad to work on the solution. It seems to me that the issue is that [this expression](https://github.com/rails/rails/blob/0656787be644d7d5550e82450153403853c73014/activerecord/lib/active_record/associations/builder/belongs_to.rb#L39C5-L39C5) can return `nil`. I'm just not sure how it should be solved (by raising, autoloading, warning, ...)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50768/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50763",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50763/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50763/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50763/events",
        "html_url": "https://github.com/rails/rails/pull/50763",
        "id": 2082801297,
        "node_id": "PR_kwDNIULOZCHHNg",
        "number": 50763,
        "title": "Allow custom domain extractor class on ActionDispatch::Http::URL",
        "user": {
            "login": "rainerborene",
            "id": 101501,
            "node_id": "MDQ6VXNlcjEwMTUwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/101501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainerborene",
            "html_url": "https://github.com/rainerborene",
            "followers_url": "https://api.github.com/users/rainerborene/followers",
            "following_url": "https://api.github.com/users/rainerborene/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainerborene/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainerborene/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainerborene/subscriptions",
            "organizations_url": "https://api.github.com/users/rainerborene/orgs",
            "repos_url": "https://api.github.com/users/rainerborene/repos",
            "events_url": "https://api.github.com/users/rainerborene/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainerborene/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-15T23:32:04Z",
        "updated_at": "2024-01-18T20:47:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50763",
            "html_url": "https://github.com/rails/rails/pull/50763",
            "diff_url": "https://github.com/rails/rails/pull/50763.diff",
            "patch_url": "https://github.com/rails/rails/pull/50763.patch",
            "merged_at": null
        },
        "body": "In these last years we have been using a monkey patch at our company that smartly detects domain and subdomains according to the [Public Suffix database](https://publicsuffix.org/). There are a few gems in our ecosystems like [public_suffix](https://github.com/weppos/publicsuffix-ruby) and [mini_suffix](https://github.com/discourse/mini_suffix) that does exactly that. But Rails uses an older and primitive method that splits the domain tld using `config.action_dispatch.tld_length` option. This pull request changes that by allowing developers to specify a custom domain extractor class.\r\n\r\nThis is really useful for any SaaS company that offers custom domain and subdomains.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50763/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50761",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50761/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50761/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50761/events",
        "html_url": "https://github.com/rails/rails/pull/50761",
        "id": 2082689851,
        "node_id": "PR_kwDNIULOZCBEaQ",
        "number": 50761,
        "title": "Improve documentation of ActiveRecord::Core.configurations",
        "user": {
            "login": "p8",
            "id": 28561,
            "node_id": "MDQ6VXNlcjI4NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p8",
            "html_url": "https://github.com/p8",
            "followers_url": "https://api.github.com/users/p8/followers",
            "following_url": "https://api.github.com/users/p8/following{/other_user}",
            "gists_url": "https://api.github.com/users/p8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/p8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/p8/subscriptions",
            "organizations_url": "https://api.github.com/users/p8/orgs",
            "repos_url": "https://api.github.com/users/p8/repos",
            "events_url": "https://api.github.com/users/p8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/p8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-15T21:18:15Z",
        "updated_at": "2024-01-16T12:15:00Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50761",
            "html_url": "https://github.com/rails/rails/pull/50761",
            "diff_url": "https://github.com/rails/rails/pull/50761.diff",
            "patch_url": "https://github.com/rails/rails/pull/50761.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThe documenation of `ActiveRecord::Core.configurations=` [reads](https://edgeapi.rubyonrails.org/classes/ActiveRecord/Core.html#method-c-configurations-3D) like the documentation for the getter instead of the setter.\r\nIt should not describe what is returned, but what arguments are expected.\r\n\r\nThis changes moves the documentation of the setter to the getter and adds a new comment to the setter.\r\n\r\nThis commit has 2 separate commits to make sure the diffs only apply to documentation and not the code.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50761/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50759",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50759/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50759/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50759/events",
        "html_url": "https://github.com/rails/rails/issues/50759",
        "id": 2082675602,
        "node_id": "I_kwDNIULOfCMbkg",
        "number": 50759,
        "title": "Migrate Rails API doc to use Markdown instead of RDoc format",
        "user": {
            "login": "rafaelfranca",
            "id": 47848,
            "node_id": "MDQ6VXNlcjQ3ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rafaelfranca",
            "html_url": "https://github.com/rafaelfranca",
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/87",
            "html_url": "https://github.com/rails/rails/milestone/87",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/87/labels",
            "id": 10350173,
            "node_id": "MI_kwDNIULOAJ3uXQ",
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "node_id": "MDQ6VXNlcjI3NDE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2741?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dhh",
                "html_url": "https://github.com/dhh",
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "gists_url": "https://api.github.com/users/dhh/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "events_url": "https://api.github.com/users/dhh/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 16,
            "closed_issues": 9,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-01-15T21:02:57Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-15T21:02:56Z",
        "updated_at": "2024-01-15T21:02:57Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "### NOTE: We aren't going to accept any PR doing this migration\r\n\r\nFrom time to time, we have to remember that while documenting some method on Rails, using `+foo+` to denote a method name or argument sometimes need to change to be `<tt>foo</tt>` in order to be documented. We also sometimes receive PRs with people accidentally introducing backticks that doesn't have any effect in the documentation.\r\n\r\nOur guides also uses Markdown syntax, so contributors need to know they need to change syntax when writting documentation.\r\n\r\nText editors, like VScode don't know how to highlight RDoc code so often see Rails documentation formatted like this when you hover over a class\r\n\r\n<img width=\"802\" alt=\"Screenshot 2024-01-15 at 4 01 03\u202fPM\" src=\"https://github.com/rails/rails/assets/47848/2e31157d-dd86-487d-83d6-c34e4c013151\">\r\n<img width=\"810\" alt=\"Screenshot 2024-01-15 at 4 02 00\u202fPM\" src=\"https://github.com/rails/rails/assets/47848/435e899b-8cfc-4bf4-9b8c-dfd7383fd867\">\r\n\r\nNowadays, RDoc supports Markdown as syntax. So we can avoid all those problems migrating all our API documentation to use Markdown.\r\n\r\n### NOTE: We aren't going to accept any PR doing this migration",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50759/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 6,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50759/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50755",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50755/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50755/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50755/events",
        "html_url": "https://github.com/rails/rails/issues/50755",
        "id": 2081488829,
        "node_id": "I_kwDNIULOfBD_vQ",
        "number": 50755,
        "title": "Action Mailbox mistakes attachment as body if no body exists",
        "user": {
            "login": "HashNotAdam",
            "id": 902714,
            "node_id": "MDQ6VXNlcjkwMjcxNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/902714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashNotAdam",
            "html_url": "https://github.com/HashNotAdam",
            "followers_url": "https://api.github.com/users/HashNotAdam/followers",
            "following_url": "https://api.github.com/users/HashNotAdam/following{/other_user}",
            "gists_url": "https://api.github.com/users/HashNotAdam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HashNotAdam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HashNotAdam/subscriptions",
            "organizations_url": "https://api.github.com/users/HashNotAdam/orgs",
            "repos_url": "https://api.github.com/users/HashNotAdam/repos",
            "events_url": "https://api.github.com/users/HashNotAdam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HashNotAdam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1174770998,
                "node_id": "MDU6TGFiZWwxMTc0NzcwOTk4",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailbox",
                "name": "actionmailbox",
                "color": "f4a6cb",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-15T08:23:19Z",
        "updated_at": "2024-01-17T18:28:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have set up a mailbox to process DMARC reports. This has been working fine in most cases, but it seems that sometimes Google doesn't include body text in the email\u2014only a zipped XML file as an attachment.\r\n\r\nWhen this happens, Action Mailbox decodes the Base64 encoding of the attachment and assigns the string representation of the binary data to the body of the message without adding the file as an attachment. I have noticed that the email also isn't recognised as being multipart.\r\n\r\n### Steps to reproduce\r\n\r\nI've created [a gist which includes the unedited email source](https://gist.github.com/HashNotAdam/f5d08e370e70e9e39105fa765563c5b3) as copied from the EML file stored by Active Storage\r\n\r\n### Expected behavior\r\nThe body of the message should include the Base64 encoding of the attachment and there should be 1 attachment representing a ZIP file\r\n\r\n### Actual behavior\r\nCalling `body.to_s` on the underlying `Mail::Message` will return a string representation of the binary data which can be unzipped to return the XML. If the EML file were to be opened in an email client, this would be presented as an attachment\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50755/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50754",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50754/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50754/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50754/events",
        "html_url": "https://github.com/rails/rails/pull/50754",
        "id": 2081074654,
        "node_id": "PR_kwDNIULOZAp6FQ",
        "number": 50754,
        "title": "Allow named variants to evaluate dynamic transformation options",
        "user": {
            "login": "xjunior",
            "id": 8156,
            "node_id": "MDQ6VXNlcjgxNTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xjunior",
            "html_url": "https://github.com/xjunior",
            "followers_url": "https://api.github.com/users/xjunior/followers",
            "following_url": "https://api.github.com/users/xjunior/following{/other_user}",
            "gists_url": "https://api.github.com/users/xjunior/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xjunior/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xjunior/subscriptions",
            "organizations_url": "https://api.github.com/users/xjunior/orgs",
            "repos_url": "https://api.github.com/users/xjunior/repos",
            "events_url": "https://api.github.com/users/xjunior/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xjunior/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-15T01:18:24Z",
        "updated_at": "2024-01-18T00:07:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50754",
            "html_url": "https://github.com/rails/rails/pull/50754",
            "diff_url": "https://github.com/rails/rails/pull/50754.diff",
            "patch_url": "https://github.com/rails/rails/pull/50754.patch",
            "merged_at": null
        },
        "body": "<!--\nThanks for contributing to Rails!\n\nPlease do not make *Draft* pull requests, as they still send\nnotifications to everyone watching the Rails repo.\n\nCreate a pull request when it is ready for review and feedback\nfrom the Rails team :).\n\nIf your pull request affects documentation or any non-code\nchanges, guidelines for those changes are [available\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\n\nAbout this template\n\nThe following template aims to help contributors write a good description for their pull requests.\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\n\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\n\n### Motivation / Background\n\n<!--\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\n-->\n\nSometimes you want to build a transformation based on the user input, or information persisted in the database (i.e.: add a watermark to a picture, crop based on user input)\n\n### Detail\n\nThis PR allow the transformations to be built based on user input:\n\n```ruby\nclass User < ApplicationRecord\n  has_one_attached :photo do |attachable|\n    attachable.variant :default, crop: :crop_positions\n    attachable.variant :thumb, crop: :crop_positions,\n                               resize_to_limit: [100, 100]\n  end\n\n  def crop_positions\n    [crop_x1, crop_y1, crop_x2, crop_y2]\n  end\nend\n```\n\n### Checklist\n\nBefore submitting the PR make sure the following are checked:\n\n- [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\n- [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\n- [x] Tests are added or updated if you fix a bug or add a feature.\n- [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50754/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50754/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50744",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50744/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50744/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50744/events",
        "html_url": "https://github.com/rails/rails/pull/50744",
        "id": 2080405528,
        "node_id": "PR_kwDNIULOZAH76A",
        "number": 50744,
        "title": "docs: Update FormHelper comments to use `form_with` instead of `form_for` [ci skip]",
        "user": {
            "login": "takatea",
            "id": 39912547,
            "node_id": "MDQ6VXNlcjM5OTEyNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39912547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/takatea",
            "html_url": "https://github.com/takatea",
            "followers_url": "https://api.github.com/users/takatea/followers",
            "following_url": "https://api.github.com/users/takatea/following{/other_user}",
            "gists_url": "https://api.github.com/users/takatea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/takatea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/takatea/subscriptions",
            "organizations_url": "https://api.github.com/users/takatea/orgs",
            "repos_url": "https://api.github.com/users/takatea/repos",
            "events_url": "https://api.github.com/users/takatea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/takatea/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-13T17:32:39Z",
        "updated_at": "2024-01-13T17:32:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50744",
            "html_url": "https://github.com/rails/rails/pull/50744",
            "diff_url": "https://github.com/rails/rails/pull/50744.diff",
            "patch_url": "https://github.com/rails/rails/pull/50744.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because comments in `ActionView::Helpers::FormHelper` refer to the deprecated `form_for` instead of the recommended `form_with`. This could potentially cause confusion for developers consulting the Rails API documentation, such as [Action View Form Builder page](https://api.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html).\r\n\r\n### Detail\r\n\r\nThis Pull Request changes  the comments in `ActionView::Helpers::FormHelper`, replacing instances of `form_for` with `form_with`.\r\n\r\n### Additional information\r\n\r\nThe Rails guide has already documented the usage of `form_with` on the [form_helpers page](https://guides.rubyonrails.org/form_helpers.html).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50744/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50734",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50734/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50734/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50734/events",
        "html_url": "https://github.com/rails/rails/pull/50734",
        "id": 2079487889,
        "node_id": "PR_kwDNIULOY_XCHQ",
        "number": 50734,
        "title": "docs: Adjust composite primary keys documentation [skip ci]",
        "user": {
            "login": "matsales28",
            "id": 54689845,
            "node_id": "MDQ6VXNlcjU0Njg5ODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/54689845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matsales28",
            "html_url": "https://github.com/matsales28",
            "followers_url": "https://api.github.com/users/matsales28/followers",
            "following_url": "https://api.github.com/users/matsales28/following{/other_user}",
            "gists_url": "https://api.github.com/users/matsales28/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matsales28/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matsales28/subscriptions",
            "organizations_url": "https://api.github.com/users/matsales28/orgs",
            "repos_url": "https://api.github.com/users/matsales28/repos",
            "events_url": "https://api.github.com/users/matsales28/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matsales28/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T18:49:57Z",
        "updated_at": "2024-01-17T18:36:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50734",
            "html_url": "https://github.com/rails/rails/pull/50734",
            "diff_url": "https://github.com/rails/rails/pull/50734.diff",
            "patch_url": "https://github.com/rails/rails/pull/50734.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because the documentation for composite primary keys wasn't correct. \r\n\r\n### Detail\r\n\r\nWhile working on `shoulda-matchers` I noticed that the documentation is not correct. We actually need to declare the `query_constraints` option in the `has_many` association using the same attribute name as the ones in the associated object.\r\n\r\n```ruby\r\nclass Author < ApplicationRecord\r\n  self.primary_key = [:first_name, :last_name]\r\n  # This was incorrect as `first_name` and `last_name` don't exist on the `Book` model.\r\n  has_many :books, query_constraints: [:first_name, :last_name] \r\n  \r\n  # Correct way\r\n  has_many :books, query_constraints: [:author_first_name, :author_last_name]\r\nend\r\n\r\nclass Book < ApplicationRecord\r\n  belongs_to :author, query_constraints: [:author_first_name, :author_last_name]\r\nend\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50734/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50731",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50731/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50731/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50731/events",
        "html_url": "https://github.com/rails/rails/pull/50731",
        "id": 2079331695,
        "node_id": "PR_kwDNIULOY_OS5w",
        "number": 50731,
        "title": "Document passing hash as id option on create_table",
        "user": {
            "login": "javierav",
            "id": 99700,
            "node_id": "MDQ6VXNlcjk5NzAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/99700?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/javierav",
            "html_url": "https://github.com/javierav",
            "followers_url": "https://api.github.com/users/javierav/followers",
            "following_url": "https://api.github.com/users/javierav/following{/other_user}",
            "gists_url": "https://api.github.com/users/javierav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/javierav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/javierav/subscriptions",
            "organizations_url": "https://api.github.com/users/javierav/orgs",
            "repos_url": "https://api.github.com/users/javierav/repos",
            "events_url": "https://api.github.com/users/javierav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/javierav/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T17:21:32Z",
        "updated_at": "2024-01-12T17:21:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50731",
            "html_url": "https://github.com/rails/rails/pull/50731",
            "diff_url": "https://github.com/rails/rails/pull/50731.diff",
            "patch_url": "https://github.com/rails/rails/pull/50731.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThe `id` keyword argument passed to [create_table](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_table) method allow to receive a hash with options for column creation but it's not documented.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50731/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50727",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50727/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50727/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50727/events",
        "html_url": "https://github.com/rails/rails/pull/50727",
        "id": 2078984168,
        "node_id": "PR_kwDNIULOY-65Mw",
        "number": 50727,
        "title": "Action View Tests: Use `#with_routing` helper",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T14:36:26Z",
        "updated_at": "2024-01-29T14:25:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50727",
            "html_url": "https://github.com/rails/rails/pull/50727",
            "diff_url": "https://github.com/rails/rails/pull/50727.diff",
            "patch_url": "https://github.com/rails/rails/pull/50727.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFollow-up to [#49819][]\r\n\r\n### Detail\r\n\r\nSince [#49819][] resolves an issue with\r\n`ActionDispatch::IntegrationTest#with_routing` helper support, Action View's `test/abstract_unit.rb` file can rely on routing being reset within the block argument.\r\n\r\nThis means that the `RoutedRackApp` class and `.build_app` method is can be made unnecessary.\r\n\r\n[#49819]: https://github.com/rails/rails/pull/49819\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50727/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50727/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50722",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50722/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50722/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50722/events",
        "html_url": "https://github.com/rails/rails/pull/50722",
        "id": 2078567396,
        "node_id": "PR_kwDNIULOY-j0Ow",
        "number": 50722,
        "title": "Downcase the model name in the system scaffolds",
        "user": {
            "login": "dwightwatson",
            "id": 1100408,
            "node_id": "MDQ6VXNlcjExMDA0MDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1100408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dwightwatson",
            "html_url": "https://github.com/dwightwatson",
            "followers_url": "https://api.github.com/users/dwightwatson/followers",
            "following_url": "https://api.github.com/users/dwightwatson/following{/other_user}",
            "gists_url": "https://api.github.com/users/dwightwatson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dwightwatson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dwightwatson/subscriptions",
            "organizations_url": "https://api.github.com/users/dwightwatson/orgs",
            "repos_url": "https://api.github.com/users/dwightwatson/repos",
            "events_url": "https://api.github.com/users/dwightwatson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dwightwatson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-12T10:51:23Z",
        "updated_at": "2024-01-15T02:43:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50722",
            "html_url": "https://github.com/rails/rails/pull/50722",
            "diff_url": "https://github.com/rails/rails/pull/50722.diff",
            "patch_url": "https://github.com/rails/rails/pull/50722.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nI noticed there is an inconsistency in the system test scaffold where the model name is sometimes capitalised. This fixes the two instances where the model name is humanised.\r\n\r\n```rb\r\ntest \"should create user\"\r\ntest \"should update User\"\r\ntest \"should destroy User\"\r\n```\r\n\r\nConsidering all the other scaffolds use lowercase text I think it's right these two are downcased in the same way.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50722/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50722/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50721",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50721/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50721/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50721/events",
        "html_url": "https://github.com/rails/rails/pull/50721",
        "id": 2078388014,
        "node_id": "PR_kwDNIULOY-aIsQ",
        "number": 50721,
        "title": "Pool disabled query cache handling",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-12T09:06:56Z",
        "updated_at": "2024-01-30T07:46:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50721",
            "html_url": "https://github.com/rails/rails/pull/50721",
            "diff_url": "https://github.com/rails/rails/pull/50721.diff",
            "patch_url": "https://github.com/rails/rails/pull/50721.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFor [Solid Cache](https://github.com/rails/solid_cache), we want to be able to read and write from the cache database without using the query cache. \r\n\r\nWe also don't want to expire the query cache on other connection pools when we write. Writing to the Rails cache shouldn't invalidate the main query cache.\r\n\r\nThis is an alternative to https://github.com/rails/rails/pull/50695, based on @byroot's [suggestion here](https://github.com/rails/rails/pull/50695#issuecomment-1885312807).\r\n\r\n### Detail\r\n\r\nAfter a database write we clear the query cache on all connection pools. The change here is that we will now only do that if either the connection pool or the connection itself has the query cache enabled.\r\n\r\nThe query cache is [enabled on all connection pools](https://github.com/rails/rails/blob/cff2eb1be11cb729382b3674e3caa2bd198ec55e/activerecord/lib/active_record/query_cache.rb#L28-L42) by the executor hooks, so to take advantage of this we'll need to add another executor hook that disables the query cache on the Solid Cache connection pool (but only when it has a dedicated pool). \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50721/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50717",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50717/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50717/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50717/events",
        "html_url": "https://github.com/rails/rails/pull/50717",
        "id": 2077465816,
        "node_id": "PR_kwDNIULOY9n-Rg",
        "number": 50717,
        "title": "Expand documentation for ActiveRecord::Core #dup and #clone",
        "user": {
            "login": "p8",
            "id": 28561,
            "node_id": "MDQ6VXNlcjI4NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p8",
            "html_url": "https://github.com/p8",
            "followers_url": "https://api.github.com/users/p8/followers",
            "following_url": "https://api.github.com/users/p8/following{/other_user}",
            "gists_url": "https://api.github.com/users/p8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/p8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/p8/subscriptions",
            "organizations_url": "https://api.github.com/users/p8/orgs",
            "repos_url": "https://api.github.com/users/p8/repos",
            "events_url": "https://api.github.com/users/p8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/p8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-11T19:46:53Z",
        "updated_at": "2024-01-17T10:26:04Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50717",
            "html_url": "https://github.com/rails/rails/pull/50717",
            "diff_url": "https://github.com/rails/rails/pull/50717.diff",
            "patch_url": "https://github.com/rails/rails/pull/50717.patch",
            "merged_at": null
        },
        "body": "Splits the examples for `#clone` into separate sections for easier scanability.\r\n\r\nAdds examples to `#dup` to clarify the difference with `#clone`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50717/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50717/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50710",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50710/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50710/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50710/events",
        "html_url": "https://github.com/rails/rails/pull/50710",
        "id": 2077153009,
        "node_id": "PR_kwDNIULOY9Wvpg",
        "number": 50710,
        "title": "Update `ActionDispatch::Routing::Mapper:Scoping#constraints` documentation",
        "user": {
            "login": "stevepolitodesign",
            "id": 5122678,
            "node_id": "MDQ6VXNlcjUxMjI2Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5122678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevepolitodesign",
            "html_url": "https://github.com/stevepolitodesign",
            "followers_url": "https://api.github.com/users/stevepolitodesign/followers",
            "following_url": "https://api.github.com/users/stevepolitodesign/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevepolitodesign/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevepolitodesign/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevepolitodesign/subscriptions",
            "organizations_url": "https://api.github.com/users/stevepolitodesign/orgs",
            "repos_url": "https://api.github.com/users/stevepolitodesign/repos",
            "events_url": "https://api.github.com/users/stevepolitodesign/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevepolitodesign/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-11T16:50:31Z",
        "updated_at": "2024-01-11T16:50:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50710",
            "html_url": "https://github.com/rails/rails/pull/50710",
            "diff_url": "https://github.com/rails/rails/pull/50710.diff",
            "patch_url": "https://github.com/rails/rails/pull/50710.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nThe previous recommendation to place constraints in `lib/constraints` did not work in practice on a default Rails install, as it will raise the following:\r\n\r\n```\r\nuninitialized constant Iphone (NameError)\r\n```\r\n\r\nInstead, recommend placing constraints in `app/constraints` such that they will be eager loaded.\r\n\r\n### Additional information\r\n\r\nAlternatively, we could update the documentation to elaborate that `lib/constraints` would need to be explicitly eager loaded.\r\n\r\n```ruby\r\nconfig.eager_load_paths << Rails.root.join(\"lib/constraints\")\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50710/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50710/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50705",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50705/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50705/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50705/events",
        "html_url": "https://github.com/rails/rails/pull/50705",
        "id": 2076034722,
        "node_id": "PR_kwDNIULOY8YYug",
        "number": 50705,
        "title": "Backport: Define missing attribute methods from `method_missing`",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-11T08:26:24Z",
        "updated_at": "2024-01-11T08:26:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50705",
            "html_url": "https://github.com/rails/rails/pull/50705",
            "diff_url": "https://github.com/rails/rails/pull/50705.diff",
            "patch_url": "https://github.com/rails/rails/pull/50705.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50594\r\n\r\nOpening a PR because the backport is non-trivial, so I want CI coverage. Also @ghiculescu pointed a possible issue in https://github.com/rails/rails/commit/d429bfb3b6fd2794f0d859b68e5dee24578d405f so I'd like to get to the bottom of that before merging the backport.\r\n\r\ncc @rafaelfranca ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50705/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50703",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50703/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50703/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50703/events",
        "html_url": "https://github.com/rails/rails/pull/50703",
        "id": 2075945414,
        "node_id": "PR_kwDNIULOY8ThOg",
        "number": 50703,
        "title": "Add warning for non-existent directories in autoload paths for Zeitwerk",
        "user": {
            "login": "aeroastro",
            "id": 4468155,
            "node_id": "MDQ6VXNlcjQ0NjgxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4468155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aeroastro",
            "html_url": "https://github.com/aeroastro",
            "followers_url": "https://api.github.com/users/aeroastro/followers",
            "following_url": "https://api.github.com/users/aeroastro/following{/other_user}",
            "gists_url": "https://api.github.com/users/aeroastro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aeroastro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aeroastro/subscriptions",
            "organizations_url": "https://api.github.com/users/aeroastro/orgs",
            "repos_url": "https://api.github.com/users/aeroastro/repos",
            "events_url": "https://api.github.com/users/aeroastro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aeroastro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-11T07:28:26Z",
        "updated_at": "2024-01-17T12:05:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50703",
            "html_url": "https://github.com/rails/rails/pull/50703",
            "diff_url": "https://github.com/rails/rails/pull/50703.diff",
            "patch_url": "https://github.com/rails/rails/pull/50703.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I noticed that Rails does not warn the user when they specify a non-existing directory in the `config.autoload_paths` or `config.autoload_once_paths` settings. This can lead to confusion and hard-to-debug errors when the user expects some files to be loaded but they are not.\r\n\r\n### Detail\r\n\r\nThis Pull Request add a warning message when specified paths for `config.autoload_paths` and `config.autoload_once_paths` are not existing directories.\r\nBelow is the example message:\r\n\r\n```\r\nconfig.autoload_paths must be existing directories.\r\n'/wrong/path/to/load' is not an existing directory.\r\n```\r\n\r\n### Additional information\r\n\r\nSince this PR does not change the behavior itself, I believe existing tests cover this PR.\r\n\r\nThe warning message has been inspired by the following code.\r\nhttps://github.com/rails/rails/blob/91968e5a185927b8216b82c860a48b6367285456/railties/lib/rails/application/bootstrap.rb#L23-L30\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50703/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50695",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50695/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50695/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50695/events",
        "html_url": "https://github.com/rails/rails/pull/50695",
        "id": 2074094584,
        "node_id": "PR_kwDNIULOY6t9sA",
        "number": 50695,
        "title": "Ignore the query cache in a block",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-10T10:47:07Z",
        "updated_at": "2024-01-30T04:11:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50695",
            "html_url": "https://github.com/rails/rails/pull/50695",
            "diff_url": "https://github.com/rails/rails/pull/50695.diff",
            "patch_url": "https://github.com/rails/rails/pull/50695.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis PR allow the Query cache to be ignored in a block.\r\n\r\nFor Solid Cache queries we want to be able to completely disable the query cache (see https://github.com/rails/solid_cache/issues/123).\r\n\r\nSolid Cache uses the database as the Rails cache so it gets the automatic query cache behaviour by default. \r\n\r\nWe'd like to avoid this because the local cache already handles caching repeated reads and having Rails cache writes clear the AR query cache is not desirable.\r\n\r\n`uncached` works for disabling reads doesn't disable clearing the cache for writes.\r\n\r\n### Detail\r\n\r\nWe add a `ignore_query_cache` method to the connection. It takes a block and within that block:\r\n- queries will not be cached in the query cache\r\n- queries will not be read from the query cache\r\n- writes will not clear the query cache\r\n- cached/uncached blocks will be ignored\r\n\r\nExample usage:\r\n\r\n```ruby\r\nActiveRecord::Base.connection.ignore_query_cache do\r\n  post = Post.find 1\r\n  post.touch\r\nend\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50695/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50672",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50672/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50672/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50672/events",
        "html_url": "https://github.com/rails/rails/issues/50672",
        "id": 2072396416,
        "node_id": "I_kwDNIULOe4ZCgA",
        "number": 50672,
        "title": "db:schema:load:<name> purges test database",
        "user": {
            "login": "romuloceccon",
            "id": 40032,
            "node_id": "MDQ6VXNlcjQwMDMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/40032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/romuloceccon",
            "html_url": "https://github.com/romuloceccon",
            "followers_url": "https://api.github.com/users/romuloceccon/followers",
            "following_url": "https://api.github.com/users/romuloceccon/following{/other_user}",
            "gists_url": "https://api.github.com/users/romuloceccon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/romuloceccon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/romuloceccon/subscriptions",
            "organizations_url": "https://api.github.com/users/romuloceccon/orgs",
            "repos_url": "https://api.github.com/users/romuloceccon/repos",
            "events_url": "https://api.github.com/users/romuloceccon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/romuloceccon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-09T13:43:19Z",
        "updated_at": "2024-01-10T09:19:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Commit [adb64db43d](https://github.com/rails/rails/commit/adb64db43dba5cad1007ce57e25df67f8b3e91f8#diff-4a42b5efdab725af0936f94b4a84dcf6a8be8738e28ed265e0a3e74f275f5048R491) changed task `db:schema:load:<name>` to invoke `db:test:purge:<name>`.\r\n\r\nBecause of that Rails 7.1 breaks my workflow for initializing a local environment:\r\n\r\n- create database with `db:create`\r\n- run custom SQL to create Postgres extensions, schemas and triggers\r\n- load schema with `db:schema:load:<name>`\r\n\r\nStrangely, `db:schema:load` keeps the old behavior, and I could not find the explanation for the change in the commit message or in related Github issues.\r\n\r\nAlso, it _requires_ a test database to be configured in `database.yml`; otherwise the task fails:\r\n\r\n```\r\n$ RAILS_ENV=development bin/rails db:schema:load:primary\r\nbin/rails aborted!\r\nTypeError: Invalid type for configuration. Expected Symbol, String, or Hash. Got nil (TypeError)\r\n\r\n        raise TypeError, \"Invalid type for configuration. Expected Symbol, String, or Hash. Got #{config.inspect}\"\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nTasks: TOP => db:schema:load:primary => db:test:purge:primary\r\n(See full trace by running task with --trace)\r\n```\r\n\r\nCan someone confirm the change was intentional?\r\n\r\n**Steps to reproduce the failure**\r\n\r\n- `$ rails new rails_bug`\r\n- `$ cd rails_bug`\r\n- use the following `database.yml`:\r\n\r\n```\r\ndevelopment:\r\n  one:\r\n    adapter: sqlite3\r\n    database: storage/development.sqlite3\r\n  two:\r\n    adapter: sqlite3\r\n    database: storage/development_two.sqlite3\r\n    migrations_paths: db/migrate_two\r\n```\r\n- `$ bin/rails db:migrate:one`\r\n- `$ bin/rails db:schema:load:one`\r\n\r\n**Expected behavior**\r\n\r\nNo error.\r\n\r\n**Actual behavior**\r\n\r\nTypeError invoking database task.\r\n\r\n**System configuration**\r\n\r\nRails 7.1.2\r\nRuby 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50666",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50666/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50666/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50666/events",
        "html_url": "https://github.com/rails/rails/issues/50666",
        "id": 2071645014,
        "node_id": "I_kwDNIULOe3rLVg",
        "number": 50666,
        "title": "`rails credentials:edit` lets you pass an unknown editor, without issuing any error report",
        "user": {
            "login": "ArthurPV",
            "id": 42948054,
            "node_id": "MDQ6VXNlcjQyOTQ4MDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/42948054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ArthurPV",
            "html_url": "https://github.com/ArthurPV",
            "followers_url": "https://api.github.com/users/ArthurPV/followers",
            "following_url": "https://api.github.com/users/ArthurPV/following{/other_user}",
            "gists_url": "https://api.github.com/users/ArthurPV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ArthurPV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ArthurPV/subscriptions",
            "organizations_url": "https://api.github.com/users/ArthurPV/orgs",
            "repos_url": "https://api.github.com/users/ArthurPV/repos",
            "events_url": "https://api.github.com/users/ArthurPV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ArthurPV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-09T05:15:43Z",
        "updated_at": "2024-01-09T13:23:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.2\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/object/blank\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_credentials_edit_command\r\n    # test with ed editor\r\n    # assert_equal system(\"VISUAL=ed rails credentials:edit << EOF\\nEOF\"), true\r\n    # test with an unknown editor\r\n    assert_equal system(\"VISUAL=abc rails credentials:edit\"), false\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\n$? = 1, with an error report\r\n\r\n### Actual behavior\r\n\r\noutput:\r\n\r\n```\r\nEditing config/credentials.yml.enc...\r\nFile encrypted and saved.\r\n```\r\n\r\n$? = 0\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.3.0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50666/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50645",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50645/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50645/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50645/events",
        "html_url": "https://github.com/rails/rails/issues/50645",
        "id": 2070625119,
        "node_id": "I_kwDNIULOe2s7Xw",
        "number": 50645,
        "title": "Rails 7.1 Create model with has_many with lambda incorrect default",
        "user": {
            "login": "nikita-railsware",
            "id": 137036598,
            "node_id": "U_kgDOCCsDNg",
            "avatar_url": "https://avatars.githubusercontent.com/u/137036598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikita-railsware",
            "html_url": "https://github.com/nikita-railsware",
            "followers_url": "https://api.github.com/users/nikita-railsware/followers",
            "following_url": "https://api.github.com/users/nikita-railsware/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikita-railsware/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikita-railsware/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikita-railsware/subscriptions",
            "organizations_url": "https://api.github.com/users/nikita-railsware/orgs",
            "repos_url": "https://api.github.com/users/nikita-railsware/repos",
            "events_url": "https://api.github.com/users/nikita-railsware/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikita-railsware/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-08T14:54:30Z",
        "updated_at": "2024-01-24T09:51:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nIn Rails 7.1, when I create new model with lambda in `has_many` association without passing value to the parameter, it puts serialized value of array that passed in `where` in a lambda.\r\nRails 7.0 just put `nil` in this case.\r\n\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.2\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :users, force: true do |t|\r\n  end\r\n\r\n  create_table :post_accesses, force: true do |t|\r\n    t.string :access_type\r\n    t.references :post\r\n    t.references :user\r\n  end\r\nend\r\n\r\nclass PostAccess < ActiveRecord::Base\r\n  ROLES = %w[viewer editor owner]\r\n  STAFF_ROLES = %w[editor owner]\r\n\r\n  belongs_to :user\r\n  belongs_to :post\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :post_accesses\r\n  has_many :staff_post_accesses,\r\n           -> { where(access_type: PostAccess::STAFF_ROLES) },\r\n           class_name: 'PostAccess'\r\n\r\n  has_many :staff_users, through: :staff_post_accesses, class_name: 'User', source: :user\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    user = User.create!\r\n    post = Post.create!(staff_users: [user])\r\n\r\n    assert_equal nil, post.post_accesses.first.access_type\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nIt should put `nil`, or one of the possible value\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nIt put serialized array:\r\n'[\"editor\", \"owner\"]'\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50645/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50645/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50637",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50637/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50637/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50637/events",
        "html_url": "https://github.com/rails/rails/pull/50637",
        "id": 2069551280,
        "node_id": "PR_kwDNIULOY21ZLw",
        "number": 50637,
        "title": "Experiment | [Fix #47809] `load_async` support for collection associations",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-08T03:24:48Z",
        "updated_at": "2024-01-09T03:10:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50637",
            "html_url": "https://github.com/rails/rails/pull/50637",
            "diff_url": "https://github.com/rails/rails/pull/50637.diff",
            "patch_url": "https://github.com/rails/rails/pull/50637.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nMostly an experiment to fix #47809 while trying to avoid a large refactor which [might be the ideal solution](https://github.com/rails/rails/issues/47809#issuecomment-1489832287). This only tackles collection associations.\r\n\r\n### Detail\r\n\r\nTODO\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nTODO\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50637/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50637/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50633",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50633/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50633/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50633/events",
        "html_url": "https://github.com/rails/rails/pull/50633",
        "id": 2069256890,
        "node_id": "PR_kwDNIULOY2laaQ",
        "number": 50633,
        "title": "Make `group`/`regroup` inside `merge` be applied to the merged relation",
        "user": {
            "login": "joaomarcos96",
            "id": 31287923,
            "node_id": "MDQ6VXNlcjMxMjg3OTIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/31287923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joaomarcos96",
            "html_url": "https://github.com/joaomarcos96",
            "followers_url": "https://api.github.com/users/joaomarcos96/followers",
            "following_url": "https://api.github.com/users/joaomarcos96/following{/other_user}",
            "gists_url": "https://api.github.com/users/joaomarcos96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joaomarcos96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joaomarcos96/subscriptions",
            "organizations_url": "https://api.github.com/users/joaomarcos96/orgs",
            "repos_url": "https://api.github.com/users/joaomarcos96/repos",
            "events_url": "https://api.github.com/users/joaomarcos96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joaomarcos96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-07T19:25:39Z",
        "updated_at": "2024-01-17T22:36:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50633",
            "html_url": "https://github.com/rails/rails/pull/50633",
            "diff_url": "https://github.com/rails/rails/pull/50633.diff",
            "patch_url": "https://github.com/rails/rails/pull/50633.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nWhen using `group` inside `merge`, the `group` is applied to the outermost relation instead of the merged relation, which is unexpected. The same is true for `regroup`.\r\n\r\n### Detail\r\n\r\nNow, `group` inside `merge` is applied to the merged relation, as intended. The behavior was changed for `regroup` as well, and documented.\r\n\r\nBefore:\r\n\r\n```rb\r\nProduct.joins(:items).group(:id).merge(Item.group(:title))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"products\".\"title\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id)).regroup(:title)\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"title\"\r\n```\r\n\r\nAfter:\r\n```rb\r\nProduct.joins(:items).group(:id).merge(Item.group(:title))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"items\".\"title\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"items\".\"id\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id)).regroup(:title)\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"title\"\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50633/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50623",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50623/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50623/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50623/events",
        "html_url": "https://github.com/rails/rails/pull/50623",
        "id": 2068829741,
        "node_id": "PR_kwDNIULOY2QLzQ",
        "number": 50623,
        "title": "Pass render options and block to calls to `#render_in`",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-06T20:46:09Z",
        "updated_at": "2024-01-30T03:15:45Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50623",
            "html_url": "https://github.com/rails/rails/pull/50623",
            "diff_url": "https://github.com/rails/rails/pull/50623.diff",
            "patch_url": "https://github.com/rails/rails/pull/50623.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nCloses [#45432][]\r\n\r\nSupport for objects that respond to `#render_in` was introduced in [#36388][] and [#37919][]. Those implementations assume that the instance will all the context it needs to render itself. That assumption doesn't account for call-site arguments like `locals: { ... }` or a block.\r\n\r\n### Detail\r\n\r\nThis commit expands support for rendering with a `:renderable` option to incorporate locals and blocks. For example:\r\n\r\n```ruby\r\nclass Greeting\r\n  def render_in(view_context, **options, &block)\r\n    if block\r\n      view_context.render html: block.call\r\n    else\r\n      view_context.render inline: <<~ERB.strip, **options\r\n        Hello, <%= name %>\r\n      ERB\r\n    end\r\n  end\r\nend\r\n\r\nrender(Greeting.new)                    # => \"Hello, World\"\r\nrender(Greeting.new, name: \"Local\")     # => \"Hello, Local\"\r\nrender(Greeting.new) { \"Hello, Block\" } # => \"Hello, Block\"\r\n```\r\n\r\nSince existing tools depend on the `#render_in(view_context)` signature\r\nwithout options, this commit deprecates that signature in favor of one\r\nthat accepts options and a block.\r\n\r\n[#45432]: https://github.com/rails/rails/pull/45432\r\n[#36388]: https://github.com/rails/rails/pull/36388\r\n[#37919]: https://github.com/rails/rails/pull/37919\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50623/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50610",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50610/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50610/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50610/events",
        "html_url": "https://github.com/rails/rails/pull/50610",
        "id": 2068183148,
        "node_id": "PR_kwDNIULOY1t8TA",
        "number": 50610,
        "title": "Don't fail for uploads with content-type parameters in the ActiveStorage::DiskController",
        "user": {
            "login": "codergeek121",
            "id": 4910785,
            "node_id": "MDQ6VXNlcjQ5MTA3ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4910785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codergeek121",
            "html_url": "https://github.com/codergeek121",
            "followers_url": "https://api.github.com/users/codergeek121/followers",
            "following_url": "https://api.github.com/users/codergeek121/following{/other_user}",
            "gists_url": "https://api.github.com/users/codergeek121/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codergeek121/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codergeek121/subscriptions",
            "organizations_url": "https://api.github.com/users/codergeek121/orgs",
            "repos_url": "https://api.github.com/users/codergeek121/repos",
            "events_url": "https://api.github.com/users/codergeek121/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codergeek121/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-05T23:32:34Z",
        "updated_at": "2024-01-08T20:20:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50610",
            "html_url": "https://github.com/rails/rails/pull/50610",
            "diff_url": "https://github.com/rails/rails/pull/50610.diff",
            "patch_url": "https://github.com/rails/rails/pull/50610.patch",
            "merged_at": null
        },
        "body": "Fixes #50600 by parsing the string content-type before comparing it to the `Mime::Type`. This comparison will ignore the parameters.\r\n\r\n@alexandergitter I added you as co-author for the reproduction test case.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50610/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50610/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50608",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50608/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50608/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50608/events",
        "html_url": "https://github.com/rails/rails/pull/50608",
        "id": 2067907461,
        "node_id": "PR_kwDNIULOY1ewzQ",
        "number": 50608,
        "title": "allow dom_id method to accept an array of records_or_classes",
        "user": {
            "login": "jwilsjustin",
            "id": 820759,
            "node_id": "MDQ6VXNlcjgyMDc1OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/820759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jwilsjustin",
            "html_url": "https://github.com/jwilsjustin",
            "followers_url": "https://api.github.com/users/jwilsjustin/followers",
            "following_url": "https://api.github.com/users/jwilsjustin/following{/other_user}",
            "gists_url": "https://api.github.com/users/jwilsjustin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jwilsjustin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jwilsjustin/subscriptions",
            "organizations_url": "https://api.github.com/users/jwilsjustin/orgs",
            "repos_url": "https://api.github.com/users/jwilsjustin/repos",
            "events_url": "https://api.github.com/users/jwilsjustin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jwilsjustin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-05T19:12:49Z",
        "updated_at": "2024-01-08T14:17:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50608",
            "html_url": "https://github.com/rails/rails/pull/50608",
            "diff_url": "https://github.com/rails/rails/pull/50608.diff",
            "patch_url": "https://github.com/rails/rails/pull/50608.patch",
            "merged_at": null
        },
        "body": "# Context\r\n\r\nSee also: https://github.com/hotwired/turbo-rails/pull/476\r\n\r\n[hotwired/turbo-rails/pull/476](https://github.com/hotwired/turbo-rails/pull/476) removed the ability to pass multiple ids/models to the `turbo_frame_tag` helper method. In that PR it was suggested by @skipkayhil that this ability be passed down to the `dom_id` method (which is a part of rails core) method rather than the `turbo_frame_tag` helper (which is a part of turbo-rails).\r\n\r\nref: https://discuss.rubyonrails.org/t/allow-dom-id-method-to-accept-multiple-ids-models/84408\r\n\r\n# Changes\r\n\r\nIf the first argument of the `dom_id` is an array, this change will loop through each value and form a singular dom ID, then join the parts together. This change will allow turbo frame tags to accept multiple models (similar to the `cache` helper from ActionView).\r\n\r\n```\r\n<%= turbo_frame_tag [customer, field] do %>\r\n  <!-- code -->\r\n<% end %>\r\n```\r\n\r\n***\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50608/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50608/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50606",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50606/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50606/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50606/events",
        "html_url": "https://github.com/rails/rails/pull/50606",
        "id": 2067810728,
        "node_id": "PR_kwDNIULOY1ZYdQ",
        "number": 50606,
        "title": "[Fix #50604] Restore compatibility of Active Record Encryption configs with eager loading mode",
        "user": {
            "login": "maximerety",
            "id": 58582,
            "node_id": "MDQ6VXNlcjU4NTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/58582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maximerety",
            "html_url": "https://github.com/maximerety",
            "followers_url": "https://api.github.com/users/maximerety/followers",
            "following_url": "https://api.github.com/users/maximerety/following{/other_user}",
            "gists_url": "https://api.github.com/users/maximerety/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maximerety/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maximerety/subscriptions",
            "organizations_url": "https://api.github.com/users/maximerety/orgs",
            "repos_url": "https://api.github.com/users/maximerety/repos",
            "events_url": "https://api.github.com/users/maximerety/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maximerety/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-05T18:03:09Z",
        "updated_at": "2024-01-31T12:08:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50606",
            "html_url": "https://github.com/rails/rails/pull/50606",
            "diff_url": "https://github.com/rails/rails/pull/50606.diff",
            "patch_url": "https://github.com/rails/rails/pull/50606.patch",
            "merged_at": null
        },
        "body": "\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes #50604\r\n\r\nThis Pull Request fixes a source of incompatibility between the loading order of Active Record Encryption configs and the loading of AR models in eager loading mode.\r\n\r\n### Detail\r\n\r\nThis Pull Request removes an occurrence of `after_initialize` introduced in https://github.com/rails/rails/pull/48530, which is not fully compatible with the eager loading mode.\r\n\r\nPrevious concerns were raised in [a discussion from the same PR](https://github.com/rails/rails/pull/48530/files#r1237624233).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50606/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50604",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50604/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50604/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50604/events",
        "html_url": "https://github.com/rails/rails/issues/50604",
        "id": 2067789909,
        "node_id": "I_kwDNIULOez_4VQ",
        "number": 50604,
        "title": "Active Record Encryption configs not ready in eager loading mode",
        "user": {
            "login": "maximerety",
            "id": 58582,
            "node_id": "MDQ6VXNlcjU4NTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/58582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maximerety",
            "html_url": "https://github.com/maximerety",
            "followers_url": "https://api.github.com/users/maximerety/followers",
            "following_url": "https://api.github.com/users/maximerety/following{/other_user}",
            "gists_url": "https://api.github.com/users/maximerety/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maximerety/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maximerety/subscriptions",
            "organizations_url": "https://api.github.com/users/maximerety/orgs",
            "repos_url": "https://api.github.com/users/maximerety/repos",
            "events_url": "https://api.github.com/users/maximerety/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maximerety/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-05T17:50:05Z",
        "updated_at": "2024-01-17T12:55:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nThe introduction of `after_initialize` in Active Record Encryption configuration setup in https://github.com/rails/rails/pull/48530 (also see [that discussion in the same PR](https://github.com/rails/rails/pull/48530/files#r1237624233)) is not fully compatible with the eager loading mode: https://github.com/rails/rails/blob/6b446bee63c401364d193920f3426af0bfe75650/activerecord/lib/active_record/railtie.rb#L385\r\n\r\nIn eager loading mode, the models from the application are loaded before the `after_initialize` hook has a chance to run, as visible here (hint: you need to scroll in the code snippet): https://github.com/rails/rails/blob/b0b1eb5a1847c1de5616a55c1d7c78f11eb08cd8/railties/lib/rails/application/finisher.rb#L77-L95\r\n\r\nAs a result, some configurations may not be ready at the time Active Record Encryption's helper `encrypts` needs them during model loading.\r\n\r\nFor example, the following methods are called in order: `encrypts` ->  `encrypt_attribute` -> `scheme_for` -> `global_previous_schemes_for`:\r\n\r\nhttps://github.com/rails/rails/blob/e0a55b038f7f2f50d1467876558be183be6cedaa/activerecord/lib/active_record/encryption/encryptable_record.rb#L78-L82\r\n\r\nIf `ActiveRecord::Encryption.config.previous_schemes` is not defined yet, then the encrypted attribute is not properly configured.\r\n\r\n### Example 1\r\n\r\n#### Steps to reproduce\r\n\r\nIn this example, a previous encryption scheme is provided globally, as described in https://guides.rubyonrails.org/active_record_encryption.html#global-previous-encryption-schemes:\r\n\r\n```ruby\r\n# config/application.rb\r\nconfig.active_record.encryption.previous = [ { key_provider: MyOldKeyProvider.new } ]\r\nconfig.eager_load = true\r\n\r\n# app/models/article.rb\r\nclass Article < ApplicationRecord\r\n  encrypts :title\r\nend\r\n```\r\n\r\n#### Expected behavior\r\n\r\nThe previous encryption scheme should always be taken into account when line `encrypts :title` is reached.\r\n\r\n#### Actual behavior\r\n\r\nWhen lazy loading the application, everything is fine and the `Article` model is lazily loaded after the previous encryption scheme is defined by the `after_initialize` hook and the `:title` attribute can benefit from that previous encryption scheme.\r\n\r\nWhen eager loading the application however, the `Article` model is eager loaded before the previous scheme is defined and that config gets ignored.\r\n\r\n### Example 2\r\n\r\n#### Steps to reproduce\r\n\r\nIn this example, a custom key provider is configured when declaring the attribute, as described in https://guides.rubyonrails.org/active_record_encryption.html#model-specific-key-providers:\r\n\r\n```ruby\r\n# config/application.rb\r\nconfig.eager_load = true\r\n\r\n# app/models/article.rb\r\nclass Article < ApplicationRecord\r\n  encrypts :title, key_provider: CustomKeyProvider.new(ActiveRecord::Encryption.config.primary_key)\r\nend\r\n```\r\n\r\n#### Expected behavior\r\n\r\nThe custom key provider should be able to use the `primary_key` configured  when line `encrypts :title` is reached.\r\n\r\n#### Actual behavior\r\n\r\nWhen lazy loading the application, everything is fine and the `Article` model is lazily loaded after the `primary_key` is defined by the `after_initialize` hook and the `:title` attribute can be set up normally.\r\n\r\nWhen eager loading the application however, the `Article` model is eager loaded before the `primary_key` is defined by the `after_initialize` hook, and the model fails to load with the following exception:\r\n\r\n```\r\nactiverecord-7.1.2/lib/active_record/encryption/config.rb:43:in `block (2 levels) in <class:Config>':\r\n  Missing Active Record encryption credential: active_record_encryption.primary_key (ActiveRecord::Encryption::Errors::Configuration)\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: `7.1.2` / `7.1.3` / `main`\r\n\r\n**Ruby version**: `3.2.2` / `3.3.0`\r\n\r\n### Possible fixes\r\n\r\n1. Get rid of `after_initialize` if not really necessary (see [previous discussions](https://github.com/rails/rails/pull/48530/files#r1237624233))\r\n2. Otherwise, keep `after_initialize` and attempt to patch the eager loading mode (using `config.before_eager_load`?)",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50604/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50600",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50600/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50600/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50600/events",
        "html_url": "https://github.com/rails/rails/issues/50600",
        "id": 2067401862,
        "node_id": "I_kwDNIULOezoMhg",
        "number": 50600,
        "title": "ActiveStorage::DiskController fails for uploads when Content-Type / media type contains a parameter",
        "user": {
            "login": "alexandergitter",
            "id": 816758,
            "node_id": "MDQ6VXNlcjgxNjc1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/816758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexandergitter",
            "html_url": "https://github.com/alexandergitter",
            "followers_url": "https://api.github.com/users/alexandergitter/followers",
            "following_url": "https://api.github.com/users/alexandergitter/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexandergitter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexandergitter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexandergitter/subscriptions",
            "organizations_url": "https://api.github.com/users/alexandergitter/orgs",
            "repos_url": "https://api.github.com/users/alexandergitter/repos",
            "events_url": "https://api.github.com/users/alexandergitter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexandergitter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-01-05T14:01:29Z",
        "updated_at": "2024-01-10T05:24:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`ActiveStorage::DiskController#update` returns a 422 error when the submitted content contains a parameter in its Content-Type / media type, for example `audio/ogg; codecs=opus`.\r\n\r\nThis issue appears to have been introduced in https://github.com/rails/rails/commit/5fb4703471ffb11dab9aa3855daeef9f592f6388\r\n\r\n### Steps to reproduce\r\nHere's a test case that fails in `ActiveStorage::DiskControllerTest`:\r\n\r\n```ruby\r\ntest \"directly uploading blob with content type parameters\" do\r\n  data = \"Something else entirely!\"\r\n  blob = create_blob_before_direct_upload(\r\n    byte_size: data.size, checksum: OpenSSL::Digest::MD5.base64digest(data), content_type: \"audio/ogg; codecs=opus\")\r\n\r\n  put blob.service_url_for_direct_upload, params: data, headers: { \"Content-Type\" => \"audio/ogg; codecs=opus\" }\r\n  assert_response :no_content\r\n  assert_equal data, blob.download\r\nend\r\n```\r\n\r\n(The test passes when the `; codecs=opus` part is omitted.)\r\n\r\n### Expected behavior\r\nThe upload succeeds, since the content type from the uploaded content matches the content type in the direct upload token.\r\n\r\n### Actual behavior\r\nThe request fails with 422 Unprocessable Content.\r\n\r\n### System configuration\r\n**Rails version**: 7.2.0.alpha (1702b6cbfd)\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50598",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50598/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50598/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50598/events",
        "html_url": "https://github.com/rails/rails/pull/50598",
        "id": 2067384052,
        "node_id": "PR_kwDNIULOY1BvYg",
        "number": 50598,
        "title": "Document `upsert`/`upsert_all` `on_duplicate: :skip` option",
        "user": {
            "login": "lucasmazza",
            "id": 80978,
            "node_id": "MDQ6VXNlcjgwOTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/80978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucasmazza",
            "html_url": "https://github.com/lucasmazza",
            "followers_url": "https://api.github.com/users/lucasmazza/followers",
            "following_url": "https://api.github.com/users/lucasmazza/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucasmazza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lucasmazza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucasmazza/subscriptions",
            "organizations_url": "https://api.github.com/users/lucasmazza/orgs",
            "repos_url": "https://api.github.com/users/lucasmazza/repos",
            "events_url": "https://api.github.com/users/lucasmazza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lucasmazza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-05T13:49:07Z",
        "updated_at": "2024-01-09T13:38:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50598",
            "html_url": "https://github.com/rails/rails/pull/50598",
            "diff_url": "https://github.com/rails/rails/pull/50598.diff",
            "patch_url": "https://github.com/rails/rails/pull/50598.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nI've stumbled on this when writing an `upsert` call that must produce a `ON CONFLICT () DO NOTHING` fragment.\r\n\r\nUsing `update_only: []` didn't worked as it does update all columns on the table, but reading `InsertAll` I noticed the use of `:skip` internally that worked for this scenario, but it isn't mentioned on the public docs.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50598/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50598/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50583",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50583/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50583/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50583/events",
        "html_url": "https://github.com/rails/rails/issues/50583",
        "id": 2066163278,
        "node_id": "I_kwDNIULOeycmTg",
        "number": 50583,
        "title": "Active Storage Variant causing Aws::S3::Errors::NoSuchKey error when deleting an attachment",
        "user": {
            "login": "basiszwo",
            "id": 24071,
            "node_id": "MDQ6VXNlcjI0MDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/24071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/basiszwo",
            "html_url": "https://github.com/basiszwo",
            "followers_url": "https://api.github.com/users/basiszwo/followers",
            "following_url": "https://api.github.com/users/basiszwo/following{/other_user}",
            "gists_url": "https://api.github.com/users/basiszwo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/basiszwo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/basiszwo/subscriptions",
            "organizations_url": "https://api.github.com/users/basiszwo/orgs",
            "repos_url": "https://api.github.com/users/basiszwo/repos",
            "events_url": "https://api.github.com/users/basiszwo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/basiszwo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-04T18:44:36Z",
        "updated_at": "2024-01-31T22:09:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am not sure if this is a bug or something is not configured correctly. \r\n\r\n### Steps to reproduce\r\n\r\nUsing Active Storage with a S3-compatible object storage from digital ocean or scaleway configured along the rails guide for active storage.\r\n\r\nActive Storage configuration\r\n\r\n```\r\ndigitalocean:\r\n  service: S3\r\n  access_key_id: <%= ENV.fetch(\"DIGITALOCEAN_S3_ACCESS_KEY_ID\") %>\r\n  secret_access_key: <%= ENV.fetch(\"DIGITALOCEAN_S3_ACCESS_KEY_SECRET\") %>\r\n  bucket: <%= ENV.fetch(\"DIGITALOCEAN_S3_BUCKET_NAME\") %>\r\n  endpoint: <%= ENV.fetch(\"DIGITALOCEAN_S3_ENDPOINT\") %>\r\n```\r\n\r\nenabled with \r\n\r\n```\r\n# config/environments/development.rb\r\nconfig.active_storage.service = :digitalocean\r\n```\r\n\r\nhaving a User model with \r\n\r\n```ruby\r\nhas_one_attached :avatar do |attachable|\r\n  attachable.variant(:thumb, resize_to_fill: [350, 350])\r\nend\r\n```\r\n\r\nAfter uploading a file from the edit form the variant gets created when accessing the show view. \r\n\r\nLogs look like this\r\n\r\n```\r\nActiveStorage::VariantRecord Create (1.8ms)  INSERT INTO \"active_storage_variant_records\" (\"blob_id\", \"variation_digest\") VALUES ($1, $2) RETURNING \"id\"  [[\"blob_id\", 116], [\"variation_digest\", \"cAfAf5iAxm52Ff0Mw7wXY2F9d4A=\"]]\r\nActiveStorage::Blob Load (1.2ms)  SELECT \"active_storage_blobs\".* FROM \"active_storage_blobs\" INNER JOIN \"active_storage_attachments\" ON \"active_storage_blobs\".\"id\" = \"active_storage_attachments\".\"blob_id\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 51], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"name\", \"image\"], [\"LIMIT\", 1]]\r\nActiveStorage::Attachment Load (0.2ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 51], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"name\", \"image\"], [\"LIMIT\", 1]]\r\nActiveStorage::Blob Create (0.3ms)  INSERT INTO \"active_storage_blobs\" (\"key\", \"filename\", \"content_type\", \"metadata\", \"service_name\", \"byte_size\", \"checksum\", \"created_at\") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING \"id\"  [[\"key\", \"1dousqzwcx79wlpkfn0o0f1sjfci\"], [\"filename\", \"sigma-16mm.jpg\"], [\"content_type\", \"image/jpeg\"], [\"metadata\", \"{\\\"identified\\\":true}\"], [\"service_name\", \"digitalocean\"], [\"byte_size\", 52716], [\"checksum\", \"d9vmvbLEGDR2ZLzl7XNgUg==\"], [\"created_at\", \"2024-01-04 17:49:27.381653\"]]\r\nActiveStorage::Attachment Create (0.4ms)  INSERT INTO \"active_storage_attachments\" (\"name\", \"record_type\", \"record_id\", \"blob_id\", \"created_at\") VALUES ($1, $2, $3, $4, $5) RETURNING \"id\"  [[\"name\", \"image\"], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"record_id\", 51], [\"blob_id\", 117], [\"created_at\", \"2024-01-04 17:49:27.382925\"]]\r\nTRANSACTION (0.4ms)  COMMIT\r\nS3 Storage (120.4ms) Uploaded file to key: 1dousqzwcx79wlpkfn0o0f1sjfci (checksum: d9vmvbLEGDR2ZLzl7XNgUg==)\r\n```\r\n\r\nAttachments are being displayed, everything is fine, until deleting an attachment where I get the following exception\r\n\r\n```\r\nDEBUG -- :   TRANSACTION (0.2ms)  BEGIN\r\nDEBUG -- :   ActiveStorage::Attachment Exists? (1.7ms)  SELECT 1 AS one FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"blob_id\" = $1 LIMIT $2  [[\"blob_id\", 119], [\"LIMIT\", 1]]\r\nDEBUG -- :   ActiveStorage::VariantRecord Load (0.5ms)  SELECT \"active_storage_variant_records\".* FROM \"active_storage_variant_records\" WHERE \"active_storage_variant_records\".\"blob_id\" = $1  [[\"blob_id\", 119]]\r\nDEBUG -- :   ActiveStorage::Attachment Load (0.8ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 119], [\"record_type\", \"ActiveStorage::Blob\"], [\"name\", \"preview_image\"], [\"LIMIT\", 1]]\r\nDEBUG -- :   ActiveStorage::Blob Destroy (1.4ms)  DELETE FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = $1  [[\"id\", 119]]\r\nDEBUG -- :   TRANSACTION (6.7ms)  COMMIT\r\n INFO -- :   S3 Storage (100.6ms) Deleted file from key: 5qag8y7y3qqol4wrgo9iapy2z8oy\r\n INFO -- :   S3 Storage (38.1ms) Deleted files by key prefix: variants/5qag8y7y3qqol4wrgo9iapy2z8oy/\r\nERROR -- : Error performing ActiveStorage::PurgeJob (Job ID: 508059d0-a343-4377-ae75-c89195417e61) from Sidekiq(default) in 161.91ms: Aws::S3::Errors::NoSuchKey (Aws::S3::Errors::NoSuchKey):\r\n```\r\n\r\nI see this error twice in my logs. One time for the original and one time for the variant.\r\n\r\nActive Storage uploads the blobs without any prefix. See logs on top. \r\n\r\nAm I doing something wrong? Is my application not configured correctly? What am I missing? Thank you \ud83d\ude4f \r\n\r\n### Expected behavior\r\n\r\nDeleting an attachment should not throw errors\r\n\r\nVariants are being uploaded to a `variants` subfolder \r\n\r\n### Actual behavior\r\n\r\nDeleting an attachment throws an `Aws::S3::Errors::NoSuchKey (Aws::S3::Errors::NoSuchKey)` error as with the used key `variants/5qag8y7y3qqol4wrgo9iapy2z8oy/` no objects can be found.\r\n\r\nThis is where Active Storage tries to delete the prefixed variants which have never been created before: https://github.com/rails/rails/blob/main/activestorage/app/models/active_storage/blob.rb#L325\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50583/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50583/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50580",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50580/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50580/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50580/events",
        "html_url": "https://github.com/rails/rails/pull/50580",
        "id": 2065925947,
        "node_id": "PR_kwDNIULOYzzsDw",
        "number": 50580,
        "title": "Port `ActiveRecord::AttributeMethods::Query` to Active Model",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            },
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-04T16:07:32Z",
        "updated_at": "2024-01-04T17:01:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50580",
            "html_url": "https://github.com/rails/rails/pull/50580",
            "diff_url": "https://github.com/rails/rails/pull/50580.diff",
            "patch_url": "https://github.com/rails/rails/pull/50580.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nRelated to https://github.com/rails/rails/issues/50568\r\n\r\nThe backport of [type_for_attribute][] from Active Record to Active Model enables the backport of `ActiveRecord::AttributeMethods::Query` to define predicate methods for both Active Model and Active Record using the same code paths.\r\n\r\n### Detail\r\n\r\nThis commit renames `Active{Record,Model}::AttributeMethods::Query` then includes it into both into the original\r\n`ActiveRecord::AttributeMethods::Query` and into\r\n`ActiveModel::Attributes` by default.\r\n\r\nThe test coverage was copied directly from the [Active Record test suite][], then modified to work in a database-less environment.\r\n\r\n### Additional information\r\n\r\nThe `_query_attribute` method defined in\r\n`ActiveRecord::AttributeMethods::Query` is specific to Active Record, so do not include it in the migration.\r\n\r\n[type_for_attribute]: https://github.com/rails/rails/commit/83f543b8760308081ab1b58c25804c45c2597844\r\n[Active Record test suite]: https://github.com/rails/rails/blob/a73cbbea6a082cdd320ecc92e3c6f1d46fe6af74/activerecord/test/cases/attribute_methods_test.rb#L494-L596\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50580/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50579",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50579/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50579/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50579/events",
        "html_url": "https://github.com/rails/rails/issues/50579",
        "id": 2065896582,
        "node_id": "I_kwDNIULOeyMUhg",
        "number": 50579,
        "title": "CI: SQLite adapter is running in Trilogy tests",
        "user": {
            "login": "skipkayhil",
            "id": 6014046,
            "node_id": "MDQ6VXNlcjYwMTQwNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6014046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skipkayhil",
            "html_url": "https://github.com/skipkayhil",
            "followers_url": "https://api.github.com/users/skipkayhil/followers",
            "following_url": "https://api.github.com/users/skipkayhil/following{/other_user}",
            "gists_url": "https://api.github.com/users/skipkayhil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skipkayhil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skipkayhil/subscriptions",
            "organizations_url": "https://api.github.com/users/skipkayhil/orgs",
            "repos_url": "https://api.github.com/users/skipkayhil/repos",
            "events_url": "https://api.github.com/users/skipkayhil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skipkayhil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 776781281,
                "node_id": "MDU6TGFiZWw3NzY3ODEyODE=",
                "url": "https://api.github.com/repos/rails/rails/labels/ci%20issues",
                "name": "ci issues",
                "color": "aaafff",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-04T15:49:54Z",
        "updated_at": "2024-01-04T15:56:29Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Ref #49373\r\n\r\nhttps://buildkite.com/rails/rails/builds/103367#018cd514-4e51-4bac-be7c-c8656888c21e\r\n\r\nI'm pretty sure this means that some other test is leaking, but I have not dug in at all.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50579/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50958",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50958/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50958/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50958/events",
        "html_url": "https://github.com/rails/rails/pull/50958",
        "id": 2116092234,
        "node_id": "PR_kwDNIULOZeUV5A",
        "number": 50958,
        "title": "Add missing alias to errors array",
        "user": {
            "login": "laomatt",
            "id": 9632282,
            "node_id": "MDQ6VXNlcjk2MzIyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9632282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laomatt",
            "html_url": "https://github.com/laomatt",
            "followers_url": "https://api.github.com/users/laomatt/followers",
            "following_url": "https://api.github.com/users/laomatt/following{/other_user}",
            "gists_url": "https://api.github.com/users/laomatt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laomatt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laomatt/subscriptions",
            "organizations_url": "https://api.github.com/users/laomatt/orgs",
            "repos_url": "https://api.github.com/users/laomatt/repos",
            "events_url": "https://api.github.com/users/laomatt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laomatt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-03T01:01:09Z",
        "updated_at": "2024-02-03T01:01:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50958",
            "html_url": "https://github.com/rails/rails/pull/50958",
            "diff_url": "https://github.com/rails/rails/pull/50958.diff",
            "patch_url": "https://github.com/rails/rails/pull/50958.patch",
            "merged_at": null
        },
        "body": "it used to be that the << operator was able to add error messages during the validation process, this restores that functionality.\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because errors in active record validations seem to be missing the << functionality it used to have\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the array returned by ar errors\r\n\r\n### Additional information\r\n\r\nJust wanted to restore the alias of >> to 'add'\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50958/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50954",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50954/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50954/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50954/events",
        "html_url": "https://github.com/rails/rails/issues/50954",
        "id": 2115098687,
        "node_id": "I_kwDNIULOfhHYPw",
        "number": 50954,
        "title": "esbuild precompilation error in rails 7.1.3",
        "user": {
            "login": "PhilippGsell",
            "id": 58818799,
            "node_id": "MDQ6VXNlcjU4ODE4Nzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58818799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PhilippGsell",
            "html_url": "https://github.com/PhilippGsell",
            "followers_url": "https://api.github.com/users/PhilippGsell/followers",
            "following_url": "https://api.github.com/users/PhilippGsell/following{/other_user}",
            "gists_url": "https://api.github.com/users/PhilippGsell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PhilippGsell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PhilippGsell/subscriptions",
            "organizations_url": "https://api.github.com/users/PhilippGsell/orgs",
            "repos_url": "https://api.github.com/users/PhilippGsell/repos",
            "events_url": "https://api.github.com/users/PhilippGsell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PhilippGsell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T14:43:34Z",
        "updated_at": "2024-02-02T14:43:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\ncreate a new rails 7.1.3 Project with esbuild.\r\n```bash\r\n rails new app --javascript esbuild\r\n```\r\nand try to build the docker image without doing any changes\r\n```bash\r\ndocker build -f Dockerfile -t app_test . && docker run -p 3000:3000 -v .:/rails app_test --env RAILS_MASTER_KEY=xxx\r\n```\r\n\r\n### Expected behavior\r\nThe image should build\r\n\r\n### Actual behavior\r\nyarn throws an error while precompiling the assets.\r\n\r\nyarn run v1.22.21\r\n$ esbuild app/javascript/*.* --bundle --sourcemap --format=esm --outdir=app/assets/builds --public-path=/assets\r\n\u2718 [ERROR] Could not resolve \"@hotwired/turbo-rails\"\r\n\r\n    app/javascript/application.js:2:7:\r\n      2 \u2502 import \"@hotwired/turbo-rails\"\r\n      The command '/bin/sh -c SECRET_KEY_BASE_DUMMY=1 ./bin/rails assets:precompile' returned a non-zero code: 1\r\n\r\n### System configuration\r\n**Ubuntu version**: 22.04\r\n\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.0.2p107 (2021-07-07 revision 0db68f0233) [x86_64-linux-gnu]\r\n\r\n**gem --version**: 3.3.5\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50953",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50953/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50953/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50953/events",
        "html_url": "https://github.com/rails/rails/pull/50953",
        "id": 2114861781,
        "node_id": "PR_kwDNIULOZdP1vw",
        "number": 50953,
        "title": "Add webp as a default to active_storage.web_image_content_types",
        "user": {
            "login": "lewispb",
            "id": 1773614,
            "node_id": "MDQ6VXNlcjE3NzM2MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1773614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lewispb",
            "html_url": "https://github.com/lewispb",
            "followers_url": "https://api.github.com/users/lewispb/followers",
            "following_url": "https://api.github.com/users/lewispb/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewispb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lewispb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewispb/subscriptions",
            "organizations_url": "https://api.github.com/users/lewispb/orgs",
            "repos_url": "https://api.github.com/users/lewispb/repos",
            "events_url": "https://api.github.com/users/lewispb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lewispb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-02T12:51:26Z",
        "updated_at": "2024-02-02T17:19:56Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50953",
            "html_url": "https://github.com/rails/rails/pull/50953",
            "diff_url": "https://github.com/rails/rails/pull/50953.diff",
            "patch_url": "https://github.com/rails/rails/pull/50953.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nCustomers are uploading webp images to our app, and expect them to be rendered just like other images, instead of being converted to the fallback PNG format.\r\n\r\n### Detail\r\n\r\nFollows https://github.com/rails/rails/pull/38918 and https://github.com/rails/rails/pull/38988. At the time, webp browser support was limited. Now 96% of browsers support webp: https://caniuse.com/?search=webp\r\n\r\nThis PR adds webp as a default image type.\r\n\r\n### Additional information\r\n\r\nI think this is a sensible default in 2024, but alternatively each Rails app may choose:\r\n\r\n```\r\nRails.application.configure do\r\n  config.active_storage.web_image_content_types << \"image/webp\"\r\nend\r\n```\r\n\r\n**Changelog**\r\n\r\nI've not added a changelog entry in line with https://github.com/rails/rails/pull/38918#discussion_r410527726, but I'd be happy to add one if it's felt useful now.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\ncc @jeremy \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50953/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50951",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50951/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50951/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50951/events",
        "html_url": "https://github.com/rails/rails/pull/50951",
        "id": 2114685245,
        "node_id": "PR_kwDNIULOZdGIPQ",
        "number": 50951,
        "title": "set default_enforce_utf8 to false",
        "user": {
            "login": "ironsand",
            "id": 4509402,
            "node_id": "MDQ6VXNlcjQ1MDk0MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4509402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ironsand",
            "html_url": "https://github.com/ironsand",
            "followers_url": "https://api.github.com/users/ironsand/followers",
            "following_url": "https://api.github.com/users/ironsand/following{/other_user}",
            "gists_url": "https://api.github.com/users/ironsand/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ironsand/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ironsand/subscriptions",
            "organizations_url": "https://api.github.com/users/ironsand/orgs",
            "repos_url": "https://api.github.com/users/ironsand/repos",
            "events_url": "https://api.github.com/users/ironsand/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ironsand/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-02T11:11:21Z",
        "updated_at": "2024-02-03T08:41:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50951",
            "html_url": "https://github.com/rails/rails/pull/50951",
            "diff_url": "https://github.com/rails/rails/pull/50951.diff",
            "patch_url": "https://github.com/rails/rails/pull/50951.patch",
            "merged_at": null
        },
        "body": "`enforce_utf8` is false by deault in `form_for` #30852\r\nWe normally don't need to consider old IE anymore.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50951/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50950",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50950/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50950/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50950/events",
        "html_url": "https://github.com/rails/rails/pull/50950",
        "id": 2114677525,
        "node_id": "PR_kwDNIULOZdFtKw",
        "number": 50950,
        "title": "Add class name to enum validation exception message",
        "user": {
            "login": "amkisko",
            "id": 54796266,
            "node_id": "MDQ6VXNlcjU0Nzk2MjY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54796266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amkisko",
            "html_url": "https://github.com/amkisko",
            "followers_url": "https://api.github.com/users/amkisko/followers",
            "following_url": "https://api.github.com/users/amkisko/following{/other_user}",
            "gists_url": "https://api.github.com/users/amkisko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amkisko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amkisko/subscriptions",
            "organizations_url": "https://api.github.com/users/amkisko/orgs",
            "repos_url": "https://api.github.com/users/amkisko/repos",
            "events_url": "https://api.github.com/users/amkisko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amkisko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T11:07:18Z",
        "updated_at": "2024-02-02T11:08:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50950",
            "html_url": "https://github.com/rails/rails/pull/50950",
            "diff_url": "https://github.com/rails/rails/pull/50950.diff",
            "patch_url": "https://github.com/rails/rails/pull/50950.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nIn general validation errors should include more information on where it has happened.\r\n\r\n### Detail\r\n\r\nThis PR updates `activerecord/lib/active_record/enum.rb` validation exception message and just adds class name.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50950/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50949",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50949/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50949/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50949/events",
        "html_url": "https://github.com/rails/rails/pull/50949",
        "id": 2114653503,
        "node_id": "PR_kwDNIULOZdEYOA",
        "number": 50949,
        "title": "Add a Rails Guide for tuning performance for deployment",
        "user": {
            "login": "noahgibbs",
            "id": 82408,
            "node_id": "MDQ6VXNlcjgyNDA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/82408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noahgibbs",
            "html_url": "https://github.com/noahgibbs",
            "followers_url": "https://api.github.com/users/noahgibbs/followers",
            "following_url": "https://api.github.com/users/noahgibbs/following{/other_user}",
            "gists_url": "https://api.github.com/users/noahgibbs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noahgibbs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noahgibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/noahgibbs/orgs",
            "repos_url": "https://api.github.com/users/noahgibbs/repos",
            "events_url": "https://api.github.com/users/noahgibbs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noahgibbs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T10:55:44Z",
        "updated_at": "2024-02-02T15:02:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50949",
            "html_url": "https://github.com/rails/rails/pull/50949",
            "diff_url": "https://github.com/rails/rails/pull/50949.diff",
            "patch_url": "https://github.com/rails/rails/pull/50949.patch",
            "merged_at": null
        },
        "body": "This pull request adds a new Rails Guide called \"Tuning Performance for Deployment\".\r\n\r\n### Motivation / Background\r\n\r\nA few weeks ago there was [an issue to change the default thread count for Puma in Rails](https://github.com/rails/rails/issues/50450) and [a PR to make that change](https://github.com/rails/rails/pull/50669).\r\n\r\nThe PR mentioned that a performance tuning guide would be the right way to document some issues, but no such guide exists. I wrote a basic guide and incorporated a lot of feedback from @byroot (Jean Boussier), who wrote the thread count PR.\r\n\r\nThis pull request adds the suggested Rails Guide.\r\n\r\nCC @nateberkopec - though I know you're very busy right now :-)\r\n\r\n### Detail\r\n\r\nIt's impossible to have a detailed guide for all possible Rails deployment options. This guide focuses on Puma (the default server) and CRuby, and on giving a good start to people who don't already know deployment well. I've tried to mention core performance issues without explaining every possible configuration change.\r\n\r\nNext time there is a deployment configuration change, there will be a place to document the tradeoffs.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50949/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50948",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50948/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50948/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50948/events",
        "html_url": "https://github.com/rails/rails/issues/50948",
        "id": 2114571381,
        "node_id": "I_kwDNIULOfgnMdQ",
        "number": 50948,
        "title": "Destroying bi-directional has_one through association only works from one end",
        "user": {
            "login": "airblade",
            "id": 7265,
            "node_id": "MDQ6VXNlcjcyNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7265?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/airblade",
            "html_url": "https://github.com/airblade",
            "followers_url": "https://api.github.com/users/airblade/followers",
            "following_url": "https://api.github.com/users/airblade/following{/other_user}",
            "gists_url": "https://api.github.com/users/airblade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/airblade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/airblade/subscriptions",
            "organizations_url": "https://api.github.com/users/airblade/orgs",
            "repos_url": "https://api.github.com/users/airblade/repos",
            "events_url": "https://api.github.com/users/airblade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/airblade/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T10:14:36Z",
        "updated_at": "2024-02-02T10:14:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Summary\r\n\r\nGiven a `has_one :through` association with `dependent: :destroy`, destroying the parent destroys the through record and the far end.  However if the association is bi-directional, destroying only works from one end \u2013 and the end which succeeds depends on the order of `belongs_to` declarations in the join model.  I believe it should work from both ends.\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :lefts, force: true do |t|\r\n  end\r\n\r\n  create_table :rights, force: true do |t|\r\n  end\r\n\r\n  create_table :middles, force: true do |t|\r\n    t.references :left, foreign_key: true\r\n    t.references :right, foreign_key: true\r\n  end\r\nend\r\n\r\nclass Left < ActiveRecord::Base\r\n  has_one :middle, dependent: :destroy\r\n  has_one :right, through: :middle\r\nend\r\n\r\nclass Middle < ActiveRecord::Base\r\n  belongs_to :left, dependent: :destroy\r\n  belongs_to :right, dependent: :destroy\r\nend\r\n\r\nclass Right < ActiveRecord::Base\r\n  has_one :middle, dependent: :destroy\r\n  has_one :left, through: :middle\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_destroying_left_destroys_right\r\n    left = Left.create!\r\n    right = Right.create!\r\n    middle = Middle.create! left: left, right: right\r\n\r\n    left.destroy\r\n    assert right.destroyed?\r\n  end\r\n\r\n  def test_destroying_right_destroys_left\r\n    left = Left.create!\r\n    right = Right.create!\r\n    middle = Middle.create! left: left, right: right\r\n\r\n    right.destroy\r\n    assert left.destroyed?\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect:\r\n\r\n- `left.destroy` to also destroy its `middle` and its `right`\r\n- `right.destroy` to also destroy its `middle` and its `left`\r\n\r\n### Actual behavior\r\n\r\n- `right.destroy` destroys its `middle` and its `left`\r\n-  `left.destroy` destroys its `middle` but does not destroy its `right`\r\n\r\nHowever if I reverse the order of `Middle`'s `belongs_to` declarations, `right.destroy` stops working and `left.destroy` starts working.\r\n\r\n### Patch\r\n\r\nThis patch fixes the behaviour and does not break any existing tests (via `bundle exec rake test:sqlite3`):\r\n\r\n```diff\r\ndiff --git i/activerecord/lib/active_record/callbacks.rb w/activerecord/lib/active_record/callbacks.rb\r\nindex 29c72d1024..6e9c68b747 100644\r\n--- i/activerecord/lib/active_record/callbacks.rb\r\n+++ w/activerecord/lib/active_record/callbacks.rb\r\n@@ -418,7 +418,7 @@ module ClassMethods\r\n \r\n     def destroy # :nodoc:\r\n       @_destroy_callback_already_called ||= false\r\n-      return if @_destroy_callback_already_called\r\n+      return true if @_destroy_callback_already_called\r\n       @_destroy_callback_already_called = true\r\n       _run_destroy_callbacks { super }\r\n     rescue RecordNotDestroyed => e\r\n```\r\n\r\nCredit for the patch belongs to [Alex](https://stackoverflow.com/users/207090/alex).\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.3.0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50947",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50947/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50947/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50947/events",
        "html_url": "https://github.com/rails/rails/issues/50947",
        "id": 2114046969,
        "node_id": "I_kwDNIULOfgHL-Q",
        "number": 50947,
        "title": "ActiveStorage::IntegrityError (ActiveStorage::IntegrityError)",
        "user": {
            "login": "raoehtesham03",
            "id": 152256436,
            "node_id": "U_kgDOCRM_tA",
            "avatar_url": "https://avatars.githubusercontent.com/u/152256436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoehtesham03",
            "html_url": "https://github.com/raoehtesham03",
            "followers_url": "https://api.github.com/users/raoehtesham03/followers",
            "following_url": "https://api.github.com/users/raoehtesham03/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoehtesham03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoehtesham03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoehtesham03/subscriptions",
            "organizations_url": "https://api.github.com/users/raoehtesham03/orgs",
            "repos_url": "https://api.github.com/users/raoehtesham03/repos",
            "events_url": "https://api.github.com/users/raoehtesham03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoehtesham03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T04:43:40Z",
        "updated_at": "2024-02-02T04:43:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have upgraded my rails application from 5.2 to 6.0 and then 6.0 to 7.0 . So, I am getting ActiveStorage::IntegrityError (ActiveStorage::IntegrityError) while I am trying to get -\r\n```ruby\r\n attachment.variant(resize_to_limit: resize).processed.url\r\n```\r\n\r\n### Expected behavior\r\nIt should not give this error.\r\n\r\n### Actual behavior\r\nGetting this  ActiveStorage::IntegrityError (ActiveStorage::IntegrityError) Error.\r\n\r\n### System configuration\r\n**Rails version**: 3.0.6\r\n\r\n**Ruby version**:  7.0.8\r\n\r\n\r\nPlease provide me the solution to resolve this problem I am stuck on it since a week.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50947/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50947/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50946",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50946/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50946/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50946/events",
        "html_url": "https://github.com/rails/rails/pull/50946",
        "id": 2113959017,
        "node_id": "PR_kwDNIULOZceF3g",
        "number": 50946,
        "title": "Fix error raised when running `db:schema:load:#{name}` and test DB config is missing",
        "user": {
            "login": "ricardotk002",
            "id": 3733470,
            "node_id": "MDQ6VXNlcjM3MzM0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3733470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ricardotk002",
            "html_url": "https://github.com/ricardotk002",
            "followers_url": "https://api.github.com/users/ricardotk002/followers",
            "following_url": "https://api.github.com/users/ricardotk002/following{/other_user}",
            "gists_url": "https://api.github.com/users/ricardotk002/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ricardotk002/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ricardotk002/subscriptions",
            "organizations_url": "https://api.github.com/users/ricardotk002/orgs",
            "repos_url": "https://api.github.com/users/ricardotk002/repos",
            "events_url": "https://api.github.com/users/ricardotk002/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ricardotk002/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T03:17:31Z",
        "updated_at": "2024-02-02T14:50:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50946",
            "html_url": "https://github.com/rails/rails/pull/50946",
            "diff_url": "https://github.com/rails/rails/pull/50946.diff",
            "patch_url": "https://github.com/rails/rails/pull/50946.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFixes #50672\r\n\r\n### Detail\r\n\r\nThe task `db:schema:load:#{name}` depends on `db:test:purge:#{name}` since adb64db which requires the DB config to be present, otherwise an error is raised.\r\n\r\n```\r\n$ bin/rails db:schema:load:one --trace\r\n** Invoke db:schema:load:one (first_time)\r\n** Invoke db:test:purge:one (first_time)\r\n** Invoke db:load_config (first_time)\r\n** Invoke environment (first_time)\r\n** Execute environment\r\n** Execute db:load_config\r\n** Invoke db:check_protected_environments (first_time) ** Invoke db:load_config\r\n** Execute db:check_protected_environments\r\n** Execute db:test:purge:one\r\n** Execute db:schema:load:one\r\n```\r\n\r\nThis commit fixes the problem by returning early when the DB config is indeed missing.\r\n\r\n### Additional information\r\n\r\nThe task `db:schema:load` may need to be updated to depend on `db:test:purge` too, to keep it consistent with `db:schema:load:#{name}`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50946/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50945",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50945/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50945/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50945/events",
        "html_url": "https://github.com/rails/rails/pull/50945",
        "id": 2113809897,
        "node_id": "PR_kwDNIULOZcV_yg",
        "number": 50945,
        "title": "Introduce today_or_future? method",
        "user": {
            "login": "olimart",
            "id": 547754,
            "node_id": "MDQ6VXNlcjU0Nzc1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/547754?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olimart",
            "html_url": "https://github.com/olimart",
            "followers_url": "https://api.github.com/users/olimart/followers",
            "following_url": "https://api.github.com/users/olimart/following{/other_user}",
            "gists_url": "https://api.github.com/users/olimart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olimart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olimart/subscriptions",
            "organizations_url": "https://api.github.com/users/olimart/orgs",
            "repos_url": "https://api.github.com/users/olimart/repos",
            "events_url": "https://api.github.com/users/olimart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olimart/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T00:44:50Z",
        "updated_at": "2024-02-02T00:44:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50945",
            "html_url": "https://github.com/rails/rails/pull/50945",
            "diff_url": "https://github.com/rails/rails/pull/50945.diff",
            "patch_url": "https://github.com/rails/rails/pull/50945.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request introduces a convenient helper to check if a date/time is either today or in the future.\r\n\r\nDrawing inspiration from https://github.com/rails/rails/pull/46786 which introduces `.local?` helper for environment check.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes:\r\n- `ActiveSupport::TimeWithZone`\r\n-  `DateAndTime::Calculations`\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50944",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50944/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50944/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50944/events",
        "html_url": "https://github.com/rails/rails/pull/50944",
        "id": 2113736717,
        "node_id": "PR_kwDNIULOZcR4oQ",
        "number": 50944,
        "title": "Enable DependencyTracker to evaluate interpolated paths",
        "user": {
            "login": "skipkayhil",
            "id": 6014046,
            "node_id": "MDQ6VXNlcjYwMTQwNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6014046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skipkayhil",
            "html_url": "https://github.com/skipkayhil",
            "followers_url": "https://api.github.com/users/skipkayhil/followers",
            "following_url": "https://api.github.com/users/skipkayhil/following{/other_user}",
            "gists_url": "https://api.github.com/users/skipkayhil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skipkayhil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skipkayhil/subscriptions",
            "organizations_url": "https://api.github.com/users/skipkayhil/orgs",
            "repos_url": "https://api.github.com/users/skipkayhil/repos",
            "events_url": "https://api.github.com/users/skipkayhil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skipkayhil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T23:46:28Z",
        "updated_at": "2024-02-02T19:50:39Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50944",
            "html_url": "https://github.com/rails/rails/pull/50944",
            "diff_url": "https://github.com/rails/rails/pull/50944.diff",
            "patch_url": "https://github.com/rails/rails/pull/50944.patch",
            "merged_at": null
        },
        "body": "Previously, neither the PrismRenderParser nor the RipperRenderParser would consider an interpolated string as a dependency. The RubyTracker even included a line to explcitly filter out interpolated paths returned from the RipperRenderParser since they would end in a \"/\". However, the RubyTracker does include the ability to evaluate explicit \"Template Dependency\" comments with wildcard nodes.\r\n\r\nThis commit extends the RipperRenderParser and PrismRenderParser to convert interpolated strings into wildcard globs. Additionally, it changes the RubyTracker to evaluate wildcards the same for both implicit and explicit dependencies. This enables the RubyTracker to identify potential dependencies for interpolated renders, which it was previously unable to do.\r\n\r\ncc @jhawthorn if you think this is a good idea I can try to apply it to ActionView::Precompiler as well\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50944/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50943",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50943/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50943/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50943/events",
        "html_url": "https://github.com/rails/rails/pull/50943",
        "id": 2113672199,
        "node_id": "PR_kwDNIULOZcOUzA",
        "number": 50943,
        "title": "Setup jemalloc in default Dockerfile to optimize memory allocation",
        "user": {
            "login": "northeastprince",
            "id": 55164724,
            "node_id": "MDQ6VXNlcjU1MTY0NzI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/55164724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/northeastprince",
            "html_url": "https://github.com/northeastprince",
            "followers_url": "https://api.github.com/users/northeastprince/followers",
            "following_url": "https://api.github.com/users/northeastprince/following{/other_user}",
            "gists_url": "https://api.github.com/users/northeastprince/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/northeastprince/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/northeastprince/subscriptions",
            "organizations_url": "https://api.github.com/users/northeastprince/orgs",
            "repos_url": "https://api.github.com/users/northeastprince/repos",
            "events_url": "https://api.github.com/users/northeastprince/events{/privacy}",
            "received_events_url": "https://api.github.com/users/northeastprince/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T22:55:15Z",
        "updated_at": "2024-02-01T22:59:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50943",
            "html_url": "https://github.com/rails/rails/pull/50943",
            "diff_url": "https://github.com/rails/rails/pull/50943.diff",
            "patch_url": "https://github.com/rails/rails/pull/50943.patch",
            "merged_at": null
        },
        "body": "[Ruby's use of `malloc` can create memory fragmentation problems, especially when using multiple threads](https://www.speedshop.co/2017/12/04/malloc-doubles-ruby-memory.html) like Puma does. Switching to an allocator that uses different patterns to avoid fragmentation can decrease memory usage by a substantial margin.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50943/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50941",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50941/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50941/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50941/events",
        "html_url": "https://github.com/rails/rails/pull/50941",
        "id": 2113553144,
        "node_id": "PR_kwDNIULOZcHmFg",
        "number": 50941,
        "title": "Retry `ActionableError`s when running tests",
        "user": {
            "login": "andrewn617",
            "id": 39735028,
            "node_id": "MDQ6VXNlcjM5NzM1MDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/39735028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewn617",
            "html_url": "https://github.com/andrewn617",
            "followers_url": "https://api.github.com/users/andrewn617/followers",
            "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewn617/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewn617/orgs",
            "repos_url": "https://api.github.com/users/andrewn617/repos",
            "events_url": "https://api.github.com/users/andrewn617/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewn617/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T21:50:43Z",
        "updated_at": "2024-02-02T14:23:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50941",
            "html_url": "https://github.com/rails/rails/pull/50941",
            "diff_url": "https://github.com/rails/rails/pull/50941.diff",
            "patch_url": "https://github.com/rails/rails/pull/50941.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I want to make it easier to retry actionable errors that occur when running tests. Rails already knows how to recover these errors, so lets make it possible for the user to recover from them and run their tests without exiting the process.\r\n\r\n### Detail\r\n\r\nAllow Actionable Errors encountered when running tests to be retried. This can be configured by `config.actionable_command_line_errors` and is `true` in the test environment unless the `\"CI\"` env variable is set, and false otherwise.\r\n\r\n    \r\n    Migrations are pending. To resolve this issue, run:\r\n    \r\n            bin/rails db:migrate\r\n    \r\n    You have 1 pending migration:\r\n    \r\n    db/migrate/20240201213806_add_a_to_b.rb\r\n    Run pending migrations? [Yn] Y\r\n    == 20240201213806 AddAToB: migrating =========================================\r\n    == 20240201213806 AddAToB: migrated (0.0000s) ================================\r\n    \r\n    Running 7 tests in a single process (parallelization threshold is 50)\r\n    Run options: --seed 22200\r\n    \r\n    # Running:\r\n    \r\n    .......\r\n    \r\n    Finished in 0.243394s, 28.7600 runs/s, 45.1942 assertions/s.\r\n    7 runs, 11 assertions, 0 failures, 0 errors, 0 skips\r\n    \r\n\r\n### Additional information\r\n\r\nRight now this is only implemented in the Test Runner, but I'd also like to follow up with a similar implementation for `Rails::Command::CorrectableNameError`s.\r\n\r\nAlso we could introduce a new framework default for the configuration if this is the direction in this PR is acceptable.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50941/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50939",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50939/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50939/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50939/events",
        "html_url": "https://github.com/rails/rails/issues/50939",
        "id": 2112729539,
        "node_id": "I_kwDNIULOfe2xww",
        "number": 50939,
        "title": "Should there be a RAILS_MASTER_KEY_DUMMY like SECRET_KEY_BASE_DUMMY?",
        "user": {
            "login": "dorianmariefr",
            "id": 58794487,
            "node_id": "MDQ6VXNlcjU4Nzk0NDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/58794487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dorianmariefr",
            "html_url": "https://github.com/dorianmariefr",
            "followers_url": "https://api.github.com/users/dorianmariefr/followers",
            "following_url": "https://api.github.com/users/dorianmariefr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dorianmariefr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dorianmariefr/subscriptions",
            "organizations_url": "https://api.github.com/users/dorianmariefr/orgs",
            "repos_url": "https://api.github.com/users/dorianmariefr/repos",
            "events_url": "https://api.github.com/users/dorianmariefr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dorianmariefr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T14:57:42Z",
        "updated_at": "2024-02-01T14:57:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nHave a rails app with `config.require_master_key = true`\r\n\r\n```\r\nRAILS_ENV=production SECRET_KEY_BASE_DUMMY=1 bin/rails assets:precompile\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt ignores the master key requirement?\r\n\r\n### Actual behavior\r\n\r\nError:\r\n\r\n```\r\nMissing encryption key to decrypt file with. Ask your team for your master key and write it to /rails/config/master.key or put it in the ENV['RAILS_MASTER_KEY'].\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.1.3\r\n**Ruby version**: ruby 3.2.3 (2024-01-18 revision 52bb2ac0a6) [arm64-darwin23]\r\n\r\n----\r\n\r\nWhat about a RAILS_MASTER_KEY_DUMMY=1?",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50939/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50938",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50938/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50938/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50938/events",
        "html_url": "https://github.com/rails/rails/pull/50938",
        "id": 2112546336,
        "node_id": "PR_kwDNIULOZbPi_A",
        "number": 50938,
        "title": "Refactor QueryCache to be owned by the pool",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T13:40:41Z",
        "updated_at": "2024-02-01T13:40:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50938",
            "html_url": "https://github.com/rails/rails/pull/50938",
            "diff_url": "https://github.com/rails/rails/pull/50938.diff",
            "patch_url": "https://github.com/rails/rails/pull/50938.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50793\r\n\r\nIf we want to stop caching the checked out connections, then we must persist the cache in the pool, and assign it to the connection when it's checked out.\r\n\r\nThe pool become responsible for managing the cache lifecycle.\r\n\r\nThis also open the door to sharing the cache between multiple connections, which is valuable for read replicas, etc.\r\n\r\nThis change only really make sense if we go through with no longer caching checked out connections. Otherwise it's just extra complexity.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50938/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50938/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50935",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50935/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50935/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50935/events",
        "html_url": "https://github.com/rails/rails/issues/50935",
        "id": 2112256299,
        "node_id": "I_kwDNIULOfeZ5Kw",
        "number": 50935,
        "title": "Add ability to see on which shard the migration is being run",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T11:23:15Z",
        "updated_at": "2024-02-01T22:51:30Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, when the app uses sharding and the migration is run, there is not way to tell on which shard it is being run.\r\nThis is a problem, because when the migration adds a unique index and we have some duplicates, the migration blows up (with a `ActiveRecord::RecordNotUnique` error) and there is no way to easily know on which shard exactly. \r\n\r\nThe problem can be solved in at least 2 ways:\r\n1. somehow `puts` shard info when running a migration\r\n2. we have a `connection_pool` object attached to the mentioned `ActiveRecord::RecordNotUnique` error (thanks to https://github.com/rails/rails/pull/48295), but the error message is not include this info (https://github.com/rails/rails/pull/48295#issuecomment-1570702063), so needs to fix that\r\n\r\nI would like to provide a PR, but need a suggestion on which path to choose. \r\n@byroot you helped to implement the linked PR, can you please suggest? ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50935/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50932",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50932/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50932/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50932/events",
        "html_url": "https://github.com/rails/rails/issues/50932",
        "id": 2111605159,
        "node_id": "I_kwDNIULOfdyJpw",
        "number": 50932,
        "title": "Rails 7.1 undefined method purge & same for variant using ruby 3.3.0-dev",
        "user": {
            "login": "kashifcodility",
            "id": 157491032,
            "node_id": "U_kgDOCWMfWA",
            "avatar_url": "https://avatars.githubusercontent.com/u/157491032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kashifcodility",
            "html_url": "https://github.com/kashifcodility",
            "followers_url": "https://api.github.com/users/kashifcodility/followers",
            "following_url": "https://api.github.com/users/kashifcodility/following{/other_user}",
            "gists_url": "https://api.github.com/users/kashifcodility/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kashifcodility/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kashifcodility/subscriptions",
            "organizations_url": "https://api.github.com/users/kashifcodility/orgs",
            "repos_url": "https://api.github.com/users/kashifcodility/repos",
            "events_url": "https://api.github.com/users/kashifcodility/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kashifcodility/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            },
            {
                "id": 1071962662,
                "node_id": "MDU6TGFiZWwxMDcxOTYyNjYy",
                "url": "https://api.github.com/repos/rails/rails/labels/more-information-needed",
                "name": "more-information-needed",
                "color": "bfdadc",
                "default": false,
                "description": "When reporter needs to provide more information"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-01T05:45:14Z",
        "updated_at": "2024-02-01T10:02:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "irb(main):047> image\r\n=> \r\n#<ActiveStorage::Attachment:0x00007ff81133c0a0\r\n id: 4,\r\n name: \"images\",\r\n record_type: \"News\",\r\n record_id: 2,\r\n blob_id: 4,\r\n created_at: Wed, 31 Jan 2024 12:00:01.463996000 UTC +00:00>\r\nirb(main):048> \r\nirb(main):049> \r\nirb(main):050> image.class\r\n=> ActiveStorage::Attachment(id: integer, name: string, record_type: string, record_id: integer, blob_id: integer, created_at: datetime)\r\nirb(main):051> \r\nirb(main):052> \r\nirb(main):053> \r\nirb(main):054> image.purge\r\n/home/lap-053/.rbenv/versions/3.3.0-dev/lib/ruby/gems/3.4.0+0/gems/activemodel-7.1.3/lib/active_model/attribute_methods.rb:489:in `method_missing': undefined method `purge' for an instance of ActiveStorage::Attachment (NoMethodError)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50932/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50930",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50930/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50930/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50930/events",
        "html_url": "https://github.com/rails/rails/issues/50930",
        "id": 2111351021,
        "node_id": "I_kwDNIULOfdio7Q",
        "number": 50930,
        "title": "Rails 7.1 doesn't render Enumerator in view correctly",
        "user": {
            "login": "kuwabarahiroshi",
            "id": 816749,
            "node_id": "MDQ6VXNlcjgxNjc0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/816749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kuwabarahiroshi",
            "html_url": "https://github.com/kuwabarahiroshi",
            "followers_url": "https://api.github.com/users/kuwabarahiroshi/followers",
            "following_url": "https://api.github.com/users/kuwabarahiroshi/following{/other_user}",
            "gists_url": "https://api.github.com/users/kuwabarahiroshi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kuwabarahiroshi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kuwabarahiroshi/subscriptions",
            "organizations_url": "https://api.github.com/users/kuwabarahiroshi/orgs",
            "repos_url": "https://api.github.com/users/kuwabarahiroshi/repos",
            "events_url": "https://api.github.com/users/kuwabarahiroshi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kuwabarahiroshi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T02:21:08Z",
        "updated_at": "2024-02-01T02:22:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Prior to Rails 7.1, returning an Enumerator in a view rendered the content correctly. However, starting from Rails 7.1, it appears to render only the Enumerator's string representation (Enumerator#to_s), resulting in a response like `\"#<Enumerator:0xXXXXXX>\"`.\r\n\r\nSetting `self.response_body = Enumerator.new` in an action works for both 7.0 and 7.1 (fixed in https://github.com/rails/rails/issues/49588).\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # gem \"rails\", \"~> 7.0.0\" # => works\r\n  gem \"rails\", \"~> 7.1.0\" # => fails\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"enumerator_in_action\", controller: :test\r\n    get \"enumerator_in_view\", controller: :test\r\n  end\r\nend\r\n\r\nclass TestController < ActionController::Base\r\n  def enumerator_in_action\r\n    self.response_body = Enumerator.new do |buff|\r\n      10.times { buff << _1.to_s }\r\n    end\r\n  end\r\n\r\n  def enumerator_in_view\r\n    render inline: <<~EOS, layout: false, type: :ruby\r\n      Enumerator.new do |buff|\r\n        10.times { buff << _1.to_s }\r\n      end\r\n    EOS\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def test_enumerator_in_action\r\n    get \"/enumerator_in_action\"\r\n    assert_equal \"0123456789\", last_response.body\r\n  end\r\n\r\n  def test_enumerator_in_view\r\n    get \"/enumerator_in_view\"\r\n    assert_equal \"0123456789\", last_response.body\r\n  end\r\n\r\n  private\r\n\r\n    def app\r\n      Rails.application\r\n    end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe content should be rendered by evaluating the Enumerator.\r\n\r\nI'm not sure whether it is guaranteed behavior in specification when it's returned from view, but I expect it works as was the case until Rails 7.0.\r\n\r\n### Actual behavior\r\n\r\nIt currently renders the Enumerator's string representation, such as \"#<Enumerator:0xXXXXXX>\".\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50930/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50928",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50928/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50928/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50928/events",
        "html_url": "https://github.com/rails/rails/pull/50928",
        "id": 2110751556,
        "node_id": "PR_kwDNIULOZZsk5w",
        "number": 50928,
        "title": "Fixes race condition for multiple preprocessed video variants",
        "user": {
            "login": "searls",
            "id": 79303,
            "node_id": "MDQ6VXNlcjc5MzAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/79303?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/searls",
            "html_url": "https://github.com/searls",
            "followers_url": "https://api.github.com/users/searls/followers",
            "following_url": "https://api.github.com/users/searls/following{/other_user}",
            "gists_url": "https://api.github.com/users/searls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/searls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/searls/subscriptions",
            "organizations_url": "https://api.github.com/users/searls/orgs",
            "repos_url": "https://api.github.com/users/searls/repos",
            "events_url": "https://api.github.com/users/searls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/searls/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-31T18:49:44Z",
        "updated_at": "2024-02-01T02:00:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50928",
            "html_url": "https://github.com/rails/rails/pull/50928",
            "diff_url": "https://github.com/rails/rails/pull/50928.diff",
            "patch_url": "https://github.com/rails/rails/pull/50928.patch",
            "merged_at": null
        },
        "body": "This fixes race condition in Active Storage when multiple preprocessed variants are defined for a `Previewable` file is attached.\r\n\r\n## Background\r\n\r\nWhen a variant is specified for a \"previewable\" file type (e.g. video  or PDF) attachment, a `preview_image` attachment is first created and attached on the original blob and then any user-specified variants are derived from _that_ preview image. When those variants are named and have `preprocessed: true`, the jobs to create those variants are queued simultaneously.\r\n\r\nExample from my case:\r\n\r\n```ruby\r\n  has_one_attached :file, dependent: :purge_later do |attachable|\r\n    attachable.variant :preview, resize_to_fill: [400, 400], preprocessed: true\r\n    attachable.variant :still, format: \"jpg\", saver: {quality: 85}, preprocessed: true\r\n  end\r\n```\r\n\r\n## The issue\r\n\r\nWhen a `Previewable` attachment is created (a video, in my case), `TransformJob.perform_later` is called for each named variant with `preprocessed: true`. Unless your queue adapter is synchronous (e.g. :inline or :test), this results in a race condition in which every such variant's worker will check `processed?`, see that no `preview_image` attachment exists yet on the `ActiveStorage::Blob`, and:\r\n\r\n1. Redundantly download the file from storage\r\n2. Create duplicative ActiveStorage::Attachment and `ActiveStorage::Blob` records for the `preview_image` attachment (all but one of which will be orphaned from the original blob's `has_one_attached :preview_image`)\r\n3. Create variant blobs (and associated `ActiveStorage::VariantRecord`) that are similarly orphaned (by virtue of being a variant of an orphaned `preview_image` blob)\r\n\r\nAs a result, if the video is ever purged, `PurgeJob` will only find the current `has_one_attached :preview_image` and whatever variant demanded it into existence, then leave the rest as orphaned records in the database and in storage.\r\n\r\n## The fix\r\n\r\nPretty simple: wrap the first step of the job in `blob.with_lock {}`. By pessimistically locking on the blob, we can prevent processing the preview image multiple times by multiple `TransformJob` jobs running concurrently.\r\n\r\nAlternate approaches would all be more work:\r\n\r\n* Queuing a `PreviewImage` job instead of N `TransformJob` and have it, only after `preview_image` is attached, enqueue those `TransformJob` jobs\r\n* Batching up all the named variant transformations into a single meta-job\r\n\r\n## Testing caveat \r\n\r\nWriting a test for this inside Rails would be difficult because it would require running the resulting TransformJob jobs concurrently. I [started a test](https://github.com/searls/rails/blob/fix-video-duplicate-preview-variants/activestorage/test/models/variant_with_record_test.rb#L348-L367) but failed to reproduce, in part because the test queue adapter will perform enqueued jobs inline instead of concurrently. In order to write a test that replicated the issue appropriately, we might first need a new option for `perform_enqueued_jobs(async: true) {\u00a0\u2026 }`\r\n\r\nIf you're interested, [this gist](https://gist.github.com/searls/5b8298abe88b3206f670ea3c6d574aab) includes a driver script and output before and after the patch showing it working.\r\n\r\n## Evaluating impact on existing Active Storage users\r\n\r\nI only found this because I'm a total cheapskate and was literally counting records in my S3 bucket to ensure `PurgeJob` worked. Then I wasted the next two days trying to figure out why before landing on this. I strongly suspect that ActiveStorage users who host video and take advantage of `preprocessed: true` named variants will have a lot of orphaned stuff floating around their buckets.\r\n\r\nTo see if you have any such \"zombie\" preview_images (and presumably, associated variants) floating around your application that would survive calls to `purge` on the owning attachment, you could write a query like this:\r\n\r\n```\r\nActiveStorage::Attachment\r\n  .joins(\"INNER JOIN active_storage_attachments as other_attachments ON\r\n          active_storage_attachments.record_id = other_attachments.record_id AND\r\n          active_storage_attachments.id != other_attachments.id\")\r\n  .where(\r\n    :name => \"preview_image\",\r\n    :record_type => \"ActiveStorage::Blob\",\r\n    \"other_attachments.name\" => \"preview_image\",\r\n    \"other_attachments.record_type\" => \"ActiveStorage::Blob\"\r\n  )\r\n  .distinct\r\n```\r\n\r\nClearing out one's production database and backend storage to get this all right-sized should be a fun exercise for the reader.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50928/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50920",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50920/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50920/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50920/events",
        "html_url": "https://github.com/rails/rails/pull/50920",
        "id": 2107533190,
        "node_id": "PR_kwDNIULOZW8w1g",
        "number": 50920,
        "title": "Support encrypting binary columns",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-30T10:53:34Z",
        "updated_at": "2024-02-02T14:07:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50920",
            "html_url": "https://github.com/rails/rails/pull/50920",
            "diff_url": "https://github.com/rails/rails/pull/50920.diff",
            "patch_url": "https://github.com/rails/rails/pull/50920.patch",
            "merged_at": null
        },
        "body": "\r\n### Motivation / Background\r\n\r\nActiveRecord Encryption doesn't prevent you from encrypting binary columns but it doesn't have proper support for it either.\r\n\r\nWhen the data is fed through encrypt/decrypt it is converted to a String. This means that the the encryption layer is not transparent to binary data - which should be passed as Type::Binary::Data.\r\n\r\nAs a result the data is not properly escaped in the SQL queries or deserialized correctly after decryption.\r\n\r\nHowever it just happens to work fine for MySQL and SQLite because the MessageSerializer doesn't use any characters that need to be encoded. However if you try to use a custom serializer that does then it breaks.\r\n\r\nPostgreSQL on the other hand does not work - because the Bytea type is passed a String rather than a Type::Binary::Data to deserialize, it attempts to unescape the data and either mangles it or raises an error if it contains null bytes.\r\n\r\n### Detail\r\n\r\nThe commit fixes the issue, by reserializing the data after encryption and decryption. For text data that's a no-op, but for binary data we'll convert it back to a Type::Binary::Data.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50920/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50919",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50919/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50919/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50919/events",
        "html_url": "https://github.com/rails/rails/pull/50919",
        "id": 2107305664,
        "node_id": "PR_kwDNIULOZWwUOw",
        "number": 50919,
        "title": "Add negative_scopes option to ActiveRecord's enum method",
        "user": {
            "login": "Jay0921",
            "id": 12777550,
            "node_id": "MDQ6VXNlcjEyNzc3NTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/12777550?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jay0921",
            "html_url": "https://github.com/Jay0921",
            "followers_url": "https://api.github.com/users/Jay0921/followers",
            "following_url": "https://api.github.com/users/Jay0921/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jay0921/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jay0921/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jay0921/subscriptions",
            "organizations_url": "https://api.github.com/users/Jay0921/orgs",
            "repos_url": "https://api.github.com/users/Jay0921/repos",
            "events_url": "https://api.github.com/users/Jay0921/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jay0921/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-30T09:11:41Z",
        "updated_at": "2024-01-30T09:40:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50919",
            "html_url": "https://github.com/rails/rails/pull/50919",
            "diff_url": "https://github.com/rails/rails/pull/50919.diff",
            "patch_url": "https://github.com/rails/rails/pull/50919.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nIn certain situation, we might need to store and query `negative` values. Having the option to bypass the auto-generated negative scopes can avoid the conflicts.\r\n\r\n### Detail\r\n\r\nAdd `negative_scopes` option to `ActiveRecord::Enum#enum`, this offers the flexibility to optionally skip the creation of negative scopes.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50919/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50916",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50916/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50916/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50916/events",
        "html_url": "https://github.com/rails/rails/issues/50916",
        "id": 2106914874,
        "node_id": "I_kwDNIULOfZT4Og",
        "number": 50916,
        "title": "Unexpected controller prefix path de-duplication in view partial lookup paths",
        "user": {
            "login": "sfnelson",
            "id": 325974,
            "node_id": "MDQ6VXNlcjMyNTk3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/325974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sfnelson",
            "html_url": "https://github.com/sfnelson",
            "followers_url": "https://api.github.com/users/sfnelson/followers",
            "following_url": "https://api.github.com/users/sfnelson/following{/other_user}",
            "gists_url": "https://api.github.com/users/sfnelson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sfnelson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sfnelson/subscriptions",
            "organizations_url": "https://api.github.com/users/sfnelson/orgs",
            "repos_url": "https://api.github.com/users/sfnelson/repos",
            "events_url": "https://api.github.com/users/sfnelson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sfnelson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-30T04:10:56Z",
        "updated_at": "2024-01-30T04:22:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nCreate nested controller and nested object views where there is overlap between the controller and object namespaces. For example:\r\n\r\n- `Courses::Quiz::Question` and `Courses::Quiz::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Quiz::Extra::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Courses::Quiz::QuestionsController`\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\nrequire \"active_model/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/unrelated\" => \"learning/questions#new\"\r\n    get \"/duplication\" => \"courses/quiz/questions#new\"\r\n    get \"/collision\" => \"learning/quiz/extra/questions#new\"\r\n    get \"/repetition\" => \"learning/courses/quiz/questions#new\"\r\n  end\r\nend\r\n\r\nmodule Courses\r\n  module Quiz\r\n    class Question\r\n      include ActiveModel::Model\r\n\r\n      attr_accessor :name\r\n    end\r\n\r\n    class QuestionsController < ActionController::Base\r\n      def new\r\n        render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nmodule Learning\r\n  class QuestionsController < ActionController::Base\r\n    def new\r\n      render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n    end\r\n  end\r\n\r\n  module Quiz\r\n    module Extra\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\n\r\n  module Courses\r\n    module Quiz\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def setup\r\n    super\r\n    @views = Dir.mktmpdir\r\n    ActionController::Base.prepend_view_path @views\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_unrelated_partial\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/unrelated\"\r\n    assert_equal \"Nested partial\", last_response.body\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_duplication\r\n    view_file \"courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n\r\n    get \"/duplication\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  # \u274c FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path breaks after the first match, skips 'extra'\r\n  def test_collision\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Harmful de-duplication <%= question.name %>\"\r\n    view_file \"learning/courses/extra/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/collision\"\r\n    assert_equal \"Collision partial\", last_response.body\r\n  end\r\n\r\n  # \u274c FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path fails to find overlap because offsets do not align\r\n  def test_repetition\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n    view_file \"learning/courses/quiz/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/repetition\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  private\r\n\r\n  def app\r\n    Rails.application\r\n  end\r\n\r\n  def view_file(name, content)\r\n    path = Pathname.new(@views).join(name)\r\n    path.dirname.tap(&:mkpath)\r\n    path.write(content)\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\n- Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `quiz/extra` suffix on the controller does not match the `quiz` prefix on the model so no de-duplication is performed. Partial should be `learning/courses/extra/courses/quiz/questions/_question.html.erb`\r\n- Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   `courses/quiz` suffix on controller matches `courses/quiz` prefix on model so repetition is removed. Partial should be `learning/courses/quiz/questions/_question.html.erb`\r\n\r\n### Actual behavior\r\n\r\n- \u2705 Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- \u274c Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `Quiz` is detected as overlap and `Extra` is dropped from the partial path, this is confusing and inconsistent\r\n- \u274c Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   no module duplication is detected, so full module path to controller is prefixed on the object path \u2013 deep repetition\r\n\r\n### System configuration\r\n**Rails version**: 7.1.0\r\n\r\n**Ruby version**: 3.2.3\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50916/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50916/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50914",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50914/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50914/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50914/events",
        "html_url": "https://github.com/rails/rails/pull/50914",
        "id": 2106594568,
        "node_id": "PR_kwDNIULOZWKOxQ",
        "number": 50914,
        "title": "Generate devcontainer files by default",
        "user": {
            "login": "andrewn617",
            "id": 39735028,
            "node_id": "MDQ6VXNlcjM5NzM1MDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/39735028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewn617",
            "html_url": "https://github.com/andrewn617",
            "followers_url": "https://api.github.com/users/andrewn617/followers",
            "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewn617/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewn617/orgs",
            "repos_url": "https://api.github.com/users/andrewn617/repos",
            "events_url": "https://api.github.com/users/andrewn617/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewn617/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            },
            {
                "id": 1174770998,
                "node_id": "MDU6TGFiZWwxMTc0NzcwOTk4",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailbox",
                "name": "actionmailbox",
                "color": "f4a6cb",
                "default": false,
                "description": ""
            },
            {
                "id": 1180817762,
                "node_id": "MDU6TGFiZWwxMTgwODE3NzYy",
                "url": "https://api.github.com/repos/rails/rails/labels/actiontext",
                "name": "actiontext",
                "color": "3bc667",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-29T23:03:25Z",
        "updated_at": "2024-02-01T23:57:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50914",
            "html_url": "https://github.com/rails/rails/pull/50914",
            "diff_url": "https://github.com/rails/rails/pull/50914.diff",
            "patch_url": "https://github.com/rails/rails/pull/50914.patch",
            "merged_at": null
        },
        "body": "https://github.com/rails/rails/issues/50566\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created to generate `devcontainer` files for new Rails apps.\r\n\r\n### Detail\r\n\r\nThis Pull Request adds templates for devcontainer files (`devcontainer.json`, `Dockerfile` and `docker-compose.yml`) to be generated on `rails new`.\r\n\r\nBy default the devcontainer contains the following:\r\n- A redis container for Sidekiq and Action Cable\r\n- A database (SQLite, Postgres, MySQL or MariaDB)\r\n- A Headless chrome container for system tests\r\n- Active Storage configured to use the local disk and with preview features working\r\n\r\nIf `rails new` is called with options to skip any of the above they will be removed from the dev container config.\r\n\r\nThe dev container can be skipped entirely with the `--skip_devcontainer` option.\r\n\r\n### Additional information\r\n\r\nA few changes are needed to other files generated by rails new to make sure new Rails apps can be developed both in a container and locally.\r\n\r\n- Differentiate `CABLE_REDIS_URL` and `JOBS_REDIS_URL` instead of just using `REDIS_URL` for both (A PR will need to be opened to turbo-rails to make this change as well)\r\n- For MariaDB and MySQL use the `RAILS_DATABASE_HOST` if it's set (which it will be in a container) and fallback to `localhost`\r\n- For Postgres set the host (`RAILS_DATABASE_HOST`), username and password when in a container\r\n\r\nFor system tests, we need to configure the `Capybara` host and port to the selenium container. Rather than expose the implementation details of `Capybara` to the developer, we created a new `served_by` method on `SystemTestCase` to configure these.\r\n\r\n`db:system:change` re-generates `database.yml`. I added a `skip-devcontainer` option to this generator with a default of `true`. So, any existing apps that use this command will not get devcontainer config in their db yaml. Users can opt in to have devcontainer config added to the new db yml by adding `--skip-devcontainer=false`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50909",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50909/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50909/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50909/events",
        "html_url": "https://github.com/rails/rails/pull/50909",
        "id": 2104413485,
        "node_id": "PR_kwDNIULOZUSoNQ",
        "number": 50909,
        "title": "[ci skip] [docs] make increment requirement explicit",
        "user": {
            "login": "jamiemccarthy",
            "id": 40373,
            "node_id": "MDQ6VXNlcjQwMzcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40373?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamiemccarthy",
            "html_url": "https://github.com/jamiemccarthy",
            "followers_url": "https://api.github.com/users/jamiemccarthy/followers",
            "following_url": "https://api.github.com/users/jamiemccarthy/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamiemccarthy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamiemccarthy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamiemccarthy/subscriptions",
            "organizations_url": "https://api.github.com/users/jamiemccarthy/orgs",
            "repos_url": "https://api.github.com/users/jamiemccarthy/repos",
            "events_url": "https://api.github.com/users/jamiemccarthy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamiemccarthy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-29T00:07:29Z",
        "updated_at": "2024-01-29T00:20:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50909",
            "html_url": "https://github.com/rails/rails/pull/50909",
            "diff_url": "https://github.com/rails/rails/pull/50909.diff",
            "patch_url": "https://github.com/rails/rails/pull/50909.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAs of December, [ActionController::Metal::RateLimiting](https://github.com/rails/rails/blob/main/actionpack/lib/action_controller/metal/rate_limiting.rb) provides rate limiting through the `increment` method of any cache store. RateLimiting relies on a feature of the underlying store. This feature needs to be documented, so that it remains supported, and so alternative stores know to support it.\r\n\r\nThis PR has been created to document this behavior.\r\n\r\n### Detail\r\n\r\nThe feature is that `increment`, when passed `expires_in`, will set expiration time when the key is first created, and ignore that option if the key already exists.\r\n\r\nThat functionality is already tested [here](https://github.com/rails/rails/blob/cf26c5482924babca573e6c01594d77e3321ae58/activesupport/test/cache/behaviors/cache_increment_decrement_behavior.rb#L34), in the `CacheIncrementDecrementBehavior` test module.\r\n\r\nThis Pull Request changes the documentation of `ActiveSupport::Cache::Store.increment` to reflect a now-required feature of existing stores.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50909/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50909/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50901",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50901/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50901/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50901/events",
        "html_url": "https://github.com/rails/rails/pull/50901",
        "id": 2104069423,
        "node_id": "PR_kwDNIULOZUBH_g",
        "number": 50901,
        "title": "[Fix #50897] Autosaving `has_one` sets foreign key attribute when unchanged",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-28T09:30:20Z",
        "updated_at": "2024-01-30T10:42:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50901",
            "html_url": "https://github.com/rails/rails/pull/50901",
            "diff_url": "https://github.com/rails/rails/pull/50901.diff",
            "patch_url": "https://github.com/rails/rails/pull/50901.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes https://github.com/rails/rails/issues/50897\r\nSimilar to https://github.com/rails/rails/pull/46759\r\n\r\n### Detail\r\n\r\nUpdates `ActiveRecord::AutosaveAssociation#save_has_one_association` to only update the foreign key attribute on the child record if it has changed. This makes its behaviour consistent with `belongs_to` associations and ensures that `ActiveRecord::ReadOnlyAttributeError` isn't raised when no changes have been made to the attribute.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nNone.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50901/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50897",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50897/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50897/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50897/events",
        "html_url": "https://github.com/rails/rails/issues/50897",
        "id": 2103568249,
        "node_id": "I_kwDNIULOfWHneQ",
        "number": 50897,
        "title": "Incorrectly raising `ReadonlyAttributeError` when autosaving `has_one` association with readonly foreign key",
        "user": {
            "login": "Earlopain",
            "id": 14981592,
            "node_id": "MDQ6VXNlcjE0OTgxNTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/14981592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Earlopain",
            "html_url": "https://github.com/Earlopain",
            "followers_url": "https://api.github.com/users/Earlopain/followers",
            "following_url": "https://api.github.com/users/Earlopain/following{/other_user}",
            "gists_url": "https://api.github.com/users/Earlopain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Earlopain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Earlopain/subscriptions",
            "organizations_url": "https://api.github.com/users/Earlopain/orgs",
            "repos_url": "https://api.github.com/users/Earlopain/repos",
            "events_url": "https://api.github.com/users/Earlopain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Earlopain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 4,
        "created_at": "2024-01-27T12:29:15Z",
        "updated_at": "2024-01-28T20:15:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Rails 7.1 sets `raise_on_assign_to_attr_readonly` to true. In the following repro I set a column unrelated to `attr_readonly` yet the error is still being set. If I stop setting this column the error goes away.\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord.raise_on_assign_to_attr_readonly = true\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :forum_topics, force: true do |t|\r\n    t.integer :updater_id\r\n    t.text :title\r\n  end\r\n\r\n  create_table :forum_posts, force: true do |t|\r\n    t.integer :updater_id\r\n    t.integer :forum_topic_id\r\n    t.text :body\r\n  end\r\nend\r\n\r\nclass ForumTopic < ActiveRecord::Base\r\n  has_one :original_forum_post, -> { order(\"forum_posts.id asc\") }, class_name: \"ForumPost\", inverse_of: :forum_topic\r\n  validates_associated :original_forum_post\r\n  accepts_nested_attributes_for :original_forum_post\r\nend\r\n\r\nclass ForumPost < ActiveRecord::Base\r\n  attr_readonly :forum_topic_id\r\n  belongs_to :forum_topic\r\n\r\n  before_validation do |rec|\r\n    # next # Skipping setting this column makes the error go away\r\n    if persisted?\r\n      rec.updater_id = 456\r\n    else\r\n      rec.updater_id = 123\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_readonly_attr_exception\r\n    topic = ForumTopic.create!(title: \"Hi!\", original_forum_post_attributes: { body: \"What's up?\" })\r\n    topic.update(title: \"nevermind\") # => ActiveRecord::ReadonlyAttributeError: forum_topic_id\r\n    assert_equal(456, topic.original_forum_post.updater_id)\r\n  end\r\nend\r\n```\r\n\r\n### System configuration\r\n**Rails version**: master\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50895",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50895/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50895/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50895/events",
        "html_url": "https://github.com/rails/rails/pull/50895",
        "id": 2103219381,
        "node_id": "PR_kwDNIULOZTZN2g",
        "number": 50895,
        "title": "Enhanced ActiveStorage variant tracking control",
        "user": {
            "login": "JaceBayless",
            "id": 25781337,
            "node_id": "MDQ6VXNlcjI1NzgxMzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25781337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JaceBayless",
            "html_url": "https://github.com/JaceBayless",
            "followers_url": "https://api.github.com/users/JaceBayless/followers",
            "following_url": "https://api.github.com/users/JaceBayless/following{/other_user}",
            "gists_url": "https://api.github.com/users/JaceBayless/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JaceBayless/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JaceBayless/subscriptions",
            "organizations_url": "https://api.github.com/users/JaceBayless/orgs",
            "repos_url": "https://api.github.com/users/JaceBayless/repos",
            "events_url": "https://api.github.com/users/JaceBayless/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JaceBayless/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-27T04:41:38Z",
        "updated_at": "2024-01-27T04:42:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50895",
            "html_url": "https://github.com/rails/rails/pull/50895",
            "diff_url": "https://github.com/rails/rails/pull/50895.diff",
            "patch_url": "https://github.com/rails/rails/pull/50895.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n#### My Specific Use Case\r\n\r\nIn my project, where `ActiveStorage.track_variants = true`, I needed to generate a variant of an image (a thumbnail for a room on a floorplan) but did not want to create a variant record of the original image record. This is because I intended to save the variant on a child relation, separate from the original image record.\r\n\r\n#### The Challenge\r\nWith `ActiveStorage.track_variants = true` every variant generated through `ActiveStorage` is automatically tracked in the database to the original record. There are cases in this application where we **do** want to track these variant records so I was unable to change the default configuration. This meant to properly generate my variant I had to use `ImageProcessing::Vips` directly to not generate the variant record. This worked but generated two concerns for me:\r\n\r\n1. This specific code is dependent on `ImageProcessing::Vips` and if we were to ever migrate to another image processor we would have to remember to update this code as well instead of just relying on the `ActiveStorage` default processor.\r\n2. It strays enough from the standard pattern when generating `ActiveStorage` variants that without good documentation it can become confusing to maintain.\r\n\r\n### Detail\r\n\r\nThis pull request adds the `track` option to the `variant` method which allows for overriding of the `ActiveStorage.track_variants`. This is useful when in cases where you want to stray from the application's standard configuration.\r\n\r\n```ruby\r\nActiveSupport.track_variants\r\n# => true\r\nuser.avatar.variant(track: false, resize_to_limit: [100, 100])\r\n# => #<ActiveStorage::Variant:0x00007f4e0004ffb0> \r\n```\r\nand\r\n```ruby\r\nActiveSupport.track_variants\r\n# => false\r\nuser.avatar.variant(track: true, resize_to_limit: [100, 100])\r\n# => #<ActiveStorage::VariantWithRecord:0x00007f4e0004ffb0> \r\n```\r\n\r\n### Additional information\r\n\r\nThis is my first time contributing to Rails and I appreciate anyone who takes the time to read all this. I tried my best to follow all conventions and to keep all current functionality, but in the case that I missed something I'd be happy to discuss and fix whatever is needed.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50895/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50895/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50894",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50894/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50894/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50894/events",
        "html_url": "https://github.com/rails/rails/pull/50894",
        "id": 2103022783,
        "node_id": "PR_kwDNIULOZTPMhg",
        "number": 50894,
        "title": "Add cost argument to has_secure_password",
        "user": {
            "login": "t27duck",
            "id": 545604,
            "node_id": "MDQ6VXNlcjU0NTYwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/545604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t27duck",
            "html_url": "https://github.com/t27duck",
            "followers_url": "https://api.github.com/users/t27duck/followers",
            "following_url": "https://api.github.com/users/t27duck/following{/other_user}",
            "gists_url": "https://api.github.com/users/t27duck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t27duck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t27duck/subscriptions",
            "organizations_url": "https://api.github.com/users/t27duck/orgs",
            "repos_url": "https://api.github.com/users/t27duck/repos",
            "events_url": "https://api.github.com/users/t27duck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t27duck/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-26T22:52:13Z",
        "updated_at": "2024-01-27T05:30:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50894",
            "html_url": "https://github.com/rails/rails/pull/50894",
            "diff_url": "https://github.com/rails/rails/pull/50894.diff",
            "patch_url": "https://github.com/rails/rails/pull/50894.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThere may be instances where a developer is working in an environment where a higher cost than the default (12) for BCrypt is required either due to arbitrary security requirements or the recommended minimum changes and the version of bcrypt used isn't updated.\r\n\r\n### Detail\r\n\r\nThis change adds a `cost:` argument to `has_secure_password`. If provided, it will use that value for the password cost. Its value is validated to make sure it's between `BCrypt::Engine::MIN_COST` and `BCrypt::Engine::MAX_COST`.\r\n\r\nAdditionally `[password attribute]_cost` is exposed as a convenience method to determine the cost used for the set password hash. This can be used to review the current costs from a user record and either transparently upgrade the user's password or force a password reset.\r\n\r\n### Additional information\r\n\r\nI'm not 100% married to using `cost` as the argument name as it affects only new passwords created for the record going forward.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50892",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50892/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50892/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50892/events",
        "html_url": "https://github.com/rails/rails/pull/50892",
        "id": 2102819884,
        "node_id": "PR_kwDNIULOZTEC2A",
        "number": 50892,
        "title": "Documentation: Expand documentation on has_one_attached method [ci-skip].",
        "user": {
            "login": "Takahashi-Seiji",
            "id": 140453075,
            "node_id": "U_kgDOCF8k0w",
            "avatar_url": "https://avatars.githubusercontent.com/u/140453075?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Takahashi-Seiji",
            "html_url": "https://github.com/Takahashi-Seiji",
            "followers_url": "https://api.github.com/users/Takahashi-Seiji/followers",
            "following_url": "https://api.github.com/users/Takahashi-Seiji/following{/other_user}",
            "gists_url": "https://api.github.com/users/Takahashi-Seiji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Takahashi-Seiji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Takahashi-Seiji/subscriptions",
            "organizations_url": "https://api.github.com/users/Takahashi-Seiji/orgs",
            "repos_url": "https://api.github.com/users/Takahashi-Seiji/repos",
            "events_url": "https://api.github.com/users/Takahashi-Seiji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Takahashi-Seiji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-26T20:02:30Z",
        "updated_at": "2024-01-30T18:45:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50892",
            "html_url": "https://github.com/rails/rails/pull/50892",
            "diff_url": "https://github.com/rails/rails/pull/50892.diff",
            "patch_url": "https://github.com/rails/rails/pull/50892.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nGive further context about the requirements for using the has_one_attached method. \r\n\r\nI have an application that does not have an ActiveJob::Backend queue adapter. When I tried to destroy a record, it raised an error that I needed a queue adapter. There is a dependency between the has_one_attached method and a queue adapter. \r\n\r\nThat is why adding more context about the functionality and requirements about using the has_one_attached method is important. \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50889",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50889/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50889/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50889/events",
        "html_url": "https://github.com/rails/rails/pull/50889",
        "id": 2102411019,
        "node_id": "PR_kwDNIULOZStxpQ",
        "number": 50889,
        "title": "Introduce `ActiveSupport::TestCase.around`",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2024-01-26T15:29:23Z",
        "updated_at": "2024-01-29T19:58:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50889",
            "html_url": "https://github.com/rails/rails/pull/50889",
            "diff_url": "https://github.com/rails/rails/pull/50889.diff",
            "patch_url": "https://github.com/rails/rails/pull/50889.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nWhen discussing testing frameworks for new projects, the absence of `around` hooks is usually a focal point of the conversation that pushes consensus toward alternative test harnesses.\r\n\r\nMinitest itself [will not support built-in `around` hooks](https://github.com/minitest/minitest/issues/892). While the [minitest-hooks](https://github.com/jeremyevans/minitest-hooks) gem provides support for `around`, Active Support's callback system makes adding `around` hooks fairly trivial, and is guaranteed to be implemented in the same way as all other callbacks (Controller, Jobs, Mailers, etc.).\r\n\r\n\r\n### Detail\r\n\r\nAdd a callback, which runs around `TestCase#setup`, the `test` block, and `TestCase#teardown`. Yields the test class instance and the test case to the block:\r\n\r\n```ruby\r\nclass Test < ActiveSupport::TestCase\r\n  around do |test_case, &block|\r\n    Client.with(stubbed: true, &block)\r\n  end\r\nend\r\n```\r\n\r\n### Additional Information\r\n\r\nTo support this change, rename the `activesupport/test/testing/after_teardown_test.rb` file to `activesupport/test/testing/callbacks_test.rb`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50889/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50889/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50886",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50886/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50886/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50886/events",
        "html_url": "https://github.com/rails/rails/pull/50886",
        "id": 2102255707,
        "node_id": "PR_kwDNIULOZSlTeQ",
        "number": 50886,
        "title": "[Fix #50812] Don't duplicate selects, inner and outer joins when merging with STI",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-26T13:54:50Z",
        "updated_at": "2024-01-30T10:41:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50886",
            "html_url": "https://github.com/rails/rails/pull/50886",
            "diff_url": "https://github.com/rails/rails/pull/50886.diff",
            "patch_url": "https://github.com/rails/rails/pull/50886.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes https://github.com/rails/rails/issues/50812\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `#merge_select_values`, `#merge_joins` and `#merge_outer_joins` in `ActiveRecord::Relation::Merger` to unionise selects, inner and outer joins when the two sources of a `merge` are related via STI.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nThe only similar case left in `ActiveRecord::Relation::Merger` is when [merging preloads](https://github.com/rails/rails/blob/68eade83c87ae309191add6dfa4959d7d7e07464/activerecord/lib/active_record/relation/merger.rb#L101).\r\n\r\nI don't think that is similar to these cases since the preload values are simply used to preload associations. I thought I would just mention it anyway.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50886/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50886/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50885",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50885/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50885/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50885/events",
        "html_url": "https://github.com/rails/rails/pull/50885",
        "id": 2102202900,
        "node_id": "PR_kwDNIULOZSiasw",
        "number": 50885,
        "title": "Document Attached::Model#attachment_changes [ci skip]",
        "user": {
            "login": "tsvallender",
            "id": 122306143,
            "node_id": "U_kgDOB0o-Xw",
            "avatar_url": "https://avatars.githubusercontent.com/u/122306143?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tsvallender",
            "html_url": "https://github.com/tsvallender",
            "followers_url": "https://api.github.com/users/tsvallender/followers",
            "following_url": "https://api.github.com/users/tsvallender/following{/other_user}",
            "gists_url": "https://api.github.com/users/tsvallender/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tsvallender/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tsvallender/subscriptions",
            "organizations_url": "https://api.github.com/users/tsvallender/orgs",
            "repos_url": "https://api.github.com/users/tsvallender/repos",
            "events_url": "https://api.github.com/users/tsvallender/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tsvallender/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-26T13:18:39Z",
        "updated_at": "2024-01-26T14:14:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50885",
            "html_url": "https://github.com/rails/rails/pull/50885",
            "diff_url": "https://github.com/rails/rails/pull/50885.diff",
            "patch_url": "https://github.com/rails/rails/pull/50885.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAdds documentation for the `attachment_changes` method of Active Storage.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50885/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50883",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50883/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50883/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50883/events",
        "html_url": "https://github.com/rails/rails/pull/50883",
        "id": 2101864232,
        "node_id": "PR_kwDNIULOZSQNiA",
        "number": 50883,
        "title": "Put plural inverse association inference behind a configuration flag",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/83",
            "html_url": "https://github.com/rails/rails/milestone/83",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/83/labels",
            "id": 9964242,
            "node_id": "MI_kwDNIULOAJgK0g",
            "number": 83,
            "title": "7.2.0",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 9,
            "closed_issues": 7,
            "state": "open",
            "created_at": "2023-09-25T20:29:14Z",
            "updated_at": "2024-01-26T09:49:33Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 1,
        "created_at": "2024-01-26T09:19:56Z",
        "updated_at": "2024-01-26T17:23:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50883",
            "html_url": "https://github.com/rails/rails/pull/50883",
            "diff_url": "https://github.com/rails/rails/pull/50883.diff",
            "patch_url": "https://github.com/rails/rails/pull/50883.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50284\r\n\r\nWhile having the inverse association configured it generally positive as it avoid some extra queries etc, infering it may break legecy code, as evidenced by how it broke `ActiveStorage::Blob` in https://github.com/rails/rails/pull/50800\r\n\r\nAs such we can't just enable this behavior immediately, we need to provide and upgrade path for users.\r\n\r\nAt this stage this PR is just a quick draft to discuss how exactly we should gate this. We can just make it a regular framework default, but perhaps emitting a deprecation warning when we would have infered the inverse relation would help users upgrade?  cc @rafaelfranca as you generally have great insights on this kind of new framework default.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50883/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50879",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50879/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50879/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50879/events",
        "html_url": "https://github.com/rails/rails/pull/50879",
        "id": 2101071156,
        "node_id": "PR_kwDNIULOZRn03Q",
        "number": 50879,
        "title": "Transform actionpack documentation to Markdown",
        "user": {
            "login": "rafaelfranca",
            "id": 47848,
            "node_id": "MDQ6VXNlcjQ3ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rafaelfranca",
            "html_url": "https://github.com/rafaelfranca",
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-25T19:53:03Z",
        "updated_at": "2024-01-25T22:29:37Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50879",
            "html_url": "https://github.com/rails/rails/pull/50879",
            "diff_url": "https://github.com/rails/rails/pull/50879.diff",
            "patch_url": "https://github.com/rails/rails/pull/50879.patch",
            "merged_at": null
        },
        "body": "Related to #50759\r\n\r\n`./tools/rdoc-to-md -a --only=actionpack` to reproduce the results.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50879/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50873",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50873/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50873/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50873/events",
        "html_url": "https://github.com/rails/rails/pull/50873",
        "id": 2100413008,
        "node_id": "PR_kwDNIULOZREGFA",
        "number": 50873,
        "title": "dump schema: ignore tables from any postgres schema",
        "user": {
            "login": "gagalago",
            "id": 519226,
            "node_id": "MDQ6VXNlcjUxOTIyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/519226?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gagalago",
            "html_url": "https://github.com/gagalago",
            "followers_url": "https://api.github.com/users/gagalago/followers",
            "following_url": "https://api.github.com/users/gagalago/following{/other_user}",
            "gists_url": "https://api.github.com/users/gagalago/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gagalago/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gagalago/subscriptions",
            "organizations_url": "https://api.github.com/users/gagalago/orgs",
            "repos_url": "https://api.github.com/users/gagalago/repos",
            "events_url": "https://api.github.com/users/gagalago/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gagalago/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-25T13:31:52Z",
        "updated_at": "2024-01-25T13:41:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50873",
            "html_url": "https://github.com/rails/rails/pull/50873",
            "diff_url": "https://github.com/rails/rails/pull/50873.diff",
            "patch_url": "https://github.com/rails/rails/pull/50873.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nthis pull request improve the current implementation of ignoring table during the schema dump by allowing to ignore tables from other postgres schema than \"public\".\r\n\r\n### Detail\r\n\r\nThis Pull Request changes [REPLACE ME]\r\n\r\n### Additional information\r\n\r\nthe proposed implementation lack the ability to specify exactly from which schema, the table is ignored but I think that even do, it's better than the current implementation.\r\n\r\n- [pg_dump documentation](https://www.postgresql.org/docs/current/app-pgdump.html)\r\n- [pattern documentation](https://www.postgresql.org/docs/current/app-psql.html#APP-PSQL-PATTERNS\r\n\r\n### Checklist\r\n\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\nI feel that the code change is too small to request updating CHANGELOG or writing new tests",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50868",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50868/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50868/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50868/events",
        "html_url": "https://github.com/rails/rails/issues/50868",
        "id": 2099221011,
        "node_id": "I_kwDNIULOfR-SEw",
        "number": 50868,
        "title": "Comparing `Time` object with an integer doesn't throw an error ",
        "user": {
            "login": "tgxworld",
            "id": 4335742,
            "node_id": "MDQ6VXNlcjQzMzU3NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4335742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgxworld",
            "html_url": "https://github.com/tgxworld",
            "followers_url": "https://api.github.com/users/tgxworld/followers",
            "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
            "organizations_url": "https://api.github.com/users/tgxworld/orgs",
            "repos_url": "https://api.github.com/users/tgxworld/repos",
            "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgxworld/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-24T22:29:19Z",
        "updated_at": "2024-01-30T04:47:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/time\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_stuff\r\n    # This would have raise an argument error in Ruby for trying to compare a Time object with an Integer\r\n    assert Time.now >= Time.now.to_i - 999_999\r\n\r\n    assert Time.now.to_i >= Time.now.to_i - 999_999\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI'm not sure but I would expect one of the following:\r\n\r\n1. Raise an argument error like what Ruby does when trying to compare a `Time` object with an `Integer`\r\n2. Convert the `Time` object to an `Integer` before comparing\r\n3. Convert the `Integer` to a `Time` object before comparing\r\n\r\n### Actual behavior\r\n\r\nNo errors are raised and the code will always evaluate to `false`.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50867",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50867/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50867/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50867/events",
        "html_url": "https://github.com/rails/rails/pull/50867",
        "id": 2098780342,
        "node_id": "PR_kwDNIULOZPrnLA",
        "number": 50867,
        "title": "Initialize ActiveRecord::Migrator.migrations_paths at application initialization",
        "user": {
            "login": "fsateler",
            "id": 1322013,
            "node_id": "MDQ6VXNlcjEzMjIwMTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsateler",
            "html_url": "https://github.com/fsateler",
            "followers_url": "https://api.github.com/users/fsateler/followers",
            "following_url": "https://api.github.com/users/fsateler/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsateler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsateler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsateler/subscriptions",
            "organizations_url": "https://api.github.com/users/fsateler/orgs",
            "repos_url": "https://api.github.com/users/fsateler/repos",
            "events_url": "https://api.github.com/users/fsateler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsateler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-24T17:44:10Z",
        "updated_at": "2024-01-24T17:46:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50867",
            "html_url": "https://github.com/rails/rails/pull/50867",
            "diff_url": "https://github.com/rails/rails/pull/50867.diff",
            "patch_url": "https://github.com/rails/rails/pull/50867.patch",
            "merged_at": null
        },
        "body": "This is already done in rake tasks in the `load_config` task. However, if migrations want to be manipulated/used by a non-rake program this initialization would miss any extra directories configured by the user.\r\n\r\nWe move the initialization to an initializer block. With this we can remove the rake config since it depends on `environment` anyway.\r\n\r\n### Motivation / Background\r\n\r\nIn our app we use schema-based multitenancy which means we need to setup and migrate for each tenant. We have created\r\na few helpers to aid in this task. \r\nRecently, we began modularizing our app, and started moving our migrations into packs. \r\nThen we started facing issues with migrations that tried to run more than once.\r\nWe diagnosed the root cause that our tenant creation command was not invoking `db:load_config` before loading the schema.\r\nThis resulted in \"packed\" migrations not being recorded in the initial seed of the `schema_migrations` table. Then when we attempted to run migrations on that tenant those migrations would try to run and fail. \r\n\r\nThis Pull Request has been created because a fix for this is to ensure whenever the app is loaded, the correct default paths\r\nare loaded.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the initialization from a rake task to the app initialization process.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50867/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 3,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50862",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50862/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50862/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50862/events",
        "html_url": "https://github.com/rails/rails/pull/50862",
        "id": 2097954073,
        "node_id": "PR_kwDNIULOZO-RWg",
        "number": 50862,
        "title": "Accept Tempfile as ActiveStorage attachable",
        "user": {
            "login": "shouichi",
            "id": 99586,
            "node_id": "MDQ6VXNlcjk5NTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/99586?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shouichi",
            "html_url": "https://github.com/shouichi",
            "followers_url": "https://api.github.com/users/shouichi/followers",
            "following_url": "https://api.github.com/users/shouichi/following{/other_user}",
            "gists_url": "https://api.github.com/users/shouichi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shouichi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shouichi/subscriptions",
            "organizations_url": "https://api.github.com/users/shouichi/orgs",
            "repos_url": "https://api.github.com/users/shouichi/repos",
            "events_url": "https://api.github.com/users/shouichi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shouichi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-24T10:31:28Z",
        "updated_at": "2024-01-29T23:50:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50862",
            "html_url": "https://github.com/rails/rails/pull/50862",
            "diff_url": "https://github.com/rails/rails/pull/50862.diff",
            "patch_url": "https://github.com/rails/rails/pull/50862.patch",
            "merged_at": null
        },
        "body": "`File` is already accepted as an attachable, so why not?",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50861",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50861/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50861/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50861/events",
        "html_url": "https://github.com/rails/rails/pull/50861",
        "id": 2097724253,
        "node_id": "PR_kwDNIULOZOxlpw",
        "number": 50861,
        "title": "ActionView: Raise on invalid format",
        "user": {
            "login": "3v0k4",
            "id": 5238698,
            "node_id": "MDQ6VXNlcjUyMzg2OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5238698?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3v0k4",
            "html_url": "https://github.com/3v0k4",
            "followers_url": "https://api.github.com/users/3v0k4/followers",
            "following_url": "https://api.github.com/users/3v0k4/following{/other_user}",
            "gists_url": "https://api.github.com/users/3v0k4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3v0k4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3v0k4/subscriptions",
            "organizations_url": "https://api.github.com/users/3v0k4/orgs",
            "repos_url": "https://api.github.com/users/3v0k4/repos",
            "events_url": "https://api.github.com/users/3v0k4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3v0k4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-24T08:37:24Z",
        "updated_at": "2024-01-24T08:37:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50861",
            "html_url": "https://github.com/rails/rails/pull/50861",
            "diff_url": "https://github.com/rails/rails/pull/50861.diff",
            "patch_url": "https://github.com/rails/rails/pull/50861.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFixes #45636 \r\n\r\n### Detail\r\n\r\nThis Pull Request adds a check in `ActionView::PathSet#find_all` to ensure all passed formats are valid.\r\n\r\nSince `#find_all` is used by `#exists?` and `#find`, the check is extended to all the public methods in the class that search templates.\r\n\r\n### Additional information\r\n\r\n.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50861/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50858",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50858/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50858/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50858/events",
        "html_url": "https://github.com/rails/rails/pull/50858",
        "id": 2097141500,
        "node_id": "PR_kwDNIULOZOSs4A",
        "number": 50858,
        "title": "Support options for ActionMailer delivery callbacks",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107188,
                "node_id": "MDU6TGFiZWwxMDcxODg=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
                "name": "actionmailer",
                "color": "8B00FC",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T23:16:27Z",
        "updated_at": "2024-01-23T23:16:31Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50858",
            "html_url": "https://github.com/rails/rails/pull/50858",
            "diff_url": "https://github.com/rails/rails/pull/50858.diff",
            "patch_url": "https://github.com/rails/rails/pull/50858.patch",
            "merged_at": null
        },
        "body": "Closes https://github.com/rails/rails/issues/50830.\r\n\r\nThe code works, but docs/tests etc are currently missing. I want to validate the approach before proceeding.\r\n\r\nInside action mailer I am reusing private methods from the implementation of callbacks from the action controller, see https://github.com/rails/rails/blob/main/actionpack/lib/abstract_controller/callbacks.rb.\r\n\r\nThe questions to consider are:\r\n1. Should the mailer callbacks really depend on the internals of controller callbacks, considering that it already includes it https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionmailer/lib/action_mailer/base.rb#L493\r\n2. Controllers callbacks have a `raise_on_missing_callbacks_action`, see https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionpack/lib/abstract_controller/callbacks.rb#L36 which can be set via `config.action_controller. raise_on_missing_callbacks_action`. This kinda makes sense for action mailer too, so should we introduce `config.action_mailer.raise_on_missing_callbacks_action` config? \r\n3. Controller callbacks use the word `\"controller\"`, see https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionpack/lib/abstract_controller/callbacks.rb#L54, while for mailer we should use the `\"mailer\"` word or should we make the message text more generic? \r\n\r\ncc @bensheldon ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50856",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50856/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50856/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50856/events",
        "html_url": "https://github.com/rails/rails/pull/50856",
        "id": 2096854463,
        "node_id": "PR_kwDNIULOZODAXw",
        "number": 50856,
        "title": "Document autosave validation behavior for ActiveRecord associations [ci skip]",
        "user": {
            "login": "Dmoment",
            "id": 29010172,
            "node_id": "MDQ6VXNlcjI5MDEwMTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/29010172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dmoment",
            "html_url": "https://github.com/Dmoment",
            "followers_url": "https://api.github.com/users/Dmoment/followers",
            "following_url": "https://api.github.com/users/Dmoment/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dmoment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dmoment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dmoment/subscriptions",
            "organizations_url": "https://api.github.com/users/Dmoment/orgs",
            "repos_url": "https://api.github.com/users/Dmoment/repos",
            "events_url": "https://api.github.com/users/Dmoment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dmoment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-23T19:41:36Z",
        "updated_at": "2024-01-23T21:03:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50856",
            "html_url": "https://github.com/rails/rails/pull/50856",
            "diff_url": "https://github.com/rails/rails/pull/50856.diff",
            "patch_url": "https://github.com/rails/rails/pull/50856.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nThis Pull Request needs to be merged to document the behavior of autosave: true enabling validations for belongs_to and has_one associations in ActiveRecord. Currently, this behavior is implemented in the code but not mentioned in the official documentation. This can lead to confusion for developers who rely on the Rails guides for accurate information on how ActiveRecord associations work. Including this information will improve the clarity and comprehensiveness of the Rails documentation.\r\n-->\r\n\r\n### Detail\r\n\r\nThis Pull Request adds documentation comments to the belongs_to and has_one methods in ActiveRecord::Associations to explain that autosave: true also enables validations by default. This is to reflect the actual behavior of these methods, as described in the source code and observed in application behavior.\r\n\r\n### Additional information\r\n\r\nReference to the issue discussed in Rails: Undocumented - validations enabled by autosave #50807\r\nInline gemfile with bundler example -\r\n``` ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n  gem \"rails\", \"7.1.3\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :authors do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table :books do |t|\r\n    t.belongs_to :author\r\n    t.string :title\r\n  end\r\nend\r\n\r\nclass Author < ActiveRecord::Base\r\n  has_one :book, autosave: true\r\nend\r\n\r\nclass Book < ActiveRecord::Base\r\n  belongs_to :author\r\n  validates :title, presence: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_autosave_with_validations\r\n    author = Author.new(name: \"J.K. Rowling\")\r\n    author.build_book # Not setting a title to trigger validation failure\r\n\r\n    refute author.save, \"Author should not be saved due to book validation failure\"\r\n    assert author.book.errors.full_messages.include?(\"Title can't be blank\"), \"Book should contain error on title\"\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change, specifically the addition of documentation for autosave: true behavior.\r\n* [x] Commit message includes a detailed description of the changes, for example: [Doc #50807] Document autosave validation behavior for associations.\r\n* [x] Tests are not required as this is a documentation update.\r\n* [x] CHANGELOG is not updated since this is a minor documentation change and does not affect library behavior.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50856/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50852",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50852/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50852/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50852/events",
        "html_url": "https://github.com/rails/rails/pull/50852",
        "id": 2096320468,
        "node_id": "PR_kwDNIULOZNlvqQ",
        "number": 50852,
        "title": "Action View: Fallback to existing partial when possible",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T15:19:52Z",
        "updated_at": "2024-01-23T15:27:15Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50852",
            "html_url": "https://github.com/rails/rails/pull/50852",
            "diff_url": "https://github.com/rails/rails/pull/50852.diff",
            "patch_url": "https://github.com/rails/rails/pull/50852.patch",
            "merged_at": null
        },
        "body": "Closes [#50844][]\r\n\r\nMotivation / Background\r\n---\r\n\r\nA controller declared in the top-level module can render a top-level Active Model instance whose partial is declared in the root view directory (like `articles/_article.html.erb`).\r\n\r\nA controller scoped within a module can render an Active Model instance whose partial is similarly scoped within view directory (like `scoped/articles/_article.html.erb`).\r\n\r\nA controller scoped within a module cannot render an Active Model instance whose partial is declared in the root view directory (like `articles/_article.html.erb`), despite the absence of a similarly scoped partial.\r\n\r\nThis is intended behavior that's powered by\r\n[`config.action_view.prefix_partial_path_with_controller_namespace = true`][prefix_partial_path_with_controller_namespace] (`true` by default).\r\n\r\nThis change was introduced in March of 2012 as part of [#5625][].\r\n\r\nDetail\r\n---\r\n\r\nAs a consumer of Action View, my intuition is that the lookup would fallback, in the same way that a controller that inherits from `ApplicationController` could define its own view, then rely on fallback to render an `app/views/application` partial.\r\n\r\nThis commit modifies the behavior to gracefully fall back to the root-level view partial.\r\n\r\nChecklist\r\n---\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n[#59844]: https://github.com/rails/rails/issues/50844\r\n[prefix_partial_path_with_controller_namespace]: https://guides.rubyonrails.org/configuring.html#config-action-view-prefix-partial-path-with-controller-namespace\r\n[#5625]: https://github.com/rails/rails/pull/5625\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50852/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50850",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50850/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50850/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50850/events",
        "html_url": "https://github.com/rails/rails/issues/50850",
        "id": 2095807650,
        "node_id": "I_kwDNIULOfOt8og",
        "number": 50850,
        "title": "belongs_to association doesn't work with composite `primary_key` option",
        "user": {
            "login": "bguban",
            "id": 1564376,
            "node_id": "MDQ6VXNlcjE1NjQzNzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1564376?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bguban",
            "html_url": "https://github.com/bguban",
            "followers_url": "https://api.github.com/users/bguban/followers",
            "following_url": "https://api.github.com/users/bguban/following{/other_user}",
            "gists_url": "https://api.github.com/users/bguban/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bguban/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bguban/subscriptions",
            "organizations_url": "https://api.github.com/users/bguban/orgs",
            "repos_url": "https://api.github.com/users/bguban/repos",
            "events_url": "https://api.github.com/users/bguban/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bguban/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-23T10:56:14Z",
        "updated_at": "2024-01-25T15:00:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have an aggregator model that represents the same entity from different providers. This model has a single primary but some of the providers have a composite key. So I must use 2 columns to be able to build the reflection\r\n\r\n```\r\nclass Ticker < ApplicationRecord\r\n  # this model has gvkey and iid but they are not the primary key. just fields to build the relation\r\n  has_many :co_actions, primary_key: [:gvkey, :iid], query_constraints: [:gvkey, :iid]\r\nend\r\n\r\nclass CoAction\r\n  # this model has gvkey and iid as a foreign key\r\n  belongs_to :ticker, primary_key: [:gvkey, :iid], query_constraints: [:gvkey, :iid]\r\nend\r\n```\r\n\r\nWhen I run\r\n```\r\nCoAction.take.ticker\r\n```\r\nit returns\r\n```\r\n/activerecord-7.1.3/lib/active_record/reflection.rb:576:in `check_validity!': Association CoAction#ticker primary key [:gvkey, :iid] doesn't match with foreign key [\"gvkey\", \"iid\"]. Please specify query_constraints, or primary_key and foreign_key values. (ActiveRecord::CompositePrimaryKeyMismatchError)\r\n```\r\nbut I would expect to receive the ticker model instead. The composite_primary_key gem does what expected but rails 7.1.3 relation builder converts the primary key into a string instead. So what you see in the message is a string `\"[:gvkey, :iid]\"`. (ActiveRecord::Reflection::BelongsToReflection#association_primary_key)\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.1\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50850/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50849",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50849/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50849/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50849/events",
        "html_url": "https://github.com/rails/rails/pull/50849",
        "id": 2095108275,
        "node_id": "PR_kwDNIULOZMkKDg",
        "number": 50849,
        "title": "Fixes ActionView::Template::Error when pasting images via Trix",
        "user": {
            "login": "schristm",
            "id": 24068,
            "node_id": "MDQ6VXNlcjI0MDY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schristm",
            "html_url": "https://github.com/schristm",
            "followers_url": "https://api.github.com/users/schristm/followers",
            "following_url": "https://api.github.com/users/schristm/following{/other_user}",
            "gists_url": "https://api.github.com/users/schristm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schristm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schristm/subscriptions",
            "organizations_url": "https://api.github.com/users/schristm/orgs",
            "repos_url": "https://api.github.com/users/schristm/repos",
            "events_url": "https://api.github.com/users/schristm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schristm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1180817762,
                "node_id": "MDU6TGFiZWwxMTgwODE3NzYy",
                "url": "https://api.github.com/repos/rails/rails/labels/actiontext",
                "name": "actiontext",
                "color": "3bc667",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T02:14:58Z",
        "updated_at": "2024-01-23T02:15:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50849",
            "html_url": "https://github.com/rails/rails/pull/50849",
            "diff_url": "https://github.com/rails/rails/pull/50849.diff",
            "patch_url": "https://github.com/rails/rails/pull/50849.patch",
            "merged_at": null
        },
        "body": "The asset pipeline really shouldn't be checked for remote images regardless, but this also happens to fix an issue with images pasted into Trix that get serialized as action-text-attachments with \"blob:\" urls.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50849/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50848",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50848/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50848/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50848/events",
        "html_url": "https://github.com/rails/rails/issues/50848",
        "id": 2095071717,
        "node_id": "I_kwDNIULOfOBB5Q",
        "number": 50848,
        "title": "O(N^2) operation in `CollectionAssociation#replace_common_records_in_memory` and **another** O(N^2) operation in `ActiveStorage::Attached::Many#attach`",
        "user": {
            "login": "malavbhavsar",
            "id": 1080592,
            "node_id": "MDQ6VXNlcjEwODA1OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1080592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malavbhavsar",
            "html_url": "https://github.com/malavbhavsar",
            "followers_url": "https://api.github.com/users/malavbhavsar/followers",
            "following_url": "https://api.github.com/users/malavbhavsar/following{/other_user}",
            "gists_url": "https://api.github.com/users/malavbhavsar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malavbhavsar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malavbhavsar/subscriptions",
            "organizations_url": "https://api.github.com/users/malavbhavsar/orgs",
            "repos_url": "https://api.github.com/users/malavbhavsar/repos",
            "events_url": "https://api.github.com/users/malavbhavsar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malavbhavsar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T01:29:33Z",
        "updated_at": "2024-01-23T01:39:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nApologies for not following the template. I wasn't sure how to include my half-baked fix with it... I have full repro and additional information here: [malavbhavsar/rails#1](https://github.com/malavbhavsar/rails/pull/1) \r\n\r\n```ruby\r\nuser_1 = User.create!(name: \"Jason\")\r\nuser_1.highlights.attach(\r\n  1000.times.map do |i|\r\n    {\r\n      io: StringIO.new(\"Example string inside text_file_#{i}\"),\r\n      filename: \"text_file_#{i}.txt\",\r\n      content_type: \"text/plain\",\r\n    }\r\n  end\r\n)\r\nuser_1.save!\r\nuser_1.reload\r\n\r\n# Below operation takes 5 seconds\r\nBenchmark.bm(30) do |x|\r\n  x.report(\"attach performance without fix\") do\r\n    user_1.highlights.attach(\r\n      {\r\n        io: StringIO.new(\"another text file. wow.\"),\r\n        filename: \"text_file_another.txt\",\r\n        content_type: \"text/plain\",\r\n      }\r\n    )\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nExecution time of `#attach` should not depend on how big a collection is.\r\n\r\n### Actual behavior\r\nOn a big `has_many_attached` collection, `#attach` takes a long time. If there are 1000 existing attachments, it will take 5 seconds to attach a new one.\r\n\r\n### System configuration\r\n**Rails version**: `main`\r\n\r\n**Ruby version**: `3.1.4`\r\n\r\n### Explanation\r\nWhen we call `#attach` on an already big activestorage collection, it first calls `record.public_send(\"#{name}=\", blobs + attachables.flatten) # e.g. record.highlights=...`. This eventually ends up calling `CollectionAssociation#replace_common_records_in_memory` which has been discovered as a performance problem in #46652. It ends up calling `Array#index` **n** times and `#==` **(n*n1)/2** times. In this case, `499500` times.\r\n\r\nFor ActiveRecord has_many collections, this is not a huge problem because, in my experience, `post.comments = new_comments` is not a common pattern. The general use case is `post.comments << new_comment`, which does pretty well performance-wise.\r\n\r\nUnfortunately for `has_many_attached` collection, calling `#attach` is a common use case and it calls `record.things_attachments=` under the hood. Aside - seems like people are running into this [problem](https://discuss.rubyonrails.org/t/attach-pictures-gets-very-slow/81684).\r\n\r\n### Flamegraph\r\n![flamegraph_1](https://github.com/rails/rails/assets/1080592/0bef4acf-aaa7-44b8-a830-daf4a6717ab5)\r\n\r\n### Possible solutions\r\n- Get #46652 merged\r\n- If we are concerned about the increased complexity of `@target_index_map` in #46652, I tried the [same approach with a local variable](https://github.com/malavbhavsar/rails/pull/1/files#diff-ceff30ddab4e756e3a70ece45076eb17ff2f587a068dae657d2ad3a265a3f0d6) and it helped.\r\n\r\n### ANOTHER problem\r\nAs flamegraph shows, there is another O(N^2) in `#attach`. That one is coming from `Attached::Changes::CreateOneOfMany#find_attachment`. I haven't figured out a possible solution for it... I don't understand the change tracking(?) active storage is doing but if someone can help me understand I can try fixing it. I assume this will probably need a new `Attached::Changes::AttachMany` and `Attached::Changes::AttachOne`?\r\n\r\n### Workaround\r\nI have found that creating blobs and attachments manually gets rid of BOTH problems and doesn't leave `highlights_attachments` and `highlights_blobs` stale.\r\n\r\n```ruby\r\nuser_3 = User.create!(name: \"Lauren\")\r\nuser_3.highlights.attach(\r\n  1000.times.map do |i|\r\n    {\r\n      io: StringIO.new(\"Example string inside text_file_#{i}\"),\r\n      filename: \"text_file_#{i}.txt\",\r\n      content_type: \"text/plain\",\r\n    }\r\n  end\r\n)\r\nuser_3.save!\r\nuser_3.reload\r\n\r\n# Below operation takes 0.02 second\r\nApplicationRecord.transaction do\r\n  blob = ActiveStorage::Blob.create_and_upload!(\r\n    io: StringIO.new(\"another text file. wow.\"),\r\n    filename: \"text_file_another.txt\",\r\n    content_type: \"text/plain\",\r\n  )\r\n  user_3.highlights_attachments.create!(\r\n    blob_id: blob.id,\r\n    name: 'highlights',\r\n  )\r\n  user_3.save!\r\nend\r\n```\r\n\r\n### Final performance stats\r\n\r\n```\r\n                                              user     system      total        real\r\nattach performance without fix            4.711782   0.013564   4.725346 (  4.760098)\r\n                                              user     system      total        real\r\nattach performance with half-ish fix      1.855833   0.009120   1.864953 (  1.901090)\r\n                                              user     system      total        real\r\nattach performance manual                 0.024790   0.002624   0.027414 (  0.030269)\r\n```\r\n\r\ncc: @jonathanhefner, @jeffcarbs, @danny-pflughoeft",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50848/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50846",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50846/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50846/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50846/events",
        "html_url": "https://github.com/rails/rails/pull/50846",
        "id": 2094996849,
        "node_id": "PR_kwDNIULOZMeOHA",
        "number": 50846,
        "title": "Set ActiveRecord::RecordNotFound#id when raised from a call to #reload a deleted record",
        "user": {
            "login": "segiddins",
            "id": 1946610,
            "node_id": "MDQ6VXNlcjE5NDY2MTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1946610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/segiddins",
            "html_url": "https://github.com/segiddins",
            "followers_url": "https://api.github.com/users/segiddins/followers",
            "following_url": "https://api.github.com/users/segiddins/following{/other_user}",
            "gists_url": "https://api.github.com/users/segiddins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/segiddins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/segiddins/subscriptions",
            "organizations_url": "https://api.github.com/users/segiddins/orgs",
            "repos_url": "https://api.github.com/users/segiddins/repos",
            "events_url": "https://api.github.com/users/segiddins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/segiddins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T00:04:37Z",
        "updated_at": "2024-01-23T16:49:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50846",
            "html_url": "https://github.com/rails/rails/pull/50846",
            "diff_url": "https://github.com/rails/rails/pull/50846.diff",
            "patch_url": "https://github.com/rails/rails/pull/50846.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because I am writing some tests for my app around records being deleted by calling `reload`, and there was no easy way to assert that the record raising the `ActiveRecord::RecordNotFound` exception was the record I was expecting\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `raise_record_not_found_exception!` to find IDs based on the primary key from the where condition, if no IDs are explicitly passed\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50846/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50844",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50844/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50844/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50844/events",
        "html_url": "https://github.com/rails/rails/issues/50844",
        "id": 2094843344,
        "node_id": "I_kwDNIULOfNzF0A",
        "number": 50844,
        "title": "`ActionView::Template::Error`: Missing Active Model partial when rendered from Controller declared in module",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-22T22:05:18Z",
        "updated_at": "2024-01-23T15:20:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_model/railtie\"\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/\" => \"test#index\"\r\n    get \"/scoped\" => \"scoped/test#index\"\r\n  end\r\nend\r\n\r\nclass Model\r\n  include ActiveModel::Model\r\nend\r\n\r\nclass TestController < ActionController::Base\r\nend\r\n\r\nmodule Scoped\r\n  class TestController < ActionController::Base\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def setup\r\n    super\r\n    @views = Dir.mktmpdir\r\n    ActionController::Base.prepend_view_path @views\r\n\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"test/index.html.erb\", \"<%= render Model.new %>\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_controller_renders_unscoped_partial\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_scoped_controller_renders_scoped_partial\r\n    view_file \"scoped/models/_model.html.erb\", \"Rendered\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/scoped\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  # \ud83d\udd34 FAILS\r\n  def test_scoped_controller_renders_unscoped_partial\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/scoped\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  private\r\n    def app\r\n      Rails.application\r\n    end\r\n\r\n    def view_file(name, content)\r\n      path = Pathname.new(@views).join(name)\r\n      path.dirname.tap(&:mkpath)\r\n      path.write(content)\r\n    end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nA controller declared in the top-level module (as exercised by `test_controller_renders_unscoped_partial`) can render a top-level Active Model instance whose partial is declared in the root view directory (like `models/_model.html.erb`).\r\n\r\nA controller scoped within a module (as exercised by `test_scoped_controller_renders_scoped_partial`) can render an Active Model instance whose partial is similarly scoped within view directory (like `scoped/models/_model.html.erb`).\r\n\r\nA controller scoped within a module (as exercised by `test_scoped_controller_renders_unscoped_partial`) should be able to render an Active Model instance whose partial is declared in the root view directory (like `models/_model.html.erb`), despite the absence of a similarly scoped partial. **It should gracefully fall back to the root-level view partial).\r\n\r\n### Actual behavior\r\n\r\nThe `test_scoped_controller_renders_unscoped_partial` test raises an Action View error:\r\n\r\n```\r\nActionView::Template::Error (Missing partial scoped/models/_model with {:locale=>[:en], :formats=>[:html], :variants=>[], :handlers=>[:raw, :erb, :html, :builder, :ruby]}.\r\n                                                                                                          \r\nSearched in:                                                                                              \r\n  * \"/var/folders/4q/q308vb3s12x2rzrgppdsz0540000gn/T/d20240122-19453-6bve0b\"\r\n):                                                                                                        \r\n    1: <%= render Model.new %>                                                                            \r\n                                          \r\n```\r\n\r\nIt cannot resolve the `models/_model` partial, since the rendering controller is namespaced within `scoped/`.\r\n\r\n### System configuration\r\n**Rails version**: `7.1.3`\r\n\r\n**Ruby version**: `3.2.0`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50844/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50842",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50842/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50842/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50842/events",
        "html_url": "https://github.com/rails/rails/issues/50842",
        "id": 2094312908,
        "node_id": "I_kwDNIULOfNStzA",
        "number": 50842,
        "title": "How to use Azure Managed Identity for authentication and authorization for Ruby On Rails Active Storage?",
        "user": {
            "login": "avivansh",
            "id": 40461477,
            "node_id": "MDQ6VXNlcjQwNDYxNDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/40461477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/avivansh",
            "html_url": "https://github.com/avivansh",
            "followers_url": "https://api.github.com/users/avivansh/followers",
            "following_url": "https://api.github.com/users/avivansh/following{/other_user}",
            "gists_url": "https://api.github.com/users/avivansh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/avivansh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/avivansh/subscriptions",
            "organizations_url": "https://api.github.com/users/avivansh/orgs",
            "repos_url": "https://api.github.com/users/avivansh/repos",
            "events_url": "https://api.github.com/users/avivansh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/avivansh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-22T16:41:34Z",
        "updated_at": "2024-01-22T16:41:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Current setup\r\n```yaml\r\nazure:\r\n  service: AzureStorage\r\n  storage_account_name: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-NAME\") %>\r\n  storage_access_key: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-ACCESS-KEY\") %>\r\n  container: <%= VaultService.get_secret('AZURE-ATTACHMENTS-BUCKET-NAME') %>\r\n```\r\n\r\nGiven the implementation of accessing Azure Storage using Access Token. [Link](https://github.com/azure/azure-storage-ruby/tree/master/blob#access-token)\r\n \r\n```ruby\r\nrequire \"azure/storage/common\"\r\n\r\naccess_token = <your initial access token>\r\n\r\n# Creating an instance of `Azure::Storage::Common::Core::TokenCredential`\r\ntoken_credential = Azure::Storage::Common::Core::TokenCredential.new access_token\r\ntoken_signer = Azure::Storage::Common::Core::Auth::TokenSigner.new token_credential\r\nblob_token_client = Azure::Storage::Blob::BlobService.new(storage_account_name: <your_account_name>, signer: token_signer)\r\n```\r\n\r\n\r\nGiven the implementation of Active Storage for Ruby on Rails. It uses azure-storage-blob gem under the hood.\r\n[link](https://github.com/rails/rails/blob/61d6eb119fc53678d8f5028bd73ae77e69b91fb6/activestorage/lib/active_storage/service/azure_storage_service.rb#L16)\r\n\r\n```ruby\r\n    def initialize(storage_account_name:, storage_access_key:, container:, public: false, **options)\r\n      @client = Azure::Storage::Blob::BlobService.create(storage_account_name: storage_account_name, storage_access_key: storage_access_key, **options)\r\n      @signer = Azure::Storage::Common::Core::Auth::SharedAccessSignature.new(storage_account_name, storage_access_key)\r\n      @container = container\r\n      @public = public\r\n    end\r\n```\r\n\r\nNew Setup, config/storage.yml\r\n\r\n```yaml\r\nazure:\r\n  service: AzureStorage\r\n  storage_account_name: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-NAME\") %>\r\n  container: <%= VaultService.get_secret('AZURE-ATTACHMENTS-BUCKET-NAME') %>\r\n```\r\n\r\nMonkey patched to use the above information to use active storage using managed identity\r\n\r\n```ruby\r\nmodule ActiveStorage\r\n  class Service::AzureStorageService < Service\r\n    def initialize(storage_account_name:, container:, public: false, **options)\r\n      access_token = AzureAd::ManagedIdentityTokenProvider.new('https://storage.azure.com/', client_id: ENV['AKS_MANAGED_IDENTITY_ID']).get_authentication_header.split(' ').last\r\n      # Creating an instance of `Azure::Storage::Common::Core::TokenCredential`\r\n      token_credential = ::Azure::Storage::Common::Core::TokenCredential.new access_token\r\n      token_signer = ::Azure::Storage::Common::Core::Auth::TokenSigner.new token_credential\r\n      @client = Azure::Storage::Blob::BlobService.create(storage_account_name: storage_account_name, signer: token_signer, **options)\r\n      user_delegation_key = @client.get_user_delegation_key(DateTime.now - 1.minute, DateTime.now + 6.day + 23.hours)\r\n      @signer = Azure::Storage::Common::Core::Auth::SharedAccessSignature.new(storage_account_name: storage_account_name, user_delegation_key: user_delegation_key )\r\n      @container = container\r\n      @public = public\r\n    rescue StandardError => e\r\n      raise e unless Rake.respond_to?(:application) && (!Rake.application.top_level_tasks.exclude?('assets:precompile') || !Rake.application.top_level_tasks.exclude?('source_map:upload_source_map'))\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n\r\nIs this approach correct? (I am yet to test this.). Also, is there any other approach on how to achieve this? I have posted the question on [stackoverflow](https://stackoverflow.com/questions/77846948/can-we-connect-active-storage-in-ruby-on-rails-with-azure-using-managed-identity) as well.\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: Rails 6.1.7.3\r\n\r\n**Ruby version**: ruby 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50842/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50838",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50838/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50838/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50838/events",
        "html_url": "https://github.com/rails/rails/pull/50838",
        "id": 2093903637,
        "node_id": "PR_kwDNIULOZLiUKA",
        "number": 50838,
        "title": "Fix SQLite table definition parsing bug to handle commas in default function definitions",
        "user": {
            "login": "fractaledmind",
            "id": 5077225,
            "node_id": "MDQ6VXNlcjUwNzcyMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5077225?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fractaledmind",
            "html_url": "https://github.com/fractaledmind",
            "followers_url": "https://api.github.com/users/fractaledmind/followers",
            "following_url": "https://api.github.com/users/fractaledmind/following{/other_user}",
            "gists_url": "https://api.github.com/users/fractaledmind/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fractaledmind/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fractaledmind/subscriptions",
            "organizations_url": "https://api.github.com/users/fractaledmind/orgs",
            "repos_url": "https://api.github.com/users/fractaledmind/repos",
            "events_url": "https://api.github.com/users/fractaledmind/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fractaledmind/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-22T13:18:21Z",
        "updated_at": "2024-01-22T13:18:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50838",
            "html_url": "https://github.com/rails/rails/pull/50838",
            "diff_url": "https://github.com/rails/rails/pull/50838.diff",
            "patch_url": "https://github.com/rails/rails/pull/50838.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request fixes a bug in the low-level SQLite adapter introspection logic. I came across the bug when working with virtual columns and JSON, but there are many possible cases where this would cause problems. Here is one reproducible bug script though:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\");\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.json :payload, null: false, default: {}\r\n    t.virtual :external_id, type: :string, as: \"JSON_EXTRACT(payload, '$.id')\", stored: true, null: false, index: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_with_comma_in_definition_is_autopopulated\r\n    post = Post.create!(payload: { id: 'pst_1' })\r\n\r\n    assert_equal 'pst_1', post.external_id\r\n  end\r\nend\r\n```\r\n\r\n### Detail\r\n\r\nThis Pull Request more intelligently parses the SQL string description of the table to ensure that we only split by commas that mark a new column definition. In order to accomplish this, the table parsing method needs the list of column names for the table. When `table_structure_sql` is called by `table_structure_with_collation`, these can be supplied as they are already present; when it is called by `foreign_keys`, however, they are not present and thus must be fetched.\r\n\r\nI also added a simple regression test as a part of the virtual column test case.\r\n\r\n### Additional information\r\n\r\nThis bug has existed for a long time, but I most recently touched the relevant code in https://github.com/rails/rails/pull/49376.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\ncc: @byroot (this is related to #49346), @tenderlove (this is related to https://github.com/rails/rails/pull/49290), @yahonda (this is related to https://github.com/rails/rails/pull/49376)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50838/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50837",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50837/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50837/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50837/events",
        "html_url": "https://github.com/rails/rails/pull/50837",
        "id": 2093866588,
        "node_id": "PR_kwDNIULOZLgRiw",
        "number": 50837,
        "title": "Ensure pre-7.1 migrations use legacy index names when using `rename_table`",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-22T12:59:01Z",
        "updated_at": "2024-01-28T20:19:02Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50837",
            "html_url": "https://github.com/rails/rails/pull/50837",
            "diff_url": "https://github.com/rails/rails/pull/50837.diff",
            "patch_url": "https://github.com/rails/rails/pull/50837.patch",
            "merged_at": null
        },
        "body": "Fixes https://github.com/rails/rails/issues/50833.\r\nFollow up to https://github.com/rails/rails/pull/47753 and https://github.com/rails/rails/pull/47863.\r\n\r\nThe easiest way to preserve the old behavior is to rename indexes back after the `rename_table` was run.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50837/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50835",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50835/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50835/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50835/events",
        "html_url": "https://github.com/rails/rails/issues/50835",
        "id": 2093550361,
        "node_id": "I_kwDNIULOfMkLGQ",
        "number": 50835,
        "title": "ActiveStorage::FileNotFoundError (ActiveStorage::FileNotFoundError)",
        "user": {
            "login": "raoehtesham03",
            "id": 152256436,
            "node_id": "U_kgDOCRM_tA",
            "avatar_url": "https://avatars.githubusercontent.com/u/152256436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoehtesham03",
            "html_url": "https://github.com/raoehtesham03",
            "followers_url": "https://api.github.com/users/raoehtesham03/followers",
            "following_url": "https://api.github.com/users/raoehtesham03/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoehtesham03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoehtesham03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoehtesham03/subscriptions",
            "organizations_url": "https://api.github.com/users/raoehtesham03/orgs",
            "repos_url": "https://api.github.com/users/raoehtesham03/repos",
            "events_url": "https://api.github.com/users/raoehtesham03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoehtesham03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1071962662,
                "node_id": "MDU6TGFiZWwxMDcxOTYyNjYy",
                "url": "https://api.github.com/repos/rails/rails/labels/more-information-needed",
                "name": "more-information-needed",
                "color": "bfdadc",
                "default": false,
                "description": "When reporter needs to provide more information"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-22T10:07:53Z",
        "updated_at": "2024-01-23T13:33:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have upgraded my rails application from 6.0 to 6.1 . Since then when I am  executing below queries\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n d = Document.find(768365)\r\n d.page_image.variant(resize_to_limit: Document::PAGE_IMAGE_STYLES[:small]).processed\r\n\r\n```\r\nI am getting this error\r\n### Actual behavior\r\n  ActiveStorage::FileNotFoundError (ActiveStorage::FileNotFoundError)\r\n\r\n### System configuration\r\n**Rails version**: 7.0.8\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50835/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50833",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50833/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50833/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50833/events",
        "html_url": "https://github.com/rails/rails/issues/50833",
        "id": 2092932851,
        "node_id": "I_kwDNIULOfL-e8w",
        "number": 50833,
        "title": "`ActiveRecord::Migration[7.0]`'s `rename_table` uses 7.1's new truncated index name format",
        "user": {
            "login": "r7kamura",
            "id": 111689,
            "node_id": "MDQ6VXNlcjExMTY4OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/111689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/r7kamura",
            "html_url": "https://github.com/r7kamura",
            "followers_url": "https://api.github.com/users/r7kamura/followers",
            "following_url": "https://api.github.com/users/r7kamura/following{/other_user}",
            "gists_url": "https://api.github.com/users/r7kamura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/r7kamura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/r7kamura/subscriptions",
            "organizations_url": "https://api.github.com/users/r7kamura/orgs",
            "repos_url": "https://api.github.com/users/r7kamura/repos",
            "events_url": "https://api.github.com/users/r7kamura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/r7kamura/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-22T02:09:26Z",
        "updated_at": "2024-01-23T03:17:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.3\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_index_name_after_rename_table_with_long_table_name\r\n    long_table_name = \"a\" * 48\r\n\r\n    migration_class = Class.new(ActiveRecord::Migration[7.0]) do\r\n      define_method :migrate do |x|\r\n        create_table :posts do |t|\r\n          t.string :title\r\n          t.index :title\r\n        end\r\n        rename_table :posts, long_table_name\r\n      end\r\n    end\r\n    migration = migration_class.new\r\n\r\n    ActiveRecord::Migrator.new(\r\n      :up,\r\n      [migration],\r\n      ActiveRecord::Base.connection.schema_migration,\r\n      ActiveRecord::Base.connection.internal_metadata\r\n    ).migrate\r\n\r\n    assert_equal \"index_#{long_table_name}_on_title\", ActiveRecord::Base.connection.indexes(long_table_name).first.name\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe above test should pass.\r\n\r\nThis means that since the index name was renamed to `index_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_on_title` in Rails 7.0 and earlier, if `ActiveRecord::Migration[7.0]` or earlier is specified, the same name should be used even in Rails 7.1 or later.\r\n\r\n### Actual behavior\r\n\r\nThe above test fails with the following output:\r\n\r\n```\r\nF\r\n\r\nFailure:\r\nBugTest#test_index_name_after_rename_table_with_long_table_name [example.rb:53]:\r\n--- expected\r\n+++ actual\r\n@@ -1 +1 @@\r\n-\"index_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_on_title\"\r\n+\"idx_on_title_0b3d36c24b\"\r\n\r\n\r\n\r\nbin/rails test example.rb:32\r\n\r\n\r\n\r\nFinished in 0.026827s, 37.2753 runs/s, 37.2753 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\nAs a result, if db/migrate contains `rename_table`, the index names created between Rails 7.0 and 7.1 may be different.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]\r\n\r\n### Other information\r\n\r\nThis is due to the following change:\r\n\r\n- https://github.com/rails/rails/pull/47753\r\n\r\nI think a similar change to the following is needed for `#rename_table`:\r\n\r\n- https://github.com/rails/rails/pull/47863\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50833/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50830",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50830/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50830/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50830/events",
        "html_url": "https://github.com/rails/rails/issues/50830",
        "id": 2092565763,
        "node_id": "I_kwDNIULOfLoFAw",
        "number": 50830,
        "title": "Add support for `ActionMailer.*_delivery` callback `only` and `except` options",
        "user": {
            "login": "viralpraxis",
            "id": 39729785,
            "node_id": "MDQ6VXNlcjM5NzI5Nzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/39729785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viralpraxis",
            "html_url": "https://github.com/viralpraxis",
            "followers_url": "https://api.github.com/users/viralpraxis/followers",
            "following_url": "https://api.github.com/users/viralpraxis/following{/other_user}",
            "gists_url": "https://api.github.com/users/viralpraxis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viralpraxis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viralpraxis/subscriptions",
            "organizations_url": "https://api.github.com/users/viralpraxis/orgs",
            "repos_url": "https://api.github.com/users/viralpraxis/repos",
            "events_url": "https://api.github.com/users/viralpraxis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viralpraxis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107188,
                "node_id": "MDU6TGFiZWwxMDcxODg=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
                "name": "actionmailer",
                "color": "8B00FC",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-21T12:31:43Z",
        "updated_at": "2024-01-21T18:59:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nCurrently ActionMailer's `*_delivery` callbacks do not support `only` and `except` filters, which are quite useful because some callback actions are required for a subset of mailer methods. Technically, only/except can be emulated via `if` option, but another problem is that's not clear from the documentation which options can be passed (currently `only` and `except` are simply ignored).\r\n\r\nI believe that many developers might except `ActionMailer` to behave just like `ActionController`,  so current API implementation might lead to unexpected bugs.\r\n\r\nNote that documentation on `before_action` (and similar callbacks) explicitly refer to possible options:\r\n\r\n> before_action(names, block)[Link](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-before_action)\r\n> Append a callback before actions. See [_insert_callbacks](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_insert_callbacks) for parameter details.\r\n\r\n### Expected behavior\r\nAt least some explicit info on possible `*_delivery` callback options, or (which would be better) support for `only` and `except` options.\r\n\r\n### Actual behavior\r\nMentioned options are simply ignored, no documentation on possible options.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50829",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50829/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50829/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50829/events",
        "html_url": "https://github.com/rails/rails/pull/50829",
        "id": 2092440404,
        "node_id": "PR_kwDNIULOZKUusw",
        "number": 50829,
        "title": "Fix query references for non-hash association where clause values",
        "user": {
            "login": "ezekg",
            "id": 6979737,
            "node_id": "MDQ6VXNlcjY5Nzk3Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6979737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezekg",
            "html_url": "https://github.com/ezekg",
            "followers_url": "https://api.github.com/users/ezekg/followers",
            "following_url": "https://api.github.com/users/ezekg/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezekg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezekg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezekg/subscriptions",
            "organizations_url": "https://api.github.com/users/ezekg/orgs",
            "repos_url": "https://api.github.com/users/ezekg/repos",
            "events_url": "https://api.github.com/users/ezekg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezekg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-21T06:11:40Z",
        "updated_at": "2024-01-30T22:33:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50829",
            "html_url": "https://github.com/rails/rails/pull/50829",
            "diff_url": "https://github.com/rails/rails/pull/50829.diff",
            "patch_url": "https://github.com/rails/rails/pull/50829.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nThis PR fixes an issue where non-hash where-clause values for associations would not set `references_values`. This could (and often does) end up causing hard-to-debug SQL errors due to association name vs table name mismatch, e.g. querying on a singular association name while the actual join table is plural, or vice-versa due to a prior scope.\r\n\r\nMore detailed reproduction script:  https://gist.github.com/ezekg/5969735eb8c5092fb25198bd8fac4053\r\n\r\n#### Before\r\n\r\n```rb\r\nscope = Comment.where(post: { id: post })\r\nscope.references_values # => [\"post\"]\r\n\r\nscope = Comment.where(post: post)\r\nscope.references_values # => []\r\n```\r\n\r\nI'd expect these to be synonymous since [`#id` is called on `post`](https://github.com/ezekg/rails/blob/c37450b76b24cac7951032c4210db17a9c1b7f51/activerecord/lib/active_record/relation/predicate_builder.rb#L58) for the second case.\r\n\r\n#### After\r\n\r\n```rb\r\nscope = Comment.where(post: { id: post })\r\nscope.references_values # => [\"post\"]\r\n\r\nscope = Comment.where(post: post)\r\nscope.references_values # => [\"post\"]\r\n```\r\n\r\nWith this patch, they're now more or less synonymous, both setting `references_values`.\r\n\r\nSince this is likely a breaking change (it broke a few tests in [keygen-sh/keygen-api](https://github.com/keygen-sh/keygen-api) when testing against the patch), this may require some more thought. But it is worth noting that all broken tests were related to various workarounds for this particular bug.\r\n\r\nLet me know what you guys think is the best course of action here.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50828",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50828/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50828/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50828/events",
        "html_url": "https://github.com/rails/rails/pull/50828",
        "id": 2092434369,
        "node_id": "PR_kwDNIULOZKUcQg",
        "number": 50828,
        "title": "Add examples for form helper tags [ci skip]",
        "user": {
            "login": "akhilgkrishnan",
            "id": 22231095,
            "node_id": "MDQ6VXNlcjIyMjMxMDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22231095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akhilgkrishnan",
            "html_url": "https://github.com/akhilgkrishnan",
            "followers_url": "https://api.github.com/users/akhilgkrishnan/followers",
            "following_url": "https://api.github.com/users/akhilgkrishnan/following{/other_user}",
            "gists_url": "https://api.github.com/users/akhilgkrishnan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akhilgkrishnan/subscriptions",
            "organizations_url": "https://api.github.com/users/akhilgkrishnan/orgs",
            "repos_url": "https://api.github.com/users/akhilgkrishnan/repos",
            "events_url": "https://api.github.com/users/akhilgkrishnan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akhilgkrishnan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-21T05:48:04Z",
        "updated_at": "2024-02-01T04:02:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50828",
            "html_url": "https://github.com/rails/rails/pull/50828",
            "diff_url": "https://github.com/rails/rails/pull/50828.diff",
            "patch_url": "https://github.com/rails/rails/pull/50828.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nThis Pull Request add examples for `FormTagHelper` methods.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50828/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50827",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50827/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50827/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50827/events",
        "html_url": "https://github.com/rails/rails/issues/50827",
        "id": 2092292151,
        "node_id": "I_kwDNIULOfLXYNw",
        "number": 50827,
        "title": "System tests not working on Rails 7.1.3 running on a remote machine/docker container.",
        "user": {
            "login": "srabuini",
            "id": 286604,
            "node_id": "MDQ6VXNlcjI4NjYwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/286604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srabuini",
            "html_url": "https://github.com/srabuini",
            "followers_url": "https://api.github.com/users/srabuini/followers",
            "following_url": "https://api.github.com/users/srabuini/following{/other_user}",
            "gists_url": "https://api.github.com/users/srabuini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srabuini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srabuini/subscriptions",
            "organizations_url": "https://api.github.com/users/srabuini/orgs",
            "repos_url": "https://api.github.com/users/srabuini/repos",
            "events_url": "https://api.github.com/users/srabuini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srabuini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-21T00:44:06Z",
        "updated_at": "2024-01-30T12:48:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nI've been running my system tests using a remote browser (on a docker container) since Rails 7.0 without a problem, with the following set up.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nclass ApplicationSystemTestCase < ActionDispatch::SystemTestCase\r\n  driven_by :selenium,\r\n            using: :chrome,\r\n            screen_size: [1400, 1400],\r\n            options: { browser: :remote,\r\n                       url: 'http://chrome-server:4444' } do |driver_option|\r\n    driver_option.add_argument 'disable-dev-shm-usage'\r\n  end\r\n```\r\n\r\nIt looks like the problem was introduced in #49908 and related issues/fixes.\r\n\r\nI fixed it locally just monkeypatching `Selenium::Webdriver::DriverFinder.path` just to return nil.\r\n\r\nHaving a look at the code, I think that it would be nice to avoid `Browser#preload` when browser is `:remote` in:\r\n\r\nhttps://github.com/rails/rails/blob/3064d4f53a48beb107a549a2249820350e698050/actionpack/lib/action_dispatch/system_testing/driver.rb#L19\r\n\r\nIf you think it's the right way to tackle it, I could post a fix.\r\n\r\n### Actual behavior\r\nAfter a while, an exception is raised:\r\n\r\n```\r\nSelenium::WebDriver::Error::SessionNotCreatedError: Could not start a new session. Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: unknown error: no chrome binary at /root/.cache/selenium/chrome/linux64/120.0.6099.109/chrome \r\nHost info: host: 'c3260b1b08ce', ip: '192.168.16.3'\r\nBuild info: version: '4.10.0', revision: 'c14d967899'\r\nSystem info: os.name: 'Linux', os.arch: 'aarch64', os.version: '6.5.11-linuxkit', java.version: '11.0.18'\r\nDriver info: driver.version: unknown\r\nBuild info: version: '4.10.0', revision: 'c14d967899'\r\nSystem info: os.name: 'Linux', os.arch: 'aarch64', os.version: '6.5.11-linuxkit', java.version: '11.0.18'\r\nDriver info: driver.version: unknown\r\n    [remote server] org.openqa.selenium.grid.node.config.DriverServiceSessionFactory(DriverServiceSessionFactory.java):210:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.config.DriverServiceSessionFactory(DriverServiceSessionFactory.java):69:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.local.SessionSlot(SessionSlot.java):147:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.local.LocalNode(LocalNode.java):467:in `newSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor(LocalDistributor.java):643:in `startSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor(LocalDistributor.java):560:in `newSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable(LocalDistributor.java):814:in `handleNewSessionRequest'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable(LocalDistributor.java):773:in `lambda$run$1'\r\n    [remote server] java.util.concurrent.ThreadPoolExecutor(ThreadPoolExecutor.java):1128:in `runWorker'\r\n    [remote server] java.util.concurrent.ThreadPoolExecutor$Worker(ThreadPoolExecutor.java):628:in `run'\r\n    [remote server] java.lang.Thread(Thread.java):829:in `run'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:55:in `assert_ok'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:34:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `create_response'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/default.rb:103:in `request'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:601:in `execute'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:53:in `create_session'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:317:in `block in create_bridge'\r\n    <internal:kernel>:90:in `tap'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:316:in `create_bridge'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:74:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/driver.rb:38:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:57:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:57:in `for'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver.rb:89:in `for'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/selenium/driver.rb:83:in `browser'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:55:in `block in register_selenium'\r\n    <internal:kernel>:90:in `tap'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:54:in `register_selenium'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:41:in `block in register'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/session.rb:105:in `driver'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/session.rb:91:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:421:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:421:in `block in session_pool'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:317:in `current_session'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/dsl.rb:46:in `page'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:106:in `save_image'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:36:in `take_screenshot'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:47:in `take_failed_screenshot'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/setup_and_teardown.rb:8:in `before_teardown'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.1..3\r\n\r\n**Ruby version**: 3.2.2 (2023-03-30 revision e51014f9c0) [aarch64-linux]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50826",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50826/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50826/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50826/events",
        "html_url": "https://github.com/rails/rails/pull/50826",
        "id": 2092286908,
        "node_id": "PR_kwDNIULOZKMR9Q",
        "number": 50826,
        "title": "[docs] Add more examples to `#in_order_of` [ci-skip]",
        "user": {
            "login": "thdaraujo",
            "id": 707418,
            "node_id": "MDQ6VXNlcjcwNzQxOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thdaraujo",
            "html_url": "https://github.com/thdaraujo",
            "followers_url": "https://api.github.com/users/thdaraujo/followers",
            "following_url": "https://api.github.com/users/thdaraujo/following{/other_user}",
            "gists_url": "https://api.github.com/users/thdaraujo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thdaraujo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thdaraujo/subscriptions",
            "organizations_url": "https://api.github.com/users/thdaraujo/orgs",
            "repos_url": "https://api.github.com/users/thdaraujo/repos",
            "events_url": "https://api.github.com/users/thdaraujo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thdaraujo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-21T00:21:26Z",
        "updated_at": "2024-01-31T16:16:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50826",
            "html_url": "https://github.com/rails/rails/pull/50826",
            "diff_url": "https://github.com/rails/rails/pull/50826.diff",
            "patch_url": "https://github.com/rails/rails/pull/50826.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n`#in_order_of` is an excellent method and makes ordering enum columns easier, and many complex order case/when queries can be refactored to use it.\r\n\r\nThis PR was created because I believe having more examples would help people understand this method a bit better.\r\n\r\nAlso, I think it's useful to document that this method will order results, but also FILTER them, excluding rows in which the column doesn't match any of the given values.\r\n\r\nSo I expanded the description and added these examples:\r\n- what happens when dealing with `enum` +columns+\r\n- what happens when passing `nil` as a +value+ for nullable columns\r\n\r\nHere's a gist with some tests: https://gist.github.com/thdaraujo/7d9aa5ffd1b61bf57604ded14535e357\r\n\r\nI'd be happy to add other examples for other usecases you think are relevant, just let me know!\r\n\r\n### Detail\r\n\r\nThis Pull Request expands the documentation for [in_order_of](https://api.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-in_order_of)\r\n\r\n### Additional information\r\n\r\nn/a\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* ~[ ] Tests are added or updated if you fix a bug or add a feature.~ not applicable\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50826/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50823",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50823/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50823/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50823/events",
        "html_url": "https://github.com/rails/rails/pull/50823",
        "id": 2092154145,
        "node_id": "PR_kwDNIULOZKF0tA",
        "number": 50823,
        "title": "Add methods to `ActiveRecord::Relation::FinderMethods` to determine if it contains exactly/more than/less than N records",
        "user": {
            "login": "jordinl",
            "id": 16135423,
            "node_id": "MDQ6VXNlcjE2MTM1NDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16135423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordinl",
            "html_url": "https://github.com/jordinl",
            "followers_url": "https://api.github.com/users/jordinl/followers",
            "following_url": "https://api.github.com/users/jordinl/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordinl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordinl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordinl/subscriptions",
            "organizations_url": "https://api.github.com/users/jordinl/orgs",
            "repos_url": "https://api.github.com/users/jordinl/repos",
            "events_url": "https://api.github.com/users/jordinl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordinl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2024-01-20T16:56:20Z",
        "updated_at": "2024-02-01T14:30:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50823",
            "html_url": "https://github.com/rails/rails/pull/50823",
            "diff_url": "https://github.com/rails/rails/pull/50823.diff",
            "patch_url": "https://github.com/rails/rails/pull/50823.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nI've had to check in a few places if a relation had exactly or less than or more than N records. On top of that, if the collection contains a lot of records, counting on the entire collection not only is slower but also unnecessary and limiting the count the first N or N+1 records is sufficient and faster.\r\n\r\n### Detail\r\n\r\nAdds the following methods to `ActiveRecord::Relation::FinderMethods`:\r\n  * `exactly?` returns true if the relation contains exactly N records, false otherwise.\r\n  * `at_least?` returns true if the relation contains at least N records, false otherwise.\r\n  * `at_most?` returns true if the relation contains at most N records, false otherwise.\r\n  * `less_than?` returns true if the relation contains less than N records, false otherwise.\r\n  * `more_than?` returns true if the relation contains more than N records, false otherwise.\r\n\r\nThese methods perform a `limit(M).count` (where M = N or N + 1) under the hood.\r\n\r\n### Additional information\r\n\r\nI think the naming of these methods is fine as is. Don't know if others would prefer to prefix these with `has_` or `contains_`, ie `has_exactly?` or `contains_exactly?`.\r\n\r\nWith regards to performance of doing the count with and without the limit. Without the limit when there are 8M records I get:\r\n\r\n```sql\r\n  Referral Count (135.2ms)  SELECT COUNT(*) FROM \"referrals\" WHERE \"referrals\".\"company_id\" = $1  [[\"company_id\", \"29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535\"]]\r\n=> 8467786\r\n```\r\n\r\nWith a limit of a 100:\r\n\r\n```sql\r\n  Referral Count (0.4ms)  SELECT COUNT(*) FROM (SELECT 1 AS one FROM \"referrals\" WHERE \"referrals\".\"company_id\" = $1 LIMIT $2) subquery_for_count  [[\"company_id\",\"29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535\", [\"LIMIT\", 100]]\r\n=> 100\r\n```\r\n\r\nSo it's 300x faster even when doing an index only scan:\r\n\r\n```sql\r\nexplain SELECT COUNT(*) FROM \"referrals\" WHERE \"referrals\".\"company_id\" ='29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535';\r\n\r\n                                                                          QUERY PLAN                                                                           \r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n Finalize Aggregate  (cost=136744.58..136744.59 rows=1 width=8)\r\n   ->  Gather  (cost=136744.36..136744.57 rows=2 width=8)\r\n         Workers Planned: 2\r\n         ->  Partial Aggregate  (cost=135744.36..135744.37 rows=1 width=8)\r\n               ->  Parallel Index Only Scan using index_referrals_on_company_id_and_conversion_state on referrals  (cost=0.56..127008.31 rows=3494420 width=0)\r\n                     Index Cond: (company_id = '29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535'::uuid)\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50823/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50820",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50820/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50820/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50820/events",
        "html_url": "https://github.com/rails/rails/pull/50820",
        "id": 2091981384,
        "node_id": "PR_kwDNIULOZJ9GIg",
        "number": 50820,
        "title": "docs: Update validation status based on autosave status",
        "user": {
            "login": "MONSURU-rgb",
            "id": 78952006,
            "node_id": "MDQ6VXNlcjc4OTUyMDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78952006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MONSURU-rgb",
            "html_url": "https://github.com/MONSURU-rgb",
            "followers_url": "https://api.github.com/users/MONSURU-rgb/followers",
            "following_url": "https://api.github.com/users/MONSURU-rgb/following{/other_user}",
            "gists_url": "https://api.github.com/users/MONSURU-rgb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MONSURU-rgb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MONSURU-rgb/subscriptions",
            "organizations_url": "https://api.github.com/users/MONSURU-rgb/orgs",
            "repos_url": "https://api.github.com/users/MONSURU-rgb/repos",
            "events_url": "https://api.github.com/users/MONSURU-rgb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MONSURU-rgb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-20T09:24:46Z",
        "updated_at": "2024-01-22T07:16:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50820",
            "html_url": "https://github.com/rails/rails/pull/50820",
            "diff_url": "https://github.com/rails/rails/pull/50820.diff",
            "patch_url": "https://github.com/rails/rails/pull/50820.patch",
            "merged_at": null
        },
        "body": "This Pull Request has been created to enlighten users that validations are enabled by default when autosave is True for the  `has_one` and `belongs_to`.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50815",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50815/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50815/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50815/events",
        "html_url": "https://github.com/rails/rails/pull/50815",
        "id": 2091630145,
        "node_id": "PR_kwDNIULOZJpzBQ",
        "number": 50815,
        "title": "Add format constraints for generated pwa routes",
        "user": {
            "login": "rossta",
            "id": 11673,
            "node_id": "MDQ6VXNlcjExNjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11673?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rossta",
            "html_url": "https://github.com/rossta",
            "followers_url": "https://api.github.com/users/rossta/followers",
            "following_url": "https://api.github.com/users/rossta/following{/other_user}",
            "gists_url": "https://api.github.com/users/rossta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rossta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rossta/subscriptions",
            "organizations_url": "https://api.github.com/users/rossta/orgs",
            "repos_url": "https://api.github.com/users/rossta/repos",
            "events_url": "https://api.github.com/users/rossta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rossta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T23:10:41Z",
        "updated_at": "2024-01-22T12:00:23Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50815",
            "html_url": "https://github.com/rails/rails/pull/50815",
            "diff_url": "https://github.com/rails/rails/pull/50815.diff",
            "patch_url": "https://github.com/rails/rails/pull/50815.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAs a followup to #50528, which added default pwa manifest and service worker routes and files to the new app generator, I'd like to associate the new routes with the expected mime types.\r\n\r\n### Detail\r\n\r\nWe expect the `pwa#manifest` request to be limited to json, i.e. `manifest.json` and we expect the `pwa#service_worker` request to be limited to js, i.e. `service-worker.js`. This change adds format constraints to the generated routes.\r\n\r\n### Additional information\r\n\r\nI didn't see associated tests with the previous change but would be open to adding some if desired.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50812",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50812/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50812/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50812/events",
        "html_url": "https://github.com/rails/rails/issues/50812",
        "id": 2091410608,
        "node_id": "I_kwDNIULOfKhksA",
        "number": 50812,
        "title": "Redundant JOIN produced when merging relations from STI classes",
        "user": {
            "login": "mintyfresh",
            "id": 7896757,
            "node_id": "MDQ6VXNlcjc4OTY3NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7896757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintyfresh",
            "html_url": "https://github.com/mintyfresh",
            "followers_url": "https://api.github.com/users/mintyfresh/followers",
            "following_url": "https://api.github.com/users/mintyfresh/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintyfresh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintyfresh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintyfresh/subscriptions",
            "organizations_url": "https://api.github.com/users/mintyfresh/orgs",
            "repos_url": "https://api.github.com/users/mintyfresh/repos",
            "events_url": "https://api.github.com/users/mintyfresh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintyfresh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-19T20:59:12Z",
        "updated_at": "2024-01-26T14:10:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nMerging relations with joins to the same association by different classes in an STI tree results in duplicated, redundant JOINs in the emitted SQL.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :type\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n    t.boolean :published\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n\r\n  scope :with_comments, -> { joins(:comments).where(comments: { published: true }) }\r\nend\r\n\r\nclass CustomPost < Post\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_merge_base_case\r\n    posts_with_comments1 = CustomPost.with_comments\r\n    posts_with_comments2 = CustomPost.with_comments\r\n\r\n    assert_equal [:comments], posts_with_comments1.joins_values\r\n    assert_equal [:comments], posts_with_comments2.joins_values\r\n\r\n    combined_scope = posts_with_comments1.merge(posts_with_comments2)\r\n\r\n    puts combined_scope.to_sql\r\n    assert_equal [:comments], combined_scope.joins_values\r\n  end\r\n\r\n  def test_merge_sti_case\r\n    posts_with_comments = Post.with_comments\r\n    custom_posts_with_comments = CustomPost.with_comments\r\n\r\n    assert_equal [:comments], posts_with_comments.joins_values\r\n    assert_equal [:comments], custom_posts_with_comments.joins_values\r\n\r\n    combined_scope = posts_with_comments.merge(custom_posts_with_comments)\r\n\r\n    puts combined_scope.to_sql\r\n    # FAILS! two joins are generated\r\n    assert_equal [:comments], combined_scope.joins_values\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nA query with a single join to the foreign table is produced\r\ne.g.\r\n```sql\r\nSELECT\r\n  \"posts\".*\r\nFROM\r\n  \"posts\"\r\n  INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\"\r\nWHERE\r\n  \"posts\".\"type\" = 'CustomPost'\r\n  AND \"comments\".\"published\" = 1\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nA query with two redundant joins to the foreign table is produced\r\n```sql\r\nSELECT\r\n  \"posts\".*\r\nFROM\r\n  \"posts\"\r\n  INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\"\r\n  INNER JOIN \"comments\" \"comments_posts\" ON \"comments_posts\".\"post_id\" = \"posts\".\"id\"\r\nWHERE\r\n  \"posts\".\"type\" = 'CustomPost'\r\n  AND \"comments\".\"published\" = 1\r\n```\r\nThis duplicated join is not referenced by the rest of the query in any way\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.1.0\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50811",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50811/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50811/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50811/events",
        "html_url": "https://github.com/rails/rails/pull/50811",
        "id": 2090495786,
        "node_id": "PR_kwDNIULOZItj4w",
        "number": 50811,
        "title": "Add multiple databases AR bug template [ci skip]",
        "user": {
            "login": "HeyNonster",
            "id": 47484308,
            "node_id": "MDQ6VXNlcjQ3NDg0MzA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47484308?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HeyNonster",
            "html_url": "https://github.com/HeyNonster",
            "followers_url": "https://api.github.com/users/HeyNonster/followers",
            "following_url": "https://api.github.com/users/HeyNonster/following{/other_user}",
            "gists_url": "https://api.github.com/users/HeyNonster/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HeyNonster/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HeyNonster/subscriptions",
            "organizations_url": "https://api.github.com/users/HeyNonster/orgs",
            "repos_url": "https://api.github.com/users/HeyNonster/repos",
            "events_url": "https://api.github.com/users/HeyNonster/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HeyNonster/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T12:54:28Z",
        "updated_at": "2024-01-19T12:58:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50811",
            "html_url": "https://github.com/rails/rails/pull/50811",
            "diff_url": "https://github.com/rails/rails/pull/50811.diff",
            "patch_url": "https://github.com/rails/rails/pull/50811.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because there are a few PRs we'd like to open that relate to the multiple database code in Rails but there was no existing template for a multiple database setup. \ud83d\ude42 \r\n\r\n### Detail\r\n\r\nThis commit adds a new bug report template that's based off of the existing [Active Record bug report\r\ntemplate](https://github.com/rails/rails/blob/main/guides/bug_report_templates/active_record.rb) but creates a multiple database setup.\r\n\r\nThe template creates an `UnshardedModel` abstract `ActiveRecord` model that connects to a single database (with a replica configured) and a `ShardedModel` abstract `ActiveRecord` model that has two shards configured, each with their own replica.\r\n\r\nEach sqlite3 in-memory database is separate because [opening multiple database connections each with the filename \":memory:\" will create independent in-memory databases](https://www.sqlite.org/inmemorydb.html).\r\n\r\nNote, that while replica databases are configured, sqlite3 does not support database replication and therefore records written to the writer databases will not auto-populate on the replica/reader databases. The replica configurations are included to allow for testing role switching, not for validating replication itself.\r\n\r\n### Additional information\r\n\r\nYou can test that the template works by running:\r\n\r\n `ruby guides/bug_report_templates/active_record_multiple_databases.rb` \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50807",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50807/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50807/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50807/events",
        "html_url": "https://github.com/rails/rails/issues/50807",
        "id": 2090245533,
        "node_id": "I_kwDNIULOfJadnQ",
        "number": 50807,
        "title": "Undocumented - validations enabled by autosave",
        "user": {
            "login": "semaperepelitsa",
            "id": 347921,
            "node_id": "MDQ6VXNlcjM0NzkyMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/347921?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semaperepelitsa",
            "html_url": "https://github.com/semaperepelitsa",
            "followers_url": "https://api.github.com/users/semaperepelitsa/followers",
            "following_url": "https://api.github.com/users/semaperepelitsa/following{/other_user}",
            "gists_url": "https://api.github.com/users/semaperepelitsa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semaperepelitsa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semaperepelitsa/subscriptions",
            "organizations_url": "https://api.github.com/users/semaperepelitsa/orgs",
            "repos_url": "https://api.github.com/users/semaperepelitsa/repos",
            "events_url": "https://api.github.com/users/semaperepelitsa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semaperepelitsa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T10:47:52Z",
        "updated_at": "2024-01-20T17:25:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Validations are enabled by default when autosave is true:\r\n\r\n    belongs_to :foo, autosave: true\r\n    has_one :foo, autosave: true\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/reflection.rb#L653-L658\r\n\r\nHowever, this is not documented in `has_one` or `belongs_to`:\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/associations.rb#L1660-L1669\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/associations.rb#L1830-L1840",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50807/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50793",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50793/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50793/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50793/events",
        "html_url": "https://github.com/rails/rails/pull/50793",
        "id": 2088694143,
        "node_id": "PR_kwDNIULOZHJaNQ",
        "number": 50793,
        "title": "PoC: Add an option to disable connection checkout caching",
        "user": {
            "login": "byroot",
            "id": 44640,
            "node_id": "MDQ6VXNlcjQ0NjQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/byroot",
            "html_url": "https://github.com/byroot",
            "followers_url": "https://api.github.com/users/byroot/followers",
            "following_url": "https://api.github.com/users/byroot/following{/other_user}",
            "gists_url": "https://api.github.com/users/byroot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/byroot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/byroot/subscriptions",
            "organizations_url": "https://api.github.com/users/byroot/orgs",
            "repos_url": "https://api.github.com/users/byroot/repos",
            "events_url": "https://api.github.com/users/byroot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/byroot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-18T16:54:17Z",
        "updated_at": "2024-01-19T22:11:55Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50793",
            "html_url": "https://github.com/rails/rails/pull/50793",
            "diff_url": "https://github.com/rails/rails/pull/50793.diff",
            "patch_url": "https://github.com/rails/rails/pull/50793.patch",
            "merged_at": null
        },
        "body": "### Context\r\n\r\nIn part for performance and simplicity reasons, and in part because of its historical lack of threading support, Active Record rely quite heavily on `ActiveRecord::Base.connection` checking out and holding a connection inside a thread of fiber local variable.\r\n\r\nConcretly, every request or job lazily checkout connections when it needs to perform a database operations, and then holds onto it until the request or job completes, at which point the `Executor` hook automatically check it back in the pool.\r\n\r\nFor the overwhelming majority of Rails application, which don't do enough IOs to benefit from more than a handful of threads, it's a perfectly adequate solution, as it pretty much remove connection management as a concern.\r\n\r\nHowever for applications that spent most of their time on IOs others than the database (e.g. 3rd party APIs), and would benefit from much higher levels of concurrency, this strategy is problematic because it requires about as many database connections as there is threads or fibers, even though most connections are idle but can't be used because they checked out of the pool and held by another thead or fiber.\r\n\r\n### Goal\r\n\r\nI believe the current model is still preferable for the vast majority of Rails users, and changing the way `ActiveRecord::Base.connection` behaves would break a ton of code anyway. So I believe it should remain the default.\r\n\r\nHowever I think we could support an alternative mode, in which `ActiveRecord::Base.connection` doesn't hold onto the connection until the end of the request cycle, but instead immediately check it back in, allowing it to be re-used immediately.\r\n\r\n### Implementation\r\n\r\nFirst, nothing changes unless you disable `ActiveRecord.cache_connection_checkout`.\r\n\r\nThen, since a lot of code in Rails itself, in third party libraries, and in private Rails applications do rely on `Model.connection.something()`, we must make it work without caching the connection.\r\n\r\nTo solve this, when caching is disabled, `Model.connection` returns a proxy object, that delegates the methods it receive to a freshly checked out connection, and then check it back in. See `LazyConnectionProxy` in `connection_pool.rb` for the details.\r\n\r\nThat is the key to permitting this feature while retaining backward compatibility. It's not perfect, as code might assume that subsequent calls to `Model.connection` will return the same connection instance, but in most case it's not necessary.\r\n\r\nAlso, while the proxy holds the connection, it caches in on the thread or fiber, so subsequent calls to `Model.connection` will return the same connection until it's checked back in. This solves most of the statefulness issues, like opening a transaction etc, as long as the APIs are blocked based.\r\n\r\n### Status\r\n\r\nThis is a proof of concept, it's nowhere near ready to merge, it's mostly to explore whether it's doable with some work, or just not possible.\r\n\r\nMost of the Active Record test suite passes against Sqlite3, except for 3 tests that do disconnect and reconnect. In general all the tests had to be opted out of the feature, I still need to dig into why exactly.\r\n\r\nI also had to disable the feature for a few test suites that rely too much on the caching, and would need a bit of refactoring to pass without, but at first glance it doesn't look like a fundamental incompatibility.\r\n\r\n### Concerns\r\n\r\nThere is a number of Active Record methods that currently cause more than one checkout/checkin cycle and would benefit from a strategically placed `with_connection do` call to optimize that. But that is mostly a performance concern, not a fundamental incompatibility.\r\n\r\nOne more major concern is the query cache. As it stand it's pretty much useless when checkout caching is disabled, because when we check the connection back in, we have to clear the cache, so it's pretty much always empty. To make it usable again, we need a substantial refactoring. At first glance it looks possible, just not trivial.\r\n\r\n### Conclusion\r\n\r\nI'm a bit on the fence about this. I think we can make it work, but I already spent most of one day on just the proof of concept, and would need substantially more work to iron out all the issues.\r\n\r\nThe actual code changes needed in Active Record itself are relatively small, it's really all the test suite and 3rd party code that would need to be updated to properly work with this option that is the big can of worm I'm worried about.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50793/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50792",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50792/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50792/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50792/events",
        "html_url": "https://github.com/rails/rails/issues/50792",
        "id": 2088620752,
        "node_id": "I_kwDNIULOfH3S0A",
        "number": 50792,
        "title": "`app:update` from Rails 7.1.2 to 7.1.3 creates `new_framework_defaults_7_1.rb`",
        "user": {
            "login": "GitToTheHub",
            "id": 13721821,
            "node_id": "MDQ6VXNlcjEzNzIxODIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13721821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GitToTheHub",
            "html_url": "https://github.com/GitToTheHub",
            "followers_url": "https://api.github.com/users/GitToTheHub/followers",
            "following_url": "https://api.github.com/users/GitToTheHub/following{/other_user}",
            "gists_url": "https://api.github.com/users/GitToTheHub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GitToTheHub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GitToTheHub/subscriptions",
            "organizations_url": "https://api.github.com/users/GitToTheHub/orgs",
            "repos_url": "https://api.github.com/users/GitToTheHub/repos",
            "events_url": "https://api.github.com/users/GitToTheHub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GitToTheHub/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-18T16:15:11Z",
        "updated_at": "2024-01-19T09:40:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI made an update from Rails 7.1.2 to 7.1.3 by changing the rails version number to 7.1.3 in the gemfile and running `bundle update`. After that i ran `rails app:update` which produced the file `config/initializers/new_framework_defaults_7_1.rb`. I already have `config.load_defaults 7.1` in my `config/application.rb`, so I think, this file shouldn't be generated?\r\n\r\n### Expected behavior\r\nThe file `config/initializers/new_framework_defaults_7_1.rb` should not be created, if `config.load_defaults 7.1` is already present in `config/application.rb`.\r\n\r\n### Actual behavior\r\nThe file `config/initializers/new_framework_defaults_7_1.rb` is created after  `rails app:update`, despite `config.load_defaults 7.1` is already present in `config/application.rb`.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x64-mingw-ucrt]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50785",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50785/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50785/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50785/events",
        "html_url": "https://github.com/rails/rails/pull/50785",
        "id": 2087298785,
        "node_id": "PR_kwDNIULOZF9HWA",
        "number": 50785,
        "title": "Add note about `params` hash in Action Controller Overview [ci skip] ",
        "user": {
            "login": "JunichiIto",
            "id": 1148320,
            "node_id": "MDQ6VXNlcjExNDgzMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1148320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunichiIto",
            "html_url": "https://github.com/JunichiIto",
            "followers_url": "https://api.github.com/users/JunichiIto/followers",
            "following_url": "https://api.github.com/users/JunichiIto/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunichiIto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunichiIto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunichiIto/subscriptions",
            "organizations_url": "https://api.github.com/users/JunichiIto/orgs",
            "repos_url": "https://api.github.com/users/JunichiIto/repos",
            "events_url": "https://api.github.com/users/JunichiIto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunichiIto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-18T01:26:00Z",
        "updated_at": "2024-01-18T17:22:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50785",
            "html_url": "https://github.com/rails/rails/pull/50785",
            "diff_url": "https://github.com/rails/rails/pull/50785.diff",
            "patch_url": "https://github.com/rails/rails/pull/50785.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nNewbies tend to misunderstand `params` hash is a plain old Hash. So I added a note that `params` hash is ActionController::Parameters.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes \"4 Parameters\" in Action Controller Overview.\r\n\r\n![Screenshot 2024-01-18 at 10 31 55](https://github.com/rails/rails/assets/1148320/de0dc860-35d1-4d3b-b209-ab4abbac5a17)\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50785/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50785/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50780",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50780/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50780/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50780/events",
        "html_url": "https://github.com/rails/rails/pull/50780",
        "id": 2086045509,
        "node_id": "PR_kwDNIULOZE41OQ",
        "number": 50780,
        "title": "Preserve `--asset-pipeline propshaft` when running `app:update`",
        "user": {
            "login": "zachasme",
            "id": 986290,
            "node_id": "MDQ6VXNlcjk4NjI5MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/986290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zachasme",
            "html_url": "https://github.com/zachasme",
            "followers_url": "https://api.github.com/users/zachasme/followers",
            "following_url": "https://api.github.com/users/zachasme/following{/other_user}",
            "gists_url": "https://api.github.com/users/zachasme/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zachasme/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zachasme/subscriptions",
            "organizations_url": "https://api.github.com/users/zachasme/orgs",
            "repos_url": "https://api.github.com/users/zachasme/repos",
            "events_url": "https://api.github.com/users/zachasme/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zachasme/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-17T12:02:43Z",
        "updated_at": "2024-01-28T20:30:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50780",
            "html_url": "https://github.com/rails/rails/pull/50780",
            "diff_url": "https://github.com/rails/rails/pull/50780.diff",
            "patch_url": "https://github.com/rails/rails/pull/50780.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because `skip_sprockets?` wasn't being preserved when running `app:update` in a project using `propshaft`. Helpful when #50444 lands.\r\n\r\n### Detail\r\n\r\nThis Pull Request sets `options[:asset_pipeline]` in `AppUpdater` based on whether Sprockets/Propshaft Railtie is defined.\r\n\r\nWithout this change, `app:update` will suggest injecting sprocket configuration in a propshaft project.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50780/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50772",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50772/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50772/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50772/events",
        "html_url": "https://github.com/rails/rails/issues/50772",
        "id": 2084942985,
        "node_id": "I_kwDNIULOfEW0iQ",
        "number": 50772,
        "title": "Tests can't run without yarn",
        "user": {
            "login": "arusa",
            "id": 623008,
            "node_id": "MDQ6VXNlcjYyMzAwOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/623008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arusa",
            "html_url": "https://github.com/arusa",
            "followers_url": "https://api.github.com/users/arusa/followers",
            "following_url": "https://api.github.com/users/arusa/following{/other_user}",
            "gists_url": "https://api.github.com/users/arusa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arusa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arusa/subscriptions",
            "organizations_url": "https://api.github.com/users/arusa/orgs",
            "repos_url": "https://api.github.com/users/arusa/repos",
            "events_url": "https://api.github.com/users/arusa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arusa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-16T21:11:58Z",
        "updated_at": "2024-01-29T19:27:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n1. Create a new rails app that uses yarn\r\n2. `docker build -t testimage:1 .`\r\n3. `docker run -it testimage:1 /bin/bash`\r\n4. `bin/rails test`\r\n\r\n### Expected behavior\r\n\r\nAs the image already contains all precompiled assets I would expect the tests to be able to run successfully even without precompiling first.\r\n\r\n### Actual behavior\r\n\r\n`bin/rails test` now always runs `test:prepare`, which tries to compile the assets and therefore crashes, because the default Dockerfile doesn't keep yarn in the image.\r\n\r\nI want an option to skip running `test:prepare` when running tests.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.1.4",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50772/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50768",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50768/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50768/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50768/events",
        "html_url": "https://github.com/rails/rails/issues/50768",
        "id": 2084328879,
        "node_id": "I_kwDNIULOfDxVrw",
        "number": 50768,
        "title": "The `counter_cache_column?` method is depending of initialisation order.",
        "user": {
            "login": "BuonOmo",
            "id": 11378424,
            "node_id": "MDQ6VXNlcjExMzc4NDI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11378424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BuonOmo",
            "html_url": "https://github.com/BuonOmo",
            "followers_url": "https://api.github.com/users/BuonOmo/followers",
            "following_url": "https://api.github.com/users/BuonOmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/BuonOmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BuonOmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BuonOmo/subscriptions",
            "organizations_url": "https://api.github.com/users/BuonOmo/orgs",
            "repos_url": "https://api.github.com/users/BuonOmo/repos",
            "events_url": "https://api.github.com/users/BuonOmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BuonOmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-16T15:54:58Z",
        "updated_at": "2024-01-20T17:21:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :people, force: true do |t|\r\n    t.integer :cars_count, default: 0\r\n  end\r\n\r\n  create_table :cars, force: true do |t|\r\n    t.belongs_to :person\r\n  end\r\nend\r\n\r\nclass Car < ActiveRecord::Base\r\n  belongs_to :person, counter_cache: true\r\nend\r\n\r\n# If the `Person` class was defined before, the test below would work\r\nclass Person < ActiveRecord::Base\r\n  has_many :cars\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_counter_cache_column?\r\n    assert Person.counter_cache_column?(\"cars_count\")\r\n    assert_not Car.counter_cache_column?(\"cars_count\")\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nthe `Person` class should identify clearly `cars_count` as a counter cache column\r\n\r\n### Actual behavior\r\n\r\nSince `Person` is initialized afterwards, when running `belong_to`, the `cars_count` column is not added to its counter_cache\r\n\r\n### System configuration\r\n**Rails version**: found in `7.1.2`, present in edge as well\r\n\r\n**Ruby version**: 3.2.1\r\n\r\n### Notes\r\n\r\nIn the actual ActiveRecord test suite, this test could fall if in the future a file requiring first `models/car` is loaded before the `counter_cache_test` file.\r\n\r\nAlso I'd be so glad to work on the solution. It seems to me that the issue is that [this expression](https://github.com/rails/rails/blob/0656787be644d7d5550e82450153403853c73014/activerecord/lib/active_record/associations/builder/belongs_to.rb#L39C5-L39C5) can return `nil`. I'm just not sure how it should be solved (by raising, autoloading, warning, ...)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50768/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50763",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50763/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50763/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50763/events",
        "html_url": "https://github.com/rails/rails/pull/50763",
        "id": 2082801297,
        "node_id": "PR_kwDNIULOZCHHNg",
        "number": 50763,
        "title": "Allow custom domain extractor class on ActionDispatch::Http::URL",
        "user": {
            "login": "rainerborene",
            "id": 101501,
            "node_id": "MDQ6VXNlcjEwMTUwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/101501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainerborene",
            "html_url": "https://github.com/rainerborene",
            "followers_url": "https://api.github.com/users/rainerborene/followers",
            "following_url": "https://api.github.com/users/rainerborene/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainerborene/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainerborene/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainerborene/subscriptions",
            "organizations_url": "https://api.github.com/users/rainerborene/orgs",
            "repos_url": "https://api.github.com/users/rainerborene/repos",
            "events_url": "https://api.github.com/users/rainerborene/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainerborene/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-15T23:32:04Z",
        "updated_at": "2024-01-18T20:47:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50763",
            "html_url": "https://github.com/rails/rails/pull/50763",
            "diff_url": "https://github.com/rails/rails/pull/50763.diff",
            "patch_url": "https://github.com/rails/rails/pull/50763.patch",
            "merged_at": null
        },
        "body": "In these last years we have been using a monkey patch at our company that smartly detects domain and subdomains according to the [Public Suffix database](https://publicsuffix.org/). There are a few gems in our ecosystems like [public_suffix](https://github.com/weppos/publicsuffix-ruby) and [mini_suffix](https://github.com/discourse/mini_suffix) that does exactly that. But Rails uses an older and primitive method that splits the domain tld using `config.action_dispatch.tld_length` option. This pull request changes that by allowing developers to specify a custom domain extractor class.\r\n\r\nThis is really useful for any SaaS company that offers custom domain and subdomains.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50763/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50761",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50761/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50761/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50761/events",
        "html_url": "https://github.com/rails/rails/pull/50761",
        "id": 2082689851,
        "node_id": "PR_kwDNIULOZCBEaQ",
        "number": 50761,
        "title": "Improve documentation of ActiveRecord::Core.configurations",
        "user": {
            "login": "p8",
            "id": 28561,
            "node_id": "MDQ6VXNlcjI4NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p8",
            "html_url": "https://github.com/p8",
            "followers_url": "https://api.github.com/users/p8/followers",
            "following_url": "https://api.github.com/users/p8/following{/other_user}",
            "gists_url": "https://api.github.com/users/p8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/p8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/p8/subscriptions",
            "organizations_url": "https://api.github.com/users/p8/orgs",
            "repos_url": "https://api.github.com/users/p8/repos",
            "events_url": "https://api.github.com/users/p8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/p8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-15T21:18:15Z",
        "updated_at": "2024-01-16T12:15:00Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50761",
            "html_url": "https://github.com/rails/rails/pull/50761",
            "diff_url": "https://github.com/rails/rails/pull/50761.diff",
            "patch_url": "https://github.com/rails/rails/pull/50761.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThe documenation of `ActiveRecord::Core.configurations=` [reads](https://edgeapi.rubyonrails.org/classes/ActiveRecord/Core.html#method-c-configurations-3D) like the documentation for the getter instead of the setter.\r\nIt should not describe what is returned, but what arguments are expected.\r\n\r\nThis changes moves the documentation of the setter to the getter and adds a new comment to the setter.\r\n\r\nThis commit has 2 separate commits to make sure the diffs only apply to documentation and not the code.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50761/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50759",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50759/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50759/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50759/events",
        "html_url": "https://github.com/rails/rails/issues/50759",
        "id": 2082675602,
        "node_id": "I_kwDNIULOfCMbkg",
        "number": 50759,
        "title": "Migrate Rails API doc to use Markdown instead of RDoc format",
        "user": {
            "login": "rafaelfranca",
            "id": 47848,
            "node_id": "MDQ6VXNlcjQ3ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rafaelfranca",
            "html_url": "https://github.com/rafaelfranca",
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/87",
            "html_url": "https://github.com/rails/rails/milestone/87",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/87/labels",
            "id": 10350173,
            "node_id": "MI_kwDNIULOAJ3uXQ",
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "node_id": "MDQ6VXNlcjI3NDE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2741?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dhh",
                "html_url": "https://github.com/dhh",
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "gists_url": "https://api.github.com/users/dhh/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "events_url": "https://api.github.com/users/dhh/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 16,
            "closed_issues": 9,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-01-15T21:02:57Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-15T21:02:56Z",
        "updated_at": "2024-01-15T21:02:57Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "### NOTE: We aren't going to accept any PR doing this migration\r\n\r\nFrom time to time, we have to remember that while documenting some method on Rails, using `+foo+` to denote a method name or argument sometimes need to change to be `<tt>foo</tt>` in order to be documented. We also sometimes receive PRs with people accidentally introducing backticks that doesn't have any effect in the documentation.\r\n\r\nOur guides also uses Markdown syntax, so contributors need to know they need to change syntax when writting documentation.\r\n\r\nText editors, like VScode don't know how to highlight RDoc code so often see Rails documentation formatted like this when you hover over a class\r\n\r\n<img width=\"802\" alt=\"Screenshot 2024-01-15 at 4 01 03\u202fPM\" src=\"https://github.com/rails/rails/assets/47848/2e31157d-dd86-487d-83d6-c34e4c013151\">\r\n<img width=\"810\" alt=\"Screenshot 2024-01-15 at 4 02 00\u202fPM\" src=\"https://github.com/rails/rails/assets/47848/435e899b-8cfc-4bf4-9b8c-dfd7383fd867\">\r\n\r\nNowadays, RDoc supports Markdown as syntax. So we can avoid all those problems migrating all our API documentation to use Markdown.\r\n\r\n### NOTE: We aren't going to accept any PR doing this migration",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50759/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 6,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50759/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50755",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50755/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50755/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50755/events",
        "html_url": "https://github.com/rails/rails/issues/50755",
        "id": 2081488829,
        "node_id": "I_kwDNIULOfBD_vQ",
        "number": 50755,
        "title": "Action Mailbox mistakes attachment as body if no body exists",
        "user": {
            "login": "HashNotAdam",
            "id": 902714,
            "node_id": "MDQ6VXNlcjkwMjcxNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/902714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashNotAdam",
            "html_url": "https://github.com/HashNotAdam",
            "followers_url": "https://api.github.com/users/HashNotAdam/followers",
            "following_url": "https://api.github.com/users/HashNotAdam/following{/other_user}",
            "gists_url": "https://api.github.com/users/HashNotAdam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HashNotAdam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HashNotAdam/subscriptions",
            "organizations_url": "https://api.github.com/users/HashNotAdam/orgs",
            "repos_url": "https://api.github.com/users/HashNotAdam/repos",
            "events_url": "https://api.github.com/users/HashNotAdam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HashNotAdam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1174770998,
                "node_id": "MDU6TGFiZWwxMTc0NzcwOTk4",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailbox",
                "name": "actionmailbox",
                "color": "f4a6cb",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-15T08:23:19Z",
        "updated_at": "2024-01-17T18:28:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have set up a mailbox to process DMARC reports. This has been working fine in most cases, but it seems that sometimes Google doesn't include body text in the email\u2014only a zipped XML file as an attachment.\r\n\r\nWhen this happens, Action Mailbox decodes the Base64 encoding of the attachment and assigns the string representation of the binary data to the body of the message without adding the file as an attachment. I have noticed that the email also isn't recognised as being multipart.\r\n\r\n### Steps to reproduce\r\n\r\nI've created [a gist which includes the unedited email source](https://gist.github.com/HashNotAdam/f5d08e370e70e9e39105fa765563c5b3) as copied from the EML file stored by Active Storage\r\n\r\n### Expected behavior\r\nThe body of the message should include the Base64 encoding of the attachment and there should be 1 attachment representing a ZIP file\r\n\r\n### Actual behavior\r\nCalling `body.to_s` on the underlying `Mail::Message` will return a string representation of the binary data which can be unzipped to return the XML. If the EML file were to be opened in an email client, this would be presented as an attachment\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50755/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50754",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50754/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50754/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50754/events",
        "html_url": "https://github.com/rails/rails/pull/50754",
        "id": 2081074654,
        "node_id": "PR_kwDNIULOZAp6FQ",
        "number": 50754,
        "title": "Allow named variants to evaluate dynamic transformation options",
        "user": {
            "login": "xjunior",
            "id": 8156,
            "node_id": "MDQ6VXNlcjgxNTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xjunior",
            "html_url": "https://github.com/xjunior",
            "followers_url": "https://api.github.com/users/xjunior/followers",
            "following_url": "https://api.github.com/users/xjunior/following{/other_user}",
            "gists_url": "https://api.github.com/users/xjunior/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xjunior/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xjunior/subscriptions",
            "organizations_url": "https://api.github.com/users/xjunior/orgs",
            "repos_url": "https://api.github.com/users/xjunior/repos",
            "events_url": "https://api.github.com/users/xjunior/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xjunior/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-15T01:18:24Z",
        "updated_at": "2024-01-18T00:07:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50754",
            "html_url": "https://github.com/rails/rails/pull/50754",
            "diff_url": "https://github.com/rails/rails/pull/50754.diff",
            "patch_url": "https://github.com/rails/rails/pull/50754.patch",
            "merged_at": null
        },
        "body": "<!--\nThanks for contributing to Rails!\n\nPlease do not make *Draft* pull requests, as they still send\nnotifications to everyone watching the Rails repo.\n\nCreate a pull request when it is ready for review and feedback\nfrom the Rails team :).\n\nIf your pull request affects documentation or any non-code\nchanges, guidelines for those changes are [available\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\n\nAbout this template\n\nThe following template aims to help contributors write a good description for their pull requests.\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\n\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\n\n### Motivation / Background\n\n<!--\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\n-->\n\nSometimes you want to build a transformation based on the user input, or information persisted in the database (i.e.: add a watermark to a picture, crop based on user input)\n\n### Detail\n\nThis PR allow the transformations to be built based on user input:\n\n```ruby\nclass User < ApplicationRecord\n  has_one_attached :photo do |attachable|\n    attachable.variant :default, crop: :crop_positions\n    attachable.variant :thumb, crop: :crop_positions,\n                               resize_to_limit: [100, 100]\n  end\n\n  def crop_positions\n    [crop_x1, crop_y1, crop_x2, crop_y2]\n  end\nend\n```\n\n### Checklist\n\nBefore submitting the PR make sure the following are checked:\n\n- [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\n- [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\n- [x] Tests are added or updated if you fix a bug or add a feature.\n- [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50754/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50754/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50744",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50744/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50744/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50744/events",
        "html_url": "https://github.com/rails/rails/pull/50744",
        "id": 2080405528,
        "node_id": "PR_kwDNIULOZAH76A",
        "number": 50744,
        "title": "docs: Update FormHelper comments to use `form_with` instead of `form_for` [ci skip]",
        "user": {
            "login": "takatea",
            "id": 39912547,
            "node_id": "MDQ6VXNlcjM5OTEyNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39912547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/takatea",
            "html_url": "https://github.com/takatea",
            "followers_url": "https://api.github.com/users/takatea/followers",
            "following_url": "https://api.github.com/users/takatea/following{/other_user}",
            "gists_url": "https://api.github.com/users/takatea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/takatea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/takatea/subscriptions",
            "organizations_url": "https://api.github.com/users/takatea/orgs",
            "repos_url": "https://api.github.com/users/takatea/repos",
            "events_url": "https://api.github.com/users/takatea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/takatea/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-13T17:32:39Z",
        "updated_at": "2024-01-13T17:32:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50744",
            "html_url": "https://github.com/rails/rails/pull/50744",
            "diff_url": "https://github.com/rails/rails/pull/50744.diff",
            "patch_url": "https://github.com/rails/rails/pull/50744.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because comments in `ActionView::Helpers::FormHelper` refer to the deprecated `form_for` instead of the recommended `form_with`. This could potentially cause confusion for developers consulting the Rails API documentation, such as [Action View Form Builder page](https://api.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html).\r\n\r\n### Detail\r\n\r\nThis Pull Request changes  the comments in `ActionView::Helpers::FormHelper`, replacing instances of `form_for` with `form_with`.\r\n\r\n### Additional information\r\n\r\nThe Rails guide has already documented the usage of `form_with` on the [form_helpers page](https://guides.rubyonrails.org/form_helpers.html).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50744/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50734",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50734/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50734/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50734/events",
        "html_url": "https://github.com/rails/rails/pull/50734",
        "id": 2079487889,
        "node_id": "PR_kwDNIULOY_XCHQ",
        "number": 50734,
        "title": "docs: Adjust composite primary keys documentation [skip ci]",
        "user": {
            "login": "matsales28",
            "id": 54689845,
            "node_id": "MDQ6VXNlcjU0Njg5ODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/54689845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matsales28",
            "html_url": "https://github.com/matsales28",
            "followers_url": "https://api.github.com/users/matsales28/followers",
            "following_url": "https://api.github.com/users/matsales28/following{/other_user}",
            "gists_url": "https://api.github.com/users/matsales28/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matsales28/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matsales28/subscriptions",
            "organizations_url": "https://api.github.com/users/matsales28/orgs",
            "repos_url": "https://api.github.com/users/matsales28/repos",
            "events_url": "https://api.github.com/users/matsales28/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matsales28/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T18:49:57Z",
        "updated_at": "2024-01-17T18:36:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50734",
            "html_url": "https://github.com/rails/rails/pull/50734",
            "diff_url": "https://github.com/rails/rails/pull/50734.diff",
            "patch_url": "https://github.com/rails/rails/pull/50734.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because the documentation for composite primary keys wasn't correct. \r\n\r\n### Detail\r\n\r\nWhile working on `shoulda-matchers` I noticed that the documentation is not correct. We actually need to declare the `query_constraints` option in the `has_many` association using the same attribute name as the ones in the associated object.\r\n\r\n```ruby\r\nclass Author < ApplicationRecord\r\n  self.primary_key = [:first_name, :last_name]\r\n  # This was incorrect as `first_name` and `last_name` don't exist on the `Book` model.\r\n  has_many :books, query_constraints: [:first_name, :last_name] \r\n  \r\n  # Correct way\r\n  has_many :books, query_constraints: [:author_first_name, :author_last_name]\r\nend\r\n\r\nclass Book < ApplicationRecord\r\n  belongs_to :author, query_constraints: [:author_first_name, :author_last_name]\r\nend\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50734/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50731",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50731/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50731/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50731/events",
        "html_url": "https://github.com/rails/rails/pull/50731",
        "id": 2079331695,
        "node_id": "PR_kwDNIULOY_OS5w",
        "number": 50731,
        "title": "Document passing hash as id option on create_table",
        "user": {
            "login": "javierav",
            "id": 99700,
            "node_id": "MDQ6VXNlcjk5NzAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/99700?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/javierav",
            "html_url": "https://github.com/javierav",
            "followers_url": "https://api.github.com/users/javierav/followers",
            "following_url": "https://api.github.com/users/javierav/following{/other_user}",
            "gists_url": "https://api.github.com/users/javierav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/javierav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/javierav/subscriptions",
            "organizations_url": "https://api.github.com/users/javierav/orgs",
            "repos_url": "https://api.github.com/users/javierav/repos",
            "events_url": "https://api.github.com/users/javierav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/javierav/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T17:21:32Z",
        "updated_at": "2024-01-12T17:21:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50731",
            "html_url": "https://github.com/rails/rails/pull/50731",
            "diff_url": "https://github.com/rails/rails/pull/50731.diff",
            "patch_url": "https://github.com/rails/rails/pull/50731.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThe `id` keyword argument passed to [create_table](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_table) method allow to receive a hash with options for column creation but it's not documented.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50731/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50727",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50727/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50727/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50727/events",
        "html_url": "https://github.com/rails/rails/pull/50727",
        "id": 2078984168,
        "node_id": "PR_kwDNIULOY-65Mw",
        "number": 50727,
        "title": "Action View Tests: Use `#with_routing` helper",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T14:36:26Z",
        "updated_at": "2024-01-29T14:25:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50727",
            "html_url": "https://github.com/rails/rails/pull/50727",
            "diff_url": "https://github.com/rails/rails/pull/50727.diff",
            "patch_url": "https://github.com/rails/rails/pull/50727.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFollow-up to [#49819][]\r\n\r\n### Detail\r\n\r\nSince [#49819][] resolves an issue with\r\n`ActionDispatch::IntegrationTest#with_routing` helper support, Action View's `test/abstract_unit.rb` file can rely on routing being reset within the block argument.\r\n\r\nThis means that the `RoutedRackApp` class and `.build_app` method is can be made unnecessary.\r\n\r\n[#49819]: https://github.com/rails/rails/pull/49819\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50727/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50727/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50722",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50722/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50722/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50722/events",
        "html_url": "https://github.com/rails/rails/pull/50722",
        "id": 2078567396,
        "node_id": "PR_kwDNIULOY-j0Ow",
        "number": 50722,
        "title": "Downcase the model name in the system scaffolds",
        "user": {
            "login": "dwightwatson",
            "id": 1100408,
            "node_id": "MDQ6VXNlcjExMDA0MDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1100408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dwightwatson",
            "html_url": "https://github.com/dwightwatson",
            "followers_url": "https://api.github.com/users/dwightwatson/followers",
            "following_url": "https://api.github.com/users/dwightwatson/following{/other_user}",
            "gists_url": "https://api.github.com/users/dwightwatson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dwightwatson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dwightwatson/subscriptions",
            "organizations_url": "https://api.github.com/users/dwightwatson/orgs",
            "repos_url": "https://api.github.com/users/dwightwatson/repos",
            "events_url": "https://api.github.com/users/dwightwatson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dwightwatson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-12T10:51:23Z",
        "updated_at": "2024-01-15T02:43:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50722",
            "html_url": "https://github.com/rails/rails/pull/50722",
            "diff_url": "https://github.com/rails/rails/pull/50722.diff",
            "patch_url": "https://github.com/rails/rails/pull/50722.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nI noticed there is an inconsistency in the system test scaffold where the model name is sometimes capitalised. This fixes the two instances where the model name is humanised.\r\n\r\n```rb\r\ntest \"should create user\"\r\ntest \"should update User\"\r\ntest \"should destroy User\"\r\n```\r\n\r\nConsidering all the other scaffolds use lowercase text I think it's right these two are downcased in the same way.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50722/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50722/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50721",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50721/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50721/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50721/events",
        "html_url": "https://github.com/rails/rails/pull/50721",
        "id": 2078388014,
        "node_id": "PR_kwDNIULOY-aIsQ",
        "number": 50721,
        "title": "Pool disabled query cache handling",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-12T09:06:56Z",
        "updated_at": "2024-01-30T07:46:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50721",
            "html_url": "https://github.com/rails/rails/pull/50721",
            "diff_url": "https://github.com/rails/rails/pull/50721.diff",
            "patch_url": "https://github.com/rails/rails/pull/50721.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFor [Solid Cache](https://github.com/rails/solid_cache), we want to be able to read and write from the cache database without using the query cache. \r\n\r\nWe also don't want to expire the query cache on other connection pools when we write. Writing to the Rails cache shouldn't invalidate the main query cache.\r\n\r\nThis is an alternative to https://github.com/rails/rails/pull/50695, based on @byroot's [suggestion here](https://github.com/rails/rails/pull/50695#issuecomment-1885312807).\r\n\r\n### Detail\r\n\r\nAfter a database write we clear the query cache on all connection pools. The change here is that we will now only do that if either the connection pool or the connection itself has the query cache enabled.\r\n\r\nThe query cache is [enabled on all connection pools](https://github.com/rails/rails/blob/cff2eb1be11cb729382b3674e3caa2bd198ec55e/activerecord/lib/active_record/query_cache.rb#L28-L42) by the executor hooks, so to take advantage of this we'll need to add another executor hook that disables the query cache on the Solid Cache connection pool (but only when it has a dedicated pool). \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50721/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50717",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50717/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50717/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50717/events",
        "html_url": "https://github.com/rails/rails/pull/50717",
        "id": 2077465816,
        "node_id": "PR_kwDNIULOY9n-Rg",
        "number": 50717,
        "title": "Expand documentation for ActiveRecord::Core #dup and #clone",
        "user": {
            "login": "p8",
            "id": 28561,
            "node_id": "MDQ6VXNlcjI4NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p8",
            "html_url": "https://github.com/p8",
            "followers_url": "https://api.github.com/users/p8/followers",
            "following_url": "https://api.github.com/users/p8/following{/other_user}",
            "gists_url": "https://api.github.com/users/p8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/p8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/p8/subscriptions",
            "organizations_url": "https://api.github.com/users/p8/orgs",
            "repos_url": "https://api.github.com/users/p8/repos",
            "events_url": "https://api.github.com/users/p8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/p8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-11T19:46:53Z",
        "updated_at": "2024-01-17T10:26:04Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50717",
            "html_url": "https://github.com/rails/rails/pull/50717",
            "diff_url": "https://github.com/rails/rails/pull/50717.diff",
            "patch_url": "https://github.com/rails/rails/pull/50717.patch",
            "merged_at": null
        },
        "body": "Splits the examples for `#clone` into separate sections for easier scanability.\r\n\r\nAdds examples to `#dup` to clarify the difference with `#clone`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50717/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50717/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50710",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50710/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50710/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50710/events",
        "html_url": "https://github.com/rails/rails/pull/50710",
        "id": 2077153009,
        "node_id": "PR_kwDNIULOY9Wvpg",
        "number": 50710,
        "title": "Update `ActionDispatch::Routing::Mapper:Scoping#constraints` documentation",
        "user": {
            "login": "stevepolitodesign",
            "id": 5122678,
            "node_id": "MDQ6VXNlcjUxMjI2Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5122678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevepolitodesign",
            "html_url": "https://github.com/stevepolitodesign",
            "followers_url": "https://api.github.com/users/stevepolitodesign/followers",
            "following_url": "https://api.github.com/users/stevepolitodesign/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevepolitodesign/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevepolitodesign/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevepolitodesign/subscriptions",
            "organizations_url": "https://api.github.com/users/stevepolitodesign/orgs",
            "repos_url": "https://api.github.com/users/stevepolitodesign/repos",
            "events_url": "https://api.github.com/users/stevepolitodesign/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevepolitodesign/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-11T16:50:31Z",
        "updated_at": "2024-01-11T16:50:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50710",
            "html_url": "https://github.com/rails/rails/pull/50710",
            "diff_url": "https://github.com/rails/rails/pull/50710.diff",
            "patch_url": "https://github.com/rails/rails/pull/50710.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nThe previous recommendation to place constraints in `lib/constraints` did not work in practice on a default Rails install, as it will raise the following:\r\n\r\n```\r\nuninitialized constant Iphone (NameError)\r\n```\r\n\r\nInstead, recommend placing constraints in `app/constraints` such that they will be eager loaded.\r\n\r\n### Additional information\r\n\r\nAlternatively, we could update the documentation to elaborate that `lib/constraints` would need to be explicitly eager loaded.\r\n\r\n```ruby\r\nconfig.eager_load_paths << Rails.root.join(\"lib/constraints\")\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50710/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50710/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50705",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50705/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50705/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50705/events",
        "html_url": "https://github.com/rails/rails/pull/50705",
        "id": 2076034722,
        "node_id": "PR_kwDNIULOY8YYug",
        "number": 50705,
        "title": "Backport: Define missing attribute methods from `method_missing`",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-11T08:26:24Z",
        "updated_at": "2024-01-11T08:26:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50705",
            "html_url": "https://github.com/rails/rails/pull/50705",
            "diff_url": "https://github.com/rails/rails/pull/50705.diff",
            "patch_url": "https://github.com/rails/rails/pull/50705.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50594\r\n\r\nOpening a PR because the backport is non-trivial, so I want CI coverage. Also @ghiculescu pointed a possible issue in https://github.com/rails/rails/commit/d429bfb3b6fd2794f0d859b68e5dee24578d405f so I'd like to get to the bottom of that before merging the backport.\r\n\r\ncc @rafaelfranca ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50705/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50703",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50703/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50703/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50703/events",
        "html_url": "https://github.com/rails/rails/pull/50703",
        "id": 2075945414,
        "node_id": "PR_kwDNIULOY8ThOg",
        "number": 50703,
        "title": "Add warning for non-existent directories in autoload paths for Zeitwerk",
        "user": {
            "login": "aeroastro",
            "id": 4468155,
            "node_id": "MDQ6VXNlcjQ0NjgxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4468155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aeroastro",
            "html_url": "https://github.com/aeroastro",
            "followers_url": "https://api.github.com/users/aeroastro/followers",
            "following_url": "https://api.github.com/users/aeroastro/following{/other_user}",
            "gists_url": "https://api.github.com/users/aeroastro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aeroastro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aeroastro/subscriptions",
            "organizations_url": "https://api.github.com/users/aeroastro/orgs",
            "repos_url": "https://api.github.com/users/aeroastro/repos",
            "events_url": "https://api.github.com/users/aeroastro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aeroastro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-11T07:28:26Z",
        "updated_at": "2024-01-17T12:05:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50703",
            "html_url": "https://github.com/rails/rails/pull/50703",
            "diff_url": "https://github.com/rails/rails/pull/50703.diff",
            "patch_url": "https://github.com/rails/rails/pull/50703.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I noticed that Rails does not warn the user when they specify a non-existing directory in the `config.autoload_paths` or `config.autoload_once_paths` settings. This can lead to confusion and hard-to-debug errors when the user expects some files to be loaded but they are not.\r\n\r\n### Detail\r\n\r\nThis Pull Request add a warning message when specified paths for `config.autoload_paths` and `config.autoload_once_paths` are not existing directories.\r\nBelow is the example message:\r\n\r\n```\r\nconfig.autoload_paths must be existing directories.\r\n'/wrong/path/to/load' is not an existing directory.\r\n```\r\n\r\n### Additional information\r\n\r\nSince this PR does not change the behavior itself, I believe existing tests cover this PR.\r\n\r\nThe warning message has been inspired by the following code.\r\nhttps://github.com/rails/rails/blob/91968e5a185927b8216b82c860a48b6367285456/railties/lib/rails/application/bootstrap.rb#L23-L30\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50703/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50695",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50695/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50695/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50695/events",
        "html_url": "https://github.com/rails/rails/pull/50695",
        "id": 2074094584,
        "node_id": "PR_kwDNIULOY6t9sA",
        "number": 50695,
        "title": "Ignore the query cache in a block",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-10T10:47:07Z",
        "updated_at": "2024-01-30T04:11:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50695",
            "html_url": "https://github.com/rails/rails/pull/50695",
            "diff_url": "https://github.com/rails/rails/pull/50695.diff",
            "patch_url": "https://github.com/rails/rails/pull/50695.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis PR allow the Query cache to be ignored in a block.\r\n\r\nFor Solid Cache queries we want to be able to completely disable the query cache (see https://github.com/rails/solid_cache/issues/123).\r\n\r\nSolid Cache uses the database as the Rails cache so it gets the automatic query cache behaviour by default. \r\n\r\nWe'd like to avoid this because the local cache already handles caching repeated reads and having Rails cache writes clear the AR query cache is not desirable.\r\n\r\n`uncached` works for disabling reads doesn't disable clearing the cache for writes.\r\n\r\n### Detail\r\n\r\nWe add a `ignore_query_cache` method to the connection. It takes a block and within that block:\r\n- queries will not be cached in the query cache\r\n- queries will not be read from the query cache\r\n- writes will not clear the query cache\r\n- cached/uncached blocks will be ignored\r\n\r\nExample usage:\r\n\r\n```ruby\r\nActiveRecord::Base.connection.ignore_query_cache do\r\n  post = Post.find 1\r\n  post.touch\r\nend\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50695/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50672",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50672/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50672/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50672/events",
        "html_url": "https://github.com/rails/rails/issues/50672",
        "id": 2072396416,
        "node_id": "I_kwDNIULOe4ZCgA",
        "number": 50672,
        "title": "db:schema:load:<name> purges test database",
        "user": {
            "login": "romuloceccon",
            "id": 40032,
            "node_id": "MDQ6VXNlcjQwMDMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/40032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/romuloceccon",
            "html_url": "https://github.com/romuloceccon",
            "followers_url": "https://api.github.com/users/romuloceccon/followers",
            "following_url": "https://api.github.com/users/romuloceccon/following{/other_user}",
            "gists_url": "https://api.github.com/users/romuloceccon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/romuloceccon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/romuloceccon/subscriptions",
            "organizations_url": "https://api.github.com/users/romuloceccon/orgs",
            "repos_url": "https://api.github.com/users/romuloceccon/repos",
            "events_url": "https://api.github.com/users/romuloceccon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/romuloceccon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-09T13:43:19Z",
        "updated_at": "2024-01-10T09:19:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Commit [adb64db43d](https://github.com/rails/rails/commit/adb64db43dba5cad1007ce57e25df67f8b3e91f8#diff-4a42b5efdab725af0936f94b4a84dcf6a8be8738e28ed265e0a3e74f275f5048R491) changed task `db:schema:load:<name>` to invoke `db:test:purge:<name>`.\r\n\r\nBecause of that Rails 7.1 breaks my workflow for initializing a local environment:\r\n\r\n- create database with `db:create`\r\n- run custom SQL to create Postgres extensions, schemas and triggers\r\n- load schema with `db:schema:load:<name>`\r\n\r\nStrangely, `db:schema:load` keeps the old behavior, and I could not find the explanation for the change in the commit message or in related Github issues.\r\n\r\nAlso, it _requires_ a test database to be configured in `database.yml`; otherwise the task fails:\r\n\r\n```\r\n$ RAILS_ENV=development bin/rails db:schema:load:primary\r\nbin/rails aborted!\r\nTypeError: Invalid type for configuration. Expected Symbol, String, or Hash. Got nil (TypeError)\r\n\r\n        raise TypeError, \"Invalid type for configuration. Expected Symbol, String, or Hash. Got #{config.inspect}\"\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nTasks: TOP => db:schema:load:primary => db:test:purge:primary\r\n(See full trace by running task with --trace)\r\n```\r\n\r\nCan someone confirm the change was intentional?\r\n\r\n**Steps to reproduce the failure**\r\n\r\n- `$ rails new rails_bug`\r\n- `$ cd rails_bug`\r\n- use the following `database.yml`:\r\n\r\n```\r\ndevelopment:\r\n  one:\r\n    adapter: sqlite3\r\n    database: storage/development.sqlite3\r\n  two:\r\n    adapter: sqlite3\r\n    database: storage/development_two.sqlite3\r\n    migrations_paths: db/migrate_two\r\n```\r\n- `$ bin/rails db:migrate:one`\r\n- `$ bin/rails db:schema:load:one`\r\n\r\n**Expected behavior**\r\n\r\nNo error.\r\n\r\n**Actual behavior**\r\n\r\nTypeError invoking database task.\r\n\r\n**System configuration**\r\n\r\nRails 7.1.2\r\nRuby 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50666",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50666/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50666/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50666/events",
        "html_url": "https://github.com/rails/rails/issues/50666",
        "id": 2071645014,
        "node_id": "I_kwDNIULOe3rLVg",
        "number": 50666,
        "title": "`rails credentials:edit` lets you pass an unknown editor, without issuing any error report",
        "user": {
            "login": "ArthurPV",
            "id": 42948054,
            "node_id": "MDQ6VXNlcjQyOTQ4MDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/42948054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ArthurPV",
            "html_url": "https://github.com/ArthurPV",
            "followers_url": "https://api.github.com/users/ArthurPV/followers",
            "following_url": "https://api.github.com/users/ArthurPV/following{/other_user}",
            "gists_url": "https://api.github.com/users/ArthurPV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ArthurPV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ArthurPV/subscriptions",
            "organizations_url": "https://api.github.com/users/ArthurPV/orgs",
            "repos_url": "https://api.github.com/users/ArthurPV/repos",
            "events_url": "https://api.github.com/users/ArthurPV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ArthurPV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-09T05:15:43Z",
        "updated_at": "2024-01-09T13:23:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.2\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/object/blank\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_credentials_edit_command\r\n    # test with ed editor\r\n    # assert_equal system(\"VISUAL=ed rails credentials:edit << EOF\\nEOF\"), true\r\n    # test with an unknown editor\r\n    assert_equal system(\"VISUAL=abc rails credentials:edit\"), false\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\n$? = 1, with an error report\r\n\r\n### Actual behavior\r\n\r\noutput:\r\n\r\n```\r\nEditing config/credentials.yml.enc...\r\nFile encrypted and saved.\r\n```\r\n\r\n$? = 0\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.3.0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50666/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50645",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50645/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50645/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50645/events",
        "html_url": "https://github.com/rails/rails/issues/50645",
        "id": 2070625119,
        "node_id": "I_kwDNIULOe2s7Xw",
        "number": 50645,
        "title": "Rails 7.1 Create model with has_many with lambda incorrect default",
        "user": {
            "login": "nikita-railsware",
            "id": 137036598,
            "node_id": "U_kgDOCCsDNg",
            "avatar_url": "https://avatars.githubusercontent.com/u/137036598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikita-railsware",
            "html_url": "https://github.com/nikita-railsware",
            "followers_url": "https://api.github.com/users/nikita-railsware/followers",
            "following_url": "https://api.github.com/users/nikita-railsware/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikita-railsware/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikita-railsware/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikita-railsware/subscriptions",
            "organizations_url": "https://api.github.com/users/nikita-railsware/orgs",
            "repos_url": "https://api.github.com/users/nikita-railsware/repos",
            "events_url": "https://api.github.com/users/nikita-railsware/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikita-railsware/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-08T14:54:30Z",
        "updated_at": "2024-01-24T09:51:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nIn Rails 7.1, when I create new model with lambda in `has_many` association without passing value to the parameter, it puts serialized value of array that passed in `where` in a lambda.\r\nRails 7.0 just put `nil` in this case.\r\n\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.2\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :users, force: true do |t|\r\n  end\r\n\r\n  create_table :post_accesses, force: true do |t|\r\n    t.string :access_type\r\n    t.references :post\r\n    t.references :user\r\n  end\r\nend\r\n\r\nclass PostAccess < ActiveRecord::Base\r\n  ROLES = %w[viewer editor owner]\r\n  STAFF_ROLES = %w[editor owner]\r\n\r\n  belongs_to :user\r\n  belongs_to :post\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :post_accesses\r\n  has_many :staff_post_accesses,\r\n           -> { where(access_type: PostAccess::STAFF_ROLES) },\r\n           class_name: 'PostAccess'\r\n\r\n  has_many :staff_users, through: :staff_post_accesses, class_name: 'User', source: :user\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    user = User.create!\r\n    post = Post.create!(staff_users: [user])\r\n\r\n    assert_equal nil, post.post_accesses.first.access_type\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nIt should put `nil`, or one of the possible value\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nIt put serialized array:\r\n'[\"editor\", \"owner\"]'\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50645/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50645/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50637",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50637/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50637/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50637/events",
        "html_url": "https://github.com/rails/rails/pull/50637",
        "id": 2069551280,
        "node_id": "PR_kwDNIULOY21ZLw",
        "number": 50637,
        "title": "Experiment | [Fix #47809] `load_async` support for collection associations",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-08T03:24:48Z",
        "updated_at": "2024-01-09T03:10:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50637",
            "html_url": "https://github.com/rails/rails/pull/50637",
            "diff_url": "https://github.com/rails/rails/pull/50637.diff",
            "patch_url": "https://github.com/rails/rails/pull/50637.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nMostly an experiment to fix #47809 while trying to avoid a large refactor which [might be the ideal solution](https://github.com/rails/rails/issues/47809#issuecomment-1489832287). This only tackles collection associations.\r\n\r\n### Detail\r\n\r\nTODO\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nTODO\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50637/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50637/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50633",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50633/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50633/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50633/events",
        "html_url": "https://github.com/rails/rails/pull/50633",
        "id": 2069256890,
        "node_id": "PR_kwDNIULOY2laaQ",
        "number": 50633,
        "title": "Make `group`/`regroup` inside `merge` be applied to the merged relation",
        "user": {
            "login": "joaomarcos96",
            "id": 31287923,
            "node_id": "MDQ6VXNlcjMxMjg3OTIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/31287923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joaomarcos96",
            "html_url": "https://github.com/joaomarcos96",
            "followers_url": "https://api.github.com/users/joaomarcos96/followers",
            "following_url": "https://api.github.com/users/joaomarcos96/following{/other_user}",
            "gists_url": "https://api.github.com/users/joaomarcos96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joaomarcos96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joaomarcos96/subscriptions",
            "organizations_url": "https://api.github.com/users/joaomarcos96/orgs",
            "repos_url": "https://api.github.com/users/joaomarcos96/repos",
            "events_url": "https://api.github.com/users/joaomarcos96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joaomarcos96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-07T19:25:39Z",
        "updated_at": "2024-01-17T22:36:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50633",
            "html_url": "https://github.com/rails/rails/pull/50633",
            "diff_url": "https://github.com/rails/rails/pull/50633.diff",
            "patch_url": "https://github.com/rails/rails/pull/50633.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nWhen using `group` inside `merge`, the `group` is applied to the outermost relation instead of the merged relation, which is unexpected. The same is true for `regroup`.\r\n\r\n### Detail\r\n\r\nNow, `group` inside `merge` is applied to the merged relation, as intended. The behavior was changed for `regroup` as well, and documented.\r\n\r\nBefore:\r\n\r\n```rb\r\nProduct.joins(:items).group(:id).merge(Item.group(:title))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"products\".\"title\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id)).regroup(:title)\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"title\"\r\n```\r\n\r\nAfter:\r\n```rb\r\nProduct.joins(:items).group(:id).merge(Item.group(:title))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"items\".\"title\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"items\".\"id\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id)).regroup(:title)\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"title\"\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50633/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50623",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50623/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50623/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50623/events",
        "html_url": "https://github.com/rails/rails/pull/50623",
        "id": 2068829741,
        "node_id": "PR_kwDNIULOY2QLzQ",
        "number": 50623,
        "title": "Pass render options and block to calls to `#render_in`",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-06T20:46:09Z",
        "updated_at": "2024-01-30T03:15:45Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50623",
            "html_url": "https://github.com/rails/rails/pull/50623",
            "diff_url": "https://github.com/rails/rails/pull/50623.diff",
            "patch_url": "https://github.com/rails/rails/pull/50623.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nCloses [#45432][]\r\n\r\nSupport for objects that respond to `#render_in` was introduced in [#36388][] and [#37919][]. Those implementations assume that the instance will all the context it needs to render itself. That assumption doesn't account for call-site arguments like `locals: { ... }` or a block.\r\n\r\n### Detail\r\n\r\nThis commit expands support for rendering with a `:renderable` option to incorporate locals and blocks. For example:\r\n\r\n```ruby\r\nclass Greeting\r\n  def render_in(view_context, **options, &block)\r\n    if block\r\n      view_context.render html: block.call\r\n    else\r\n      view_context.render inline: <<~ERB.strip, **options\r\n        Hello, <%= name %>\r\n      ERB\r\n    end\r\n  end\r\nend\r\n\r\nrender(Greeting.new)                    # => \"Hello, World\"\r\nrender(Greeting.new, name: \"Local\")     # => \"Hello, Local\"\r\nrender(Greeting.new) { \"Hello, Block\" } # => \"Hello, Block\"\r\n```\r\n\r\nSince existing tools depend on the `#render_in(view_context)` signature\r\nwithout options, this commit deprecates that signature in favor of one\r\nthat accepts options and a block.\r\n\r\n[#45432]: https://github.com/rails/rails/pull/45432\r\n[#36388]: https://github.com/rails/rails/pull/36388\r\n[#37919]: https://github.com/rails/rails/pull/37919\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50623/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50610",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50610/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50610/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50610/events",
        "html_url": "https://github.com/rails/rails/pull/50610",
        "id": 2068183148,
        "node_id": "PR_kwDNIULOY1t8TA",
        "number": 50610,
        "title": "Don't fail for uploads with content-type parameters in the ActiveStorage::DiskController",
        "user": {
            "login": "codergeek121",
            "id": 4910785,
            "node_id": "MDQ6VXNlcjQ5MTA3ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4910785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codergeek121",
            "html_url": "https://github.com/codergeek121",
            "followers_url": "https://api.github.com/users/codergeek121/followers",
            "following_url": "https://api.github.com/users/codergeek121/following{/other_user}",
            "gists_url": "https://api.github.com/users/codergeek121/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codergeek121/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codergeek121/subscriptions",
            "organizations_url": "https://api.github.com/users/codergeek121/orgs",
            "repos_url": "https://api.github.com/users/codergeek121/repos",
            "events_url": "https://api.github.com/users/codergeek121/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codergeek121/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-05T23:32:34Z",
        "updated_at": "2024-01-08T20:20:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50610",
            "html_url": "https://github.com/rails/rails/pull/50610",
            "diff_url": "https://github.com/rails/rails/pull/50610.diff",
            "patch_url": "https://github.com/rails/rails/pull/50610.patch",
            "merged_at": null
        },
        "body": "Fixes #50600 by parsing the string content-type before comparing it to the `Mime::Type`. This comparison will ignore the parameters.\r\n\r\n@alexandergitter I added you as co-author for the reproduction test case.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50610/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50610/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50608",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50608/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50608/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50608/events",
        "html_url": "https://github.com/rails/rails/pull/50608",
        "id": 2067907461,
        "node_id": "PR_kwDNIULOY1ewzQ",
        "number": 50608,
        "title": "allow dom_id method to accept an array of records_or_classes",
        "user": {
            "login": "jwilsjustin",
            "id": 820759,
            "node_id": "MDQ6VXNlcjgyMDc1OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/820759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jwilsjustin",
            "html_url": "https://github.com/jwilsjustin",
            "followers_url": "https://api.github.com/users/jwilsjustin/followers",
            "following_url": "https://api.github.com/users/jwilsjustin/following{/other_user}",
            "gists_url": "https://api.github.com/users/jwilsjustin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jwilsjustin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jwilsjustin/subscriptions",
            "organizations_url": "https://api.github.com/users/jwilsjustin/orgs",
            "repos_url": "https://api.github.com/users/jwilsjustin/repos",
            "events_url": "https://api.github.com/users/jwilsjustin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jwilsjustin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-05T19:12:49Z",
        "updated_at": "2024-01-08T14:17:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50608",
            "html_url": "https://github.com/rails/rails/pull/50608",
            "diff_url": "https://github.com/rails/rails/pull/50608.diff",
            "patch_url": "https://github.com/rails/rails/pull/50608.patch",
            "merged_at": null
        },
        "body": "# Context\r\n\r\nSee also: https://github.com/hotwired/turbo-rails/pull/476\r\n\r\n[hotwired/turbo-rails/pull/476](https://github.com/hotwired/turbo-rails/pull/476) removed the ability to pass multiple ids/models to the `turbo_frame_tag` helper method. In that PR it was suggested by @skipkayhil that this ability be passed down to the `dom_id` method (which is a part of rails core) method rather than the `turbo_frame_tag` helper (which is a part of turbo-rails).\r\n\r\nref: https://discuss.rubyonrails.org/t/allow-dom-id-method-to-accept-multiple-ids-models/84408\r\n\r\n# Changes\r\n\r\nIf the first argument of the `dom_id` is an array, this change will loop through each value and form a singular dom ID, then join the parts together. This change will allow turbo frame tags to accept multiple models (similar to the `cache` helper from ActionView).\r\n\r\n```\r\n<%= turbo_frame_tag [customer, field] do %>\r\n  <!-- code -->\r\n<% end %>\r\n```\r\n\r\n***\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50608/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50608/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50606",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50606/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50606/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50606/events",
        "html_url": "https://github.com/rails/rails/pull/50606",
        "id": 2067810728,
        "node_id": "PR_kwDNIULOY1ZYdQ",
        "number": 50606,
        "title": "[Fix #50604] Restore compatibility of Active Record Encryption configs with eager loading mode",
        "user": {
            "login": "maximerety",
            "id": 58582,
            "node_id": "MDQ6VXNlcjU4NTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/58582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maximerety",
            "html_url": "https://github.com/maximerety",
            "followers_url": "https://api.github.com/users/maximerety/followers",
            "following_url": "https://api.github.com/users/maximerety/following{/other_user}",
            "gists_url": "https://api.github.com/users/maximerety/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maximerety/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maximerety/subscriptions",
            "organizations_url": "https://api.github.com/users/maximerety/orgs",
            "repos_url": "https://api.github.com/users/maximerety/repos",
            "events_url": "https://api.github.com/users/maximerety/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maximerety/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-05T18:03:09Z",
        "updated_at": "2024-01-31T12:08:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50606",
            "html_url": "https://github.com/rails/rails/pull/50606",
            "diff_url": "https://github.com/rails/rails/pull/50606.diff",
            "patch_url": "https://github.com/rails/rails/pull/50606.patch",
            "merged_at": null
        },
        "body": "\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes #50604\r\n\r\nThis Pull Request fixes a source of incompatibility between the loading order of Active Record Encryption configs and the loading of AR models in eager loading mode.\r\n\r\n### Detail\r\n\r\nThis Pull Request removes an occurrence of `after_initialize` introduced in https://github.com/rails/rails/pull/48530, which is not fully compatible with the eager loading mode.\r\n\r\nPrevious concerns were raised in [a discussion from the same PR](https://github.com/rails/rails/pull/48530/files#r1237624233).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50606/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50604",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50604/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50604/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50604/events",
        "html_url": "https://github.com/rails/rails/issues/50604",
        "id": 2067789909,
        "node_id": "I_kwDNIULOez_4VQ",
        "number": 50604,
        "title": "Active Record Encryption configs not ready in eager loading mode",
        "user": {
            "login": "maximerety",
            "id": 58582,
            "node_id": "MDQ6VXNlcjU4NTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/58582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maximerety",
            "html_url": "https://github.com/maximerety",
            "followers_url": "https://api.github.com/users/maximerety/followers",
            "following_url": "https://api.github.com/users/maximerety/following{/other_user}",
            "gists_url": "https://api.github.com/users/maximerety/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maximerety/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maximerety/subscriptions",
            "organizations_url": "https://api.github.com/users/maximerety/orgs",
            "repos_url": "https://api.github.com/users/maximerety/repos",
            "events_url": "https://api.github.com/users/maximerety/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maximerety/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-05T17:50:05Z",
        "updated_at": "2024-01-17T12:55:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nThe introduction of `after_initialize` in Active Record Encryption configuration setup in https://github.com/rails/rails/pull/48530 (also see [that discussion in the same PR](https://github.com/rails/rails/pull/48530/files#r1237624233)) is not fully compatible with the eager loading mode: https://github.com/rails/rails/blob/6b446bee63c401364d193920f3426af0bfe75650/activerecord/lib/active_record/railtie.rb#L385\r\n\r\nIn eager loading mode, the models from the application are loaded before the `after_initialize` hook has a chance to run, as visible here (hint: you need to scroll in the code snippet): https://github.com/rails/rails/blob/b0b1eb5a1847c1de5616a55c1d7c78f11eb08cd8/railties/lib/rails/application/finisher.rb#L77-L95\r\n\r\nAs a result, some configurations may not be ready at the time Active Record Encryption's helper `encrypts` needs them during model loading.\r\n\r\nFor example, the following methods are called in order: `encrypts` ->  `encrypt_attribute` -> `scheme_for` -> `global_previous_schemes_for`:\r\n\r\nhttps://github.com/rails/rails/blob/e0a55b038f7f2f50d1467876558be183be6cedaa/activerecord/lib/active_record/encryption/encryptable_record.rb#L78-L82\r\n\r\nIf `ActiveRecord::Encryption.config.previous_schemes` is not defined yet, then the encrypted attribute is not properly configured.\r\n\r\n### Example 1\r\n\r\n#### Steps to reproduce\r\n\r\nIn this example, a previous encryption scheme is provided globally, as described in https://guides.rubyonrails.org/active_record_encryption.html#global-previous-encryption-schemes:\r\n\r\n```ruby\r\n# config/application.rb\r\nconfig.active_record.encryption.previous = [ { key_provider: MyOldKeyProvider.new } ]\r\nconfig.eager_load = true\r\n\r\n# app/models/article.rb\r\nclass Article < ApplicationRecord\r\n  encrypts :title\r\nend\r\n```\r\n\r\n#### Expected behavior\r\n\r\nThe previous encryption scheme should always be taken into account when line `encrypts :title` is reached.\r\n\r\n#### Actual behavior\r\n\r\nWhen lazy loading the application, everything is fine and the `Article` model is lazily loaded after the previous encryption scheme is defined by the `after_initialize` hook and the `:title` attribute can benefit from that previous encryption scheme.\r\n\r\nWhen eager loading the application however, the `Article` model is eager loaded before the previous scheme is defined and that config gets ignored.\r\n\r\n### Example 2\r\n\r\n#### Steps to reproduce\r\n\r\nIn this example, a custom key provider is configured when declaring the attribute, as described in https://guides.rubyonrails.org/active_record_encryption.html#model-specific-key-providers:\r\n\r\n```ruby\r\n# config/application.rb\r\nconfig.eager_load = true\r\n\r\n# app/models/article.rb\r\nclass Article < ApplicationRecord\r\n  encrypts :title, key_provider: CustomKeyProvider.new(ActiveRecord::Encryption.config.primary_key)\r\nend\r\n```\r\n\r\n#### Expected behavior\r\n\r\nThe custom key provider should be able to use the `primary_key` configured  when line `encrypts :title` is reached.\r\n\r\n#### Actual behavior\r\n\r\nWhen lazy loading the application, everything is fine and the `Article` model is lazily loaded after the `primary_key` is defined by the `after_initialize` hook and the `:title` attribute can be set up normally.\r\n\r\nWhen eager loading the application however, the `Article` model is eager loaded before the `primary_key` is defined by the `after_initialize` hook, and the model fails to load with the following exception:\r\n\r\n```\r\nactiverecord-7.1.2/lib/active_record/encryption/config.rb:43:in `block (2 levels) in <class:Config>':\r\n  Missing Active Record encryption credential: active_record_encryption.primary_key (ActiveRecord::Encryption::Errors::Configuration)\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: `7.1.2` / `7.1.3` / `main`\r\n\r\n**Ruby version**: `3.2.2` / `3.3.0`\r\n\r\n### Possible fixes\r\n\r\n1. Get rid of `after_initialize` if not really necessary (see [previous discussions](https://github.com/rails/rails/pull/48530/files#r1237624233))\r\n2. Otherwise, keep `after_initialize` and attempt to patch the eager loading mode (using `config.before_eager_load`?)",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50604/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50600",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50600/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50600/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50600/events",
        "html_url": "https://github.com/rails/rails/issues/50600",
        "id": 2067401862,
        "node_id": "I_kwDNIULOezoMhg",
        "number": 50600,
        "title": "ActiveStorage::DiskController fails for uploads when Content-Type / media type contains a parameter",
        "user": {
            "login": "alexandergitter",
            "id": 816758,
            "node_id": "MDQ6VXNlcjgxNjc1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/816758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexandergitter",
            "html_url": "https://github.com/alexandergitter",
            "followers_url": "https://api.github.com/users/alexandergitter/followers",
            "following_url": "https://api.github.com/users/alexandergitter/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexandergitter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexandergitter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexandergitter/subscriptions",
            "organizations_url": "https://api.github.com/users/alexandergitter/orgs",
            "repos_url": "https://api.github.com/users/alexandergitter/repos",
            "events_url": "https://api.github.com/users/alexandergitter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexandergitter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-01-05T14:01:29Z",
        "updated_at": "2024-01-10T05:24:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`ActiveStorage::DiskController#update` returns a 422 error when the submitted content contains a parameter in its Content-Type / media type, for example `audio/ogg; codecs=opus`.\r\n\r\nThis issue appears to have been introduced in https://github.com/rails/rails/commit/5fb4703471ffb11dab9aa3855daeef9f592f6388\r\n\r\n### Steps to reproduce\r\nHere's a test case that fails in `ActiveStorage::DiskControllerTest`:\r\n\r\n```ruby\r\ntest \"directly uploading blob with content type parameters\" do\r\n  data = \"Something else entirely!\"\r\n  blob = create_blob_before_direct_upload(\r\n    byte_size: data.size, checksum: OpenSSL::Digest::MD5.base64digest(data), content_type: \"audio/ogg; codecs=opus\")\r\n\r\n  put blob.service_url_for_direct_upload, params: data, headers: { \"Content-Type\" => \"audio/ogg; codecs=opus\" }\r\n  assert_response :no_content\r\n  assert_equal data, blob.download\r\nend\r\n```\r\n\r\n(The test passes when the `; codecs=opus` part is omitted.)\r\n\r\n### Expected behavior\r\nThe upload succeeds, since the content type from the uploaded content matches the content type in the direct upload token.\r\n\r\n### Actual behavior\r\nThe request fails with 422 Unprocessable Content.\r\n\r\n### System configuration\r\n**Rails version**: 7.2.0.alpha (1702b6cbfd)\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50598",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50598/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50598/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50598/events",
        "html_url": "https://github.com/rails/rails/pull/50598",
        "id": 2067384052,
        "node_id": "PR_kwDNIULOY1BvYg",
        "number": 50598,
        "title": "Document `upsert`/`upsert_all` `on_duplicate: :skip` option",
        "user": {
            "login": "lucasmazza",
            "id": 80978,
            "node_id": "MDQ6VXNlcjgwOTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/80978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucasmazza",
            "html_url": "https://github.com/lucasmazza",
            "followers_url": "https://api.github.com/users/lucasmazza/followers",
            "following_url": "https://api.github.com/users/lucasmazza/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucasmazza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lucasmazza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucasmazza/subscriptions",
            "organizations_url": "https://api.github.com/users/lucasmazza/orgs",
            "repos_url": "https://api.github.com/users/lucasmazza/repos",
            "events_url": "https://api.github.com/users/lucasmazza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lucasmazza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-05T13:49:07Z",
        "updated_at": "2024-01-09T13:38:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50598",
            "html_url": "https://github.com/rails/rails/pull/50598",
            "diff_url": "https://github.com/rails/rails/pull/50598.diff",
            "patch_url": "https://github.com/rails/rails/pull/50598.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nI've stumbled on this when writing an `upsert` call that must produce a `ON CONFLICT () DO NOTHING` fragment.\r\n\r\nUsing `update_only: []` didn't worked as it does update all columns on the table, but reading `InsertAll` I noticed the use of `:skip` internally that worked for this scenario, but it isn't mentioned on the public docs.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50598/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50598/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50583",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50583/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50583/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50583/events",
        "html_url": "https://github.com/rails/rails/issues/50583",
        "id": 2066163278,
        "node_id": "I_kwDNIULOeycmTg",
        "number": 50583,
        "title": "Active Storage Variant causing Aws::S3::Errors::NoSuchKey error when deleting an attachment",
        "user": {
            "login": "basiszwo",
            "id": 24071,
            "node_id": "MDQ6VXNlcjI0MDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/24071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/basiszwo",
            "html_url": "https://github.com/basiszwo",
            "followers_url": "https://api.github.com/users/basiszwo/followers",
            "following_url": "https://api.github.com/users/basiszwo/following{/other_user}",
            "gists_url": "https://api.github.com/users/basiszwo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/basiszwo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/basiszwo/subscriptions",
            "organizations_url": "https://api.github.com/users/basiszwo/orgs",
            "repos_url": "https://api.github.com/users/basiszwo/repos",
            "events_url": "https://api.github.com/users/basiszwo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/basiszwo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-04T18:44:36Z",
        "updated_at": "2024-01-31T22:09:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am not sure if this is a bug or something is not configured correctly. \r\n\r\n### Steps to reproduce\r\n\r\nUsing Active Storage with a S3-compatible object storage from digital ocean or scaleway configured along the rails guide for active storage.\r\n\r\nActive Storage configuration\r\n\r\n```\r\ndigitalocean:\r\n  service: S3\r\n  access_key_id: <%= ENV.fetch(\"DIGITALOCEAN_S3_ACCESS_KEY_ID\") %>\r\n  secret_access_key: <%= ENV.fetch(\"DIGITALOCEAN_S3_ACCESS_KEY_SECRET\") %>\r\n  bucket: <%= ENV.fetch(\"DIGITALOCEAN_S3_BUCKET_NAME\") %>\r\n  endpoint: <%= ENV.fetch(\"DIGITALOCEAN_S3_ENDPOINT\") %>\r\n```\r\n\r\nenabled with \r\n\r\n```\r\n# config/environments/development.rb\r\nconfig.active_storage.service = :digitalocean\r\n```\r\n\r\nhaving a User model with \r\n\r\n```ruby\r\nhas_one_attached :avatar do |attachable|\r\n  attachable.variant(:thumb, resize_to_fill: [350, 350])\r\nend\r\n```\r\n\r\nAfter uploading a file from the edit form the variant gets created when accessing the show view. \r\n\r\nLogs look like this\r\n\r\n```\r\nActiveStorage::VariantRecord Create (1.8ms)  INSERT INTO \"active_storage_variant_records\" (\"blob_id\", \"variation_digest\") VALUES ($1, $2) RETURNING \"id\"  [[\"blob_id\", 116], [\"variation_digest\", \"cAfAf5iAxm52Ff0Mw7wXY2F9d4A=\"]]\r\nActiveStorage::Blob Load (1.2ms)  SELECT \"active_storage_blobs\".* FROM \"active_storage_blobs\" INNER JOIN \"active_storage_attachments\" ON \"active_storage_blobs\".\"id\" = \"active_storage_attachments\".\"blob_id\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 51], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"name\", \"image\"], [\"LIMIT\", 1]]\r\nActiveStorage::Attachment Load (0.2ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 51], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"name\", \"image\"], [\"LIMIT\", 1]]\r\nActiveStorage::Blob Create (0.3ms)  INSERT INTO \"active_storage_blobs\" (\"key\", \"filename\", \"content_type\", \"metadata\", \"service_name\", \"byte_size\", \"checksum\", \"created_at\") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING \"id\"  [[\"key\", \"1dousqzwcx79wlpkfn0o0f1sjfci\"], [\"filename\", \"sigma-16mm.jpg\"], [\"content_type\", \"image/jpeg\"], [\"metadata\", \"{\\\"identified\\\":true}\"], [\"service_name\", \"digitalocean\"], [\"byte_size\", 52716], [\"checksum\", \"d9vmvbLEGDR2ZLzl7XNgUg==\"], [\"created_at\", \"2024-01-04 17:49:27.381653\"]]\r\nActiveStorage::Attachment Create (0.4ms)  INSERT INTO \"active_storage_attachments\" (\"name\", \"record_type\", \"record_id\", \"blob_id\", \"created_at\") VALUES ($1, $2, $3, $4, $5) RETURNING \"id\"  [[\"name\", \"image\"], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"record_id\", 51], [\"blob_id\", 117], [\"created_at\", \"2024-01-04 17:49:27.382925\"]]\r\nTRANSACTION (0.4ms)  COMMIT\r\nS3 Storage (120.4ms) Uploaded file to key: 1dousqzwcx79wlpkfn0o0f1sjfci (checksum: d9vmvbLEGDR2ZLzl7XNgUg==)\r\n```\r\n\r\nAttachments are being displayed, everything is fine, until deleting an attachment where I get the following exception\r\n\r\n```\r\nDEBUG -- :   TRANSACTION (0.2ms)  BEGIN\r\nDEBUG -- :   ActiveStorage::Attachment Exists? (1.7ms)  SELECT 1 AS one FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"blob_id\" = $1 LIMIT $2  [[\"blob_id\", 119], [\"LIMIT\", 1]]\r\nDEBUG -- :   ActiveStorage::VariantRecord Load (0.5ms)  SELECT \"active_storage_variant_records\".* FROM \"active_storage_variant_records\" WHERE \"active_storage_variant_records\".\"blob_id\" = $1  [[\"blob_id\", 119]]\r\nDEBUG -- :   ActiveStorage::Attachment Load (0.8ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 119], [\"record_type\", \"ActiveStorage::Blob\"], [\"name\", \"preview_image\"], [\"LIMIT\", 1]]\r\nDEBUG -- :   ActiveStorage::Blob Destroy (1.4ms)  DELETE FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = $1  [[\"id\", 119]]\r\nDEBUG -- :   TRANSACTION (6.7ms)  COMMIT\r\n INFO -- :   S3 Storage (100.6ms) Deleted file from key: 5qag8y7y3qqol4wrgo9iapy2z8oy\r\n INFO -- :   S3 Storage (38.1ms) Deleted files by key prefix: variants/5qag8y7y3qqol4wrgo9iapy2z8oy/\r\nERROR -- : Error performing ActiveStorage::PurgeJob (Job ID: 508059d0-a343-4377-ae75-c89195417e61) from Sidekiq(default) in 161.91ms: Aws::S3::Errors::NoSuchKey (Aws::S3::Errors::NoSuchKey):\r\n```\r\n\r\nI see this error twice in my logs. One time for the original and one time for the variant.\r\n\r\nActive Storage uploads the blobs without any prefix. See logs on top. \r\n\r\nAm I doing something wrong? Is my application not configured correctly? What am I missing? Thank you \ud83d\ude4f \r\n\r\n### Expected behavior\r\n\r\nDeleting an attachment should not throw errors\r\n\r\nVariants are being uploaded to a `variants` subfolder \r\n\r\n### Actual behavior\r\n\r\nDeleting an attachment throws an `Aws::S3::Errors::NoSuchKey (Aws::S3::Errors::NoSuchKey)` error as with the used key `variants/5qag8y7y3qqol4wrgo9iapy2z8oy/` no objects can be found.\r\n\r\nThis is where Active Storage tries to delete the prefixed variants which have never been created before: https://github.com/rails/rails/blob/main/activestorage/app/models/active_storage/blob.rb#L325\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50583/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50583/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50580",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50580/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50580/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50580/events",
        "html_url": "https://github.com/rails/rails/pull/50580",
        "id": 2065925947,
        "node_id": "PR_kwDNIULOYzzsDw",
        "number": 50580,
        "title": "Port `ActiveRecord::AttributeMethods::Query` to Active Model",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            },
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-04T16:07:32Z",
        "updated_at": "2024-01-04T17:01:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50580",
            "html_url": "https://github.com/rails/rails/pull/50580",
            "diff_url": "https://github.com/rails/rails/pull/50580.diff",
            "patch_url": "https://github.com/rails/rails/pull/50580.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nRelated to https://github.com/rails/rails/issues/50568\r\n\r\nThe backport of [type_for_attribute][] from Active Record to Active Model enables the backport of `ActiveRecord::AttributeMethods::Query` to define predicate methods for both Active Model and Active Record using the same code paths.\r\n\r\n### Detail\r\n\r\nThis commit renames `Active{Record,Model}::AttributeMethods::Query` then includes it into both into the original\r\n`ActiveRecord::AttributeMethods::Query` and into\r\n`ActiveModel::Attributes` by default.\r\n\r\nThe test coverage was copied directly from the [Active Record test suite][], then modified to work in a database-less environment.\r\n\r\n### Additional information\r\n\r\nThe `_query_attribute` method defined in\r\n`ActiveRecord::AttributeMethods::Query` is specific to Active Record, so do not include it in the migration.\r\n\r\n[type_for_attribute]: https://github.com/rails/rails/commit/83f543b8760308081ab1b58c25804c45c2597844\r\n[Active Record test suite]: https://github.com/rails/rails/blob/a73cbbea6a082cdd320ecc92e3c6f1d46fe6af74/activerecord/test/cases/attribute_methods_test.rb#L494-L596\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50580/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50579",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50579/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50579/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50579/events",
        "html_url": "https://github.com/rails/rails/issues/50579",
        "id": 2065896582,
        "node_id": "I_kwDNIULOeyMUhg",
        "number": 50579,
        "title": "CI: SQLite adapter is running in Trilogy tests",
        "user": {
            "login": "skipkayhil",
            "id": 6014046,
            "node_id": "MDQ6VXNlcjYwMTQwNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6014046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skipkayhil",
            "html_url": "https://github.com/skipkayhil",
            "followers_url": "https://api.github.com/users/skipkayhil/followers",
            "following_url": "https://api.github.com/users/skipkayhil/following{/other_user}",
            "gists_url": "https://api.github.com/users/skipkayhil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skipkayhil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skipkayhil/subscriptions",
            "organizations_url": "https://api.github.com/users/skipkayhil/orgs",
            "repos_url": "https://api.github.com/users/skipkayhil/repos",
            "events_url": "https://api.github.com/users/skipkayhil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skipkayhil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 776781281,
                "node_id": "MDU6TGFiZWw3NzY3ODEyODE=",
                "url": "https://api.github.com/repos/rails/rails/labels/ci%20issues",
                "name": "ci issues",
                "color": "aaafff",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-04T15:49:54Z",
        "updated_at": "2024-01-04T15:56:29Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Ref #49373\r\n\r\nhttps://buildkite.com/rails/rails/builds/103367#018cd514-4e51-4bac-be7c-c8656888c21e\r\n\r\nI'm pretty sure this means that some other test is leaking, but I have not dug in at all.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50579/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50958",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50958/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50958/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50958/events",
        "html_url": "https://github.com/rails/rails/pull/50958",
        "id": 2116092234,
        "node_id": "PR_kwDNIULOZeUV5A",
        "number": 50958,
        "title": "Add missing alias to errors array",
        "user": {
            "login": "laomatt",
            "id": 9632282,
            "node_id": "MDQ6VXNlcjk2MzIyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9632282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laomatt",
            "html_url": "https://github.com/laomatt",
            "followers_url": "https://api.github.com/users/laomatt/followers",
            "following_url": "https://api.github.com/users/laomatt/following{/other_user}",
            "gists_url": "https://api.github.com/users/laomatt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laomatt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laomatt/subscriptions",
            "organizations_url": "https://api.github.com/users/laomatt/orgs",
            "repos_url": "https://api.github.com/users/laomatt/repos",
            "events_url": "https://api.github.com/users/laomatt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laomatt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-03T01:01:09Z",
        "updated_at": "2024-02-03T01:01:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50958",
            "html_url": "https://github.com/rails/rails/pull/50958",
            "diff_url": "https://github.com/rails/rails/pull/50958.diff",
            "patch_url": "https://github.com/rails/rails/pull/50958.patch",
            "merged_at": null
        },
        "body": "it used to be that the << operator was able to add error messages during the validation process, this restores that functionality.\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because errors in active record validations seem to be missing the << functionality it used to have\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the array returned by ar errors\r\n\r\n### Additional information\r\n\r\nJust wanted to restore the alias of >> to 'add'\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50958/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50954",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50954/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50954/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50954/events",
        "html_url": "https://github.com/rails/rails/issues/50954",
        "id": 2115098687,
        "node_id": "I_kwDNIULOfhHYPw",
        "number": 50954,
        "title": "esbuild precompilation error in rails 7.1.3",
        "user": {
            "login": "PhilippGsell",
            "id": 58818799,
            "node_id": "MDQ6VXNlcjU4ODE4Nzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58818799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PhilippGsell",
            "html_url": "https://github.com/PhilippGsell",
            "followers_url": "https://api.github.com/users/PhilippGsell/followers",
            "following_url": "https://api.github.com/users/PhilippGsell/following{/other_user}",
            "gists_url": "https://api.github.com/users/PhilippGsell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PhilippGsell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PhilippGsell/subscriptions",
            "organizations_url": "https://api.github.com/users/PhilippGsell/orgs",
            "repos_url": "https://api.github.com/users/PhilippGsell/repos",
            "events_url": "https://api.github.com/users/PhilippGsell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PhilippGsell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T14:43:34Z",
        "updated_at": "2024-02-02T14:43:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\ncreate a new rails 7.1.3 Project with esbuild.\r\n```bash\r\n rails new app --javascript esbuild\r\n```\r\nand try to build the docker image without doing any changes\r\n```bash\r\ndocker build -f Dockerfile -t app_test . && docker run -p 3000:3000 -v .:/rails app_test --env RAILS_MASTER_KEY=xxx\r\n```\r\n\r\n### Expected behavior\r\nThe image should build\r\n\r\n### Actual behavior\r\nyarn throws an error while precompiling the assets.\r\n\r\nyarn run v1.22.21\r\n$ esbuild app/javascript/*.* --bundle --sourcemap --format=esm --outdir=app/assets/builds --public-path=/assets\r\n\u2718 [ERROR] Could not resolve \"@hotwired/turbo-rails\"\r\n\r\n    app/javascript/application.js:2:7:\r\n      2 \u2502 import \"@hotwired/turbo-rails\"\r\n      The command '/bin/sh -c SECRET_KEY_BASE_DUMMY=1 ./bin/rails assets:precompile' returned a non-zero code: 1\r\n\r\n### System configuration\r\n**Ubuntu version**: 22.04\r\n\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.0.2p107 (2021-07-07 revision 0db68f0233) [x86_64-linux-gnu]\r\n\r\n**gem --version**: 3.3.5\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50953",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50953/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50953/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50953/events",
        "html_url": "https://github.com/rails/rails/pull/50953",
        "id": 2114861781,
        "node_id": "PR_kwDNIULOZdP1vw",
        "number": 50953,
        "title": "Add webp as a default to active_storage.web_image_content_types",
        "user": {
            "login": "lewispb",
            "id": 1773614,
            "node_id": "MDQ6VXNlcjE3NzM2MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1773614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lewispb",
            "html_url": "https://github.com/lewispb",
            "followers_url": "https://api.github.com/users/lewispb/followers",
            "following_url": "https://api.github.com/users/lewispb/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewispb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lewispb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewispb/subscriptions",
            "organizations_url": "https://api.github.com/users/lewispb/orgs",
            "repos_url": "https://api.github.com/users/lewispb/repos",
            "events_url": "https://api.github.com/users/lewispb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lewispb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-02T12:51:26Z",
        "updated_at": "2024-02-02T17:19:56Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50953",
            "html_url": "https://github.com/rails/rails/pull/50953",
            "diff_url": "https://github.com/rails/rails/pull/50953.diff",
            "patch_url": "https://github.com/rails/rails/pull/50953.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nCustomers are uploading webp images to our app, and expect them to be rendered just like other images, instead of being converted to the fallback PNG format.\r\n\r\n### Detail\r\n\r\nFollows https://github.com/rails/rails/pull/38918 and https://github.com/rails/rails/pull/38988. At the time, webp browser support was limited. Now 96% of browsers support webp: https://caniuse.com/?search=webp\r\n\r\nThis PR adds webp as a default image type.\r\n\r\n### Additional information\r\n\r\nI think this is a sensible default in 2024, but alternatively each Rails app may choose:\r\n\r\n```\r\nRails.application.configure do\r\n  config.active_storage.web_image_content_types << \"image/webp\"\r\nend\r\n```\r\n\r\n**Changelog**\r\n\r\nI've not added a changelog entry in line with https://github.com/rails/rails/pull/38918#discussion_r410527726, but I'd be happy to add one if it's felt useful now.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\ncc @jeremy \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50953/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50951",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50951/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50951/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50951/events",
        "html_url": "https://github.com/rails/rails/pull/50951",
        "id": 2114685245,
        "node_id": "PR_kwDNIULOZdGIPQ",
        "number": 50951,
        "title": "set default_enforce_utf8 to false",
        "user": {
            "login": "ironsand",
            "id": 4509402,
            "node_id": "MDQ6VXNlcjQ1MDk0MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4509402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ironsand",
            "html_url": "https://github.com/ironsand",
            "followers_url": "https://api.github.com/users/ironsand/followers",
            "following_url": "https://api.github.com/users/ironsand/following{/other_user}",
            "gists_url": "https://api.github.com/users/ironsand/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ironsand/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ironsand/subscriptions",
            "organizations_url": "https://api.github.com/users/ironsand/orgs",
            "repos_url": "https://api.github.com/users/ironsand/repos",
            "events_url": "https://api.github.com/users/ironsand/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ironsand/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-02T11:11:21Z",
        "updated_at": "2024-02-03T08:41:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50951",
            "html_url": "https://github.com/rails/rails/pull/50951",
            "diff_url": "https://github.com/rails/rails/pull/50951.diff",
            "patch_url": "https://github.com/rails/rails/pull/50951.patch",
            "merged_at": null
        },
        "body": "`enforce_utf8` is false by deault in `form_for` #30852\r\nWe normally don't need to consider old IE anymore.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50951/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50950",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50950/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50950/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50950/events",
        "html_url": "https://github.com/rails/rails/pull/50950",
        "id": 2114677525,
        "node_id": "PR_kwDNIULOZdFtKw",
        "number": 50950,
        "title": "Add class name to enum validation exception message",
        "user": {
            "login": "amkisko",
            "id": 54796266,
            "node_id": "MDQ6VXNlcjU0Nzk2MjY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54796266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amkisko",
            "html_url": "https://github.com/amkisko",
            "followers_url": "https://api.github.com/users/amkisko/followers",
            "following_url": "https://api.github.com/users/amkisko/following{/other_user}",
            "gists_url": "https://api.github.com/users/amkisko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amkisko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amkisko/subscriptions",
            "organizations_url": "https://api.github.com/users/amkisko/orgs",
            "repos_url": "https://api.github.com/users/amkisko/repos",
            "events_url": "https://api.github.com/users/amkisko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amkisko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T11:07:18Z",
        "updated_at": "2024-02-02T11:08:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50950",
            "html_url": "https://github.com/rails/rails/pull/50950",
            "diff_url": "https://github.com/rails/rails/pull/50950.diff",
            "patch_url": "https://github.com/rails/rails/pull/50950.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nIn general validation errors should include more information on where it has happened.\r\n\r\n### Detail\r\n\r\nThis PR updates `activerecord/lib/active_record/enum.rb` validation exception message and just adds class name.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50950/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50949",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50949/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50949/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50949/events",
        "html_url": "https://github.com/rails/rails/pull/50949",
        "id": 2114653503,
        "node_id": "PR_kwDNIULOZdEYOA",
        "number": 50949,
        "title": "Add a Rails Guide for tuning performance for deployment",
        "user": {
            "login": "noahgibbs",
            "id": 82408,
            "node_id": "MDQ6VXNlcjgyNDA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/82408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noahgibbs",
            "html_url": "https://github.com/noahgibbs",
            "followers_url": "https://api.github.com/users/noahgibbs/followers",
            "following_url": "https://api.github.com/users/noahgibbs/following{/other_user}",
            "gists_url": "https://api.github.com/users/noahgibbs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noahgibbs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noahgibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/noahgibbs/orgs",
            "repos_url": "https://api.github.com/users/noahgibbs/repos",
            "events_url": "https://api.github.com/users/noahgibbs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noahgibbs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T10:55:44Z",
        "updated_at": "2024-02-02T15:02:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50949",
            "html_url": "https://github.com/rails/rails/pull/50949",
            "diff_url": "https://github.com/rails/rails/pull/50949.diff",
            "patch_url": "https://github.com/rails/rails/pull/50949.patch",
            "merged_at": null
        },
        "body": "This pull request adds a new Rails Guide called \"Tuning Performance for Deployment\".\r\n\r\n### Motivation / Background\r\n\r\nA few weeks ago there was [an issue to change the default thread count for Puma in Rails](https://github.com/rails/rails/issues/50450) and [a PR to make that change](https://github.com/rails/rails/pull/50669).\r\n\r\nThe PR mentioned that a performance tuning guide would be the right way to document some issues, but no such guide exists. I wrote a basic guide and incorporated a lot of feedback from @byroot (Jean Boussier), who wrote the thread count PR.\r\n\r\nThis pull request adds the suggested Rails Guide.\r\n\r\nCC @nateberkopec - though I know you're very busy right now :-)\r\n\r\n### Detail\r\n\r\nIt's impossible to have a detailed guide for all possible Rails deployment options. This guide focuses on Puma (the default server) and CRuby, and on giving a good start to people who don't already know deployment well. I've tried to mention core performance issues without explaining every possible configuration change.\r\n\r\nNext time there is a deployment configuration change, there will be a place to document the tradeoffs.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50949/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50948",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50948/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50948/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50948/events",
        "html_url": "https://github.com/rails/rails/issues/50948",
        "id": 2114571381,
        "node_id": "I_kwDNIULOfgnMdQ",
        "number": 50948,
        "title": "Destroying bi-directional has_one through association only works from one end",
        "user": {
            "login": "airblade",
            "id": 7265,
            "node_id": "MDQ6VXNlcjcyNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7265?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/airblade",
            "html_url": "https://github.com/airblade",
            "followers_url": "https://api.github.com/users/airblade/followers",
            "following_url": "https://api.github.com/users/airblade/following{/other_user}",
            "gists_url": "https://api.github.com/users/airblade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/airblade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/airblade/subscriptions",
            "organizations_url": "https://api.github.com/users/airblade/orgs",
            "repos_url": "https://api.github.com/users/airblade/repos",
            "events_url": "https://api.github.com/users/airblade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/airblade/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T10:14:36Z",
        "updated_at": "2024-02-02T10:14:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Summary\r\n\r\nGiven a `has_one :through` association with `dependent: :destroy`, destroying the parent destroys the through record and the far end.  However if the association is bi-directional, destroying only works from one end \u2013 and the end which succeeds depends on the order of `belongs_to` declarations in the join model.  I believe it should work from both ends.\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :lefts, force: true do |t|\r\n  end\r\n\r\n  create_table :rights, force: true do |t|\r\n  end\r\n\r\n  create_table :middles, force: true do |t|\r\n    t.references :left, foreign_key: true\r\n    t.references :right, foreign_key: true\r\n  end\r\nend\r\n\r\nclass Left < ActiveRecord::Base\r\n  has_one :middle, dependent: :destroy\r\n  has_one :right, through: :middle\r\nend\r\n\r\nclass Middle < ActiveRecord::Base\r\n  belongs_to :left, dependent: :destroy\r\n  belongs_to :right, dependent: :destroy\r\nend\r\n\r\nclass Right < ActiveRecord::Base\r\n  has_one :middle, dependent: :destroy\r\n  has_one :left, through: :middle\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_destroying_left_destroys_right\r\n    left = Left.create!\r\n    right = Right.create!\r\n    middle = Middle.create! left: left, right: right\r\n\r\n    left.destroy\r\n    assert right.destroyed?\r\n  end\r\n\r\n  def test_destroying_right_destroys_left\r\n    left = Left.create!\r\n    right = Right.create!\r\n    middle = Middle.create! left: left, right: right\r\n\r\n    right.destroy\r\n    assert left.destroyed?\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect:\r\n\r\n- `left.destroy` to also destroy its `middle` and its `right`\r\n- `right.destroy` to also destroy its `middle` and its `left`\r\n\r\n### Actual behavior\r\n\r\n- `right.destroy` destroys its `middle` and its `left`\r\n-  `left.destroy` destroys its `middle` but does not destroy its `right`\r\n\r\nHowever if I reverse the order of `Middle`'s `belongs_to` declarations, `right.destroy` stops working and `left.destroy` starts working.\r\n\r\n### Patch\r\n\r\nThis patch fixes the behaviour and does not break any existing tests (via `bundle exec rake test:sqlite3`):\r\n\r\n```diff\r\ndiff --git i/activerecord/lib/active_record/callbacks.rb w/activerecord/lib/active_record/callbacks.rb\r\nindex 29c72d1024..6e9c68b747 100644\r\n--- i/activerecord/lib/active_record/callbacks.rb\r\n+++ w/activerecord/lib/active_record/callbacks.rb\r\n@@ -418,7 +418,7 @@ module ClassMethods\r\n \r\n     def destroy # :nodoc:\r\n       @_destroy_callback_already_called ||= false\r\n-      return if @_destroy_callback_already_called\r\n+      return true if @_destroy_callback_already_called\r\n       @_destroy_callback_already_called = true\r\n       _run_destroy_callbacks { super }\r\n     rescue RecordNotDestroyed => e\r\n```\r\n\r\nCredit for the patch belongs to [Alex](https://stackoverflow.com/users/207090/alex).\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.3.0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50947",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50947/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50947/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50947/events",
        "html_url": "https://github.com/rails/rails/issues/50947",
        "id": 2114046969,
        "node_id": "I_kwDNIULOfgHL-Q",
        "number": 50947,
        "title": "ActiveStorage::IntegrityError (ActiveStorage::IntegrityError)",
        "user": {
            "login": "raoehtesham03",
            "id": 152256436,
            "node_id": "U_kgDOCRM_tA",
            "avatar_url": "https://avatars.githubusercontent.com/u/152256436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoehtesham03",
            "html_url": "https://github.com/raoehtesham03",
            "followers_url": "https://api.github.com/users/raoehtesham03/followers",
            "following_url": "https://api.github.com/users/raoehtesham03/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoehtesham03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoehtesham03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoehtesham03/subscriptions",
            "organizations_url": "https://api.github.com/users/raoehtesham03/orgs",
            "repos_url": "https://api.github.com/users/raoehtesham03/repos",
            "events_url": "https://api.github.com/users/raoehtesham03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoehtesham03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T04:43:40Z",
        "updated_at": "2024-02-02T04:43:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have upgraded my rails application from 5.2 to 6.0 and then 6.0 to 7.0 . So, I am getting ActiveStorage::IntegrityError (ActiveStorage::IntegrityError) while I am trying to get -\r\n```ruby\r\n attachment.variant(resize_to_limit: resize).processed.url\r\n```\r\n\r\n### Expected behavior\r\nIt should not give this error.\r\n\r\n### Actual behavior\r\nGetting this  ActiveStorage::IntegrityError (ActiveStorage::IntegrityError) Error.\r\n\r\n### System configuration\r\n**Rails version**: 3.0.6\r\n\r\n**Ruby version**:  7.0.8\r\n\r\n\r\nPlease provide me the solution to resolve this problem I am stuck on it since a week.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50947/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50947/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50946",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50946/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50946/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50946/events",
        "html_url": "https://github.com/rails/rails/pull/50946",
        "id": 2113959017,
        "node_id": "PR_kwDNIULOZceF3g",
        "number": 50946,
        "title": "Fix error raised when running `db:schema:load:#{name}` and test DB config is missing",
        "user": {
            "login": "ricardotk002",
            "id": 3733470,
            "node_id": "MDQ6VXNlcjM3MzM0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3733470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ricardotk002",
            "html_url": "https://github.com/ricardotk002",
            "followers_url": "https://api.github.com/users/ricardotk002/followers",
            "following_url": "https://api.github.com/users/ricardotk002/following{/other_user}",
            "gists_url": "https://api.github.com/users/ricardotk002/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ricardotk002/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ricardotk002/subscriptions",
            "organizations_url": "https://api.github.com/users/ricardotk002/orgs",
            "repos_url": "https://api.github.com/users/ricardotk002/repos",
            "events_url": "https://api.github.com/users/ricardotk002/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ricardotk002/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T03:17:31Z",
        "updated_at": "2024-02-02T14:50:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50946",
            "html_url": "https://github.com/rails/rails/pull/50946",
            "diff_url": "https://github.com/rails/rails/pull/50946.diff",
            "patch_url": "https://github.com/rails/rails/pull/50946.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFixes #50672\r\n\r\n### Detail\r\n\r\nThe task `db:schema:load:#{name}` depends on `db:test:purge:#{name}` since adb64db which requires the DB config to be present, otherwise an error is raised.\r\n\r\n```\r\n$ bin/rails db:schema:load:one --trace\r\n** Invoke db:schema:load:one (first_time)\r\n** Invoke db:test:purge:one (first_time)\r\n** Invoke db:load_config (first_time)\r\n** Invoke environment (first_time)\r\n** Execute environment\r\n** Execute db:load_config\r\n** Invoke db:check_protected_environments (first_time) ** Invoke db:load_config\r\n** Execute db:check_protected_environments\r\n** Execute db:test:purge:one\r\n** Execute db:schema:load:one\r\n```\r\n\r\nThis commit fixes the problem by returning early when the DB config is indeed missing.\r\n\r\n### Additional information\r\n\r\nThe task `db:schema:load` may need to be updated to depend on `db:test:purge` too, to keep it consistent with `db:schema:load:#{name}`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50946/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50945",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50945/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50945/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50945/events",
        "html_url": "https://github.com/rails/rails/pull/50945",
        "id": 2113809897,
        "node_id": "PR_kwDNIULOZcV_yg",
        "number": 50945,
        "title": "Introduce today_or_future? method",
        "user": {
            "login": "olimart",
            "id": 547754,
            "node_id": "MDQ6VXNlcjU0Nzc1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/547754?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olimart",
            "html_url": "https://github.com/olimart",
            "followers_url": "https://api.github.com/users/olimart/followers",
            "following_url": "https://api.github.com/users/olimart/following{/other_user}",
            "gists_url": "https://api.github.com/users/olimart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olimart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olimart/subscriptions",
            "organizations_url": "https://api.github.com/users/olimart/orgs",
            "repos_url": "https://api.github.com/users/olimart/repos",
            "events_url": "https://api.github.com/users/olimart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olimart/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T00:44:50Z",
        "updated_at": "2024-02-02T00:44:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50945",
            "html_url": "https://github.com/rails/rails/pull/50945",
            "diff_url": "https://github.com/rails/rails/pull/50945.diff",
            "patch_url": "https://github.com/rails/rails/pull/50945.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request introduces a convenient helper to check if a date/time is either today or in the future.\r\n\r\nDrawing inspiration from https://github.com/rails/rails/pull/46786 which introduces `.local?` helper for environment check.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes:\r\n- `ActiveSupport::TimeWithZone`\r\n-  `DateAndTime::Calculations`\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50944",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50944/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50944/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50944/events",
        "html_url": "https://github.com/rails/rails/pull/50944",
        "id": 2113736717,
        "node_id": "PR_kwDNIULOZcR4oQ",
        "number": 50944,
        "title": "Enable DependencyTracker to evaluate interpolated paths",
        "user": {
            "login": "skipkayhil",
            "id": 6014046,
            "node_id": "MDQ6VXNlcjYwMTQwNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6014046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skipkayhil",
            "html_url": "https://github.com/skipkayhil",
            "followers_url": "https://api.github.com/users/skipkayhil/followers",
            "following_url": "https://api.github.com/users/skipkayhil/following{/other_user}",
            "gists_url": "https://api.github.com/users/skipkayhil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skipkayhil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skipkayhil/subscriptions",
            "organizations_url": "https://api.github.com/users/skipkayhil/orgs",
            "repos_url": "https://api.github.com/users/skipkayhil/repos",
            "events_url": "https://api.github.com/users/skipkayhil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skipkayhil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T23:46:28Z",
        "updated_at": "2024-02-02T19:50:39Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50944",
            "html_url": "https://github.com/rails/rails/pull/50944",
            "diff_url": "https://github.com/rails/rails/pull/50944.diff",
            "patch_url": "https://github.com/rails/rails/pull/50944.patch",
            "merged_at": null
        },
        "body": "Previously, neither the PrismRenderParser nor the RipperRenderParser would consider an interpolated string as a dependency. The RubyTracker even included a line to explcitly filter out interpolated paths returned from the RipperRenderParser since they would end in a \"/\". However, the RubyTracker does include the ability to evaluate explicit \"Template Dependency\" comments with wildcard nodes.\r\n\r\nThis commit extends the RipperRenderParser and PrismRenderParser to convert interpolated strings into wildcard globs. Additionally, it changes the RubyTracker to evaluate wildcards the same for both implicit and explicit dependencies. This enables the RubyTracker to identify potential dependencies for interpolated renders, which it was previously unable to do.\r\n\r\ncc @jhawthorn if you think this is a good idea I can try to apply it to ActionView::Precompiler as well\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50944/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50943",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50943/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50943/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50943/events",
        "html_url": "https://github.com/rails/rails/pull/50943",
        "id": 2113672199,
        "node_id": "PR_kwDNIULOZcOUzA",
        "number": 50943,
        "title": "Setup jemalloc in default Dockerfile to optimize memory allocation",
        "user": {
            "login": "northeastprince",
            "id": 55164724,
            "node_id": "MDQ6VXNlcjU1MTY0NzI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/55164724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/northeastprince",
            "html_url": "https://github.com/northeastprince",
            "followers_url": "https://api.github.com/users/northeastprince/followers",
            "following_url": "https://api.github.com/users/northeastprince/following{/other_user}",
            "gists_url": "https://api.github.com/users/northeastprince/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/northeastprince/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/northeastprince/subscriptions",
            "organizations_url": "https://api.github.com/users/northeastprince/orgs",
            "repos_url": "https://api.github.com/users/northeastprince/repos",
            "events_url": "https://api.github.com/users/northeastprince/events{/privacy}",
            "received_events_url": "https://api.github.com/users/northeastprince/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T22:55:15Z",
        "updated_at": "2024-02-01T22:59:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50943",
            "html_url": "https://github.com/rails/rails/pull/50943",
            "diff_url": "https://github.com/rails/rails/pull/50943.diff",
            "patch_url": "https://github.com/rails/rails/pull/50943.patch",
            "merged_at": null
        },
        "body": "[Ruby's use of `malloc` can create memory fragmentation problems, especially when using multiple threads](https://www.speedshop.co/2017/12/04/malloc-doubles-ruby-memory.html) like Puma does. Switching to an allocator that uses different patterns to avoid fragmentation can decrease memory usage by a substantial margin.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50943/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50941",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50941/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50941/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50941/events",
        "html_url": "https://github.com/rails/rails/pull/50941",
        "id": 2113553144,
        "node_id": "PR_kwDNIULOZcHmFg",
        "number": 50941,
        "title": "Retry `ActionableError`s when running tests",
        "user": {
            "login": "andrewn617",
            "id": 39735028,
            "node_id": "MDQ6VXNlcjM5NzM1MDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/39735028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewn617",
            "html_url": "https://github.com/andrewn617",
            "followers_url": "https://api.github.com/users/andrewn617/followers",
            "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewn617/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewn617/orgs",
            "repos_url": "https://api.github.com/users/andrewn617/repos",
            "events_url": "https://api.github.com/users/andrewn617/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewn617/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T21:50:43Z",
        "updated_at": "2024-02-02T14:23:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50941",
            "html_url": "https://github.com/rails/rails/pull/50941",
            "diff_url": "https://github.com/rails/rails/pull/50941.diff",
            "patch_url": "https://github.com/rails/rails/pull/50941.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I want to make it easier to retry actionable errors that occur when running tests. Rails already knows how to recover these errors, so lets make it possible for the user to recover from them and run their tests without exiting the process.\r\n\r\n### Detail\r\n\r\nAllow Actionable Errors encountered when running tests to be retried. This can be configured by `config.actionable_command_line_errors` and is `true` in the test environment unless the `\"CI\"` env variable is set, and false otherwise.\r\n\r\n    \r\n    Migrations are pending. To resolve this issue, run:\r\n    \r\n            bin/rails db:migrate\r\n    \r\n    You have 1 pending migration:\r\n    \r\n    db/migrate/20240201213806_add_a_to_b.rb\r\n    Run pending migrations? [Yn] Y\r\n    == 20240201213806 AddAToB: migrating =========================================\r\n    == 20240201213806 AddAToB: migrated (0.0000s) ================================\r\n    \r\n    Running 7 tests in a single process (parallelization threshold is 50)\r\n    Run options: --seed 22200\r\n    \r\n    # Running:\r\n    \r\n    .......\r\n    \r\n    Finished in 0.243394s, 28.7600 runs/s, 45.1942 assertions/s.\r\n    7 runs, 11 assertions, 0 failures, 0 errors, 0 skips\r\n    \r\n\r\n### Additional information\r\n\r\nRight now this is only implemented in the Test Runner, but I'd also like to follow up with a similar implementation for `Rails::Command::CorrectableNameError`s.\r\n\r\nAlso we could introduce a new framework default for the configuration if this is the direction in this PR is acceptable.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50941/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50939",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50939/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50939/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50939/events",
        "html_url": "https://github.com/rails/rails/issues/50939",
        "id": 2112729539,
        "node_id": "I_kwDNIULOfe2xww",
        "number": 50939,
        "title": "Should there be a RAILS_MASTER_KEY_DUMMY like SECRET_KEY_BASE_DUMMY?",
        "user": {
            "login": "dorianmariefr",
            "id": 58794487,
            "node_id": "MDQ6VXNlcjU4Nzk0NDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/58794487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dorianmariefr",
            "html_url": "https://github.com/dorianmariefr",
            "followers_url": "https://api.github.com/users/dorianmariefr/followers",
            "following_url": "https://api.github.com/users/dorianmariefr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dorianmariefr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dorianmariefr/subscriptions",
            "organizations_url": "https://api.github.com/users/dorianmariefr/orgs",
            "repos_url": "https://api.github.com/users/dorianmariefr/repos",
            "events_url": "https://api.github.com/users/dorianmariefr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dorianmariefr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T14:57:42Z",
        "updated_at": "2024-02-01T14:57:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nHave a rails app with `config.require_master_key = true`\r\n\r\n```\r\nRAILS_ENV=production SECRET_KEY_BASE_DUMMY=1 bin/rails assets:precompile\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt ignores the master key requirement?\r\n\r\n### Actual behavior\r\n\r\nError:\r\n\r\n```\r\nMissing encryption key to decrypt file with. Ask your team for your master key and write it to /rails/config/master.key or put it in the ENV['RAILS_MASTER_KEY'].\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.1.3\r\n**Ruby version**: ruby 3.2.3 (2024-01-18 revision 52bb2ac0a6) [arm64-darwin23]\r\n\r\n----\r\n\r\nWhat about a RAILS_MASTER_KEY_DUMMY=1?",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50939/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50938",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50938/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50938/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50938/events",
        "html_url": "https://github.com/rails/rails/pull/50938",
        "id": 2112546336,
        "node_id": "PR_kwDNIULOZbPi_A",
        "number": 50938,
        "title": "Refactor QueryCache to be owned by the pool",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T13:40:41Z",
        "updated_at": "2024-02-01T13:40:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50938",
            "html_url": "https://github.com/rails/rails/pull/50938",
            "diff_url": "https://github.com/rails/rails/pull/50938.diff",
            "patch_url": "https://github.com/rails/rails/pull/50938.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50793\r\n\r\nIf we want to stop caching the checked out connections, then we must persist the cache in the pool, and assign it to the connection when it's checked out.\r\n\r\nThe pool become responsible for managing the cache lifecycle.\r\n\r\nThis also open the door to sharing the cache between multiple connections, which is valuable for read replicas, etc.\r\n\r\nThis change only really make sense if we go through with no longer caching checked out connections. Otherwise it's just extra complexity.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50938/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50938/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50935",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50935/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50935/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50935/events",
        "html_url": "https://github.com/rails/rails/issues/50935",
        "id": 2112256299,
        "node_id": "I_kwDNIULOfeZ5Kw",
        "number": 50935,
        "title": "Add ability to see on which shard the migration is being run",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T11:23:15Z",
        "updated_at": "2024-02-01T22:51:30Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, when the app uses sharding and the migration is run, there is not way to tell on which shard it is being run.\r\nThis is a problem, because when the migration adds a unique index and we have some duplicates, the migration blows up (with a `ActiveRecord::RecordNotUnique` error) and there is no way to easily know on which shard exactly. \r\n\r\nThe problem can be solved in at least 2 ways:\r\n1. somehow `puts` shard info when running a migration\r\n2. we have a `connection_pool` object attached to the mentioned `ActiveRecord::RecordNotUnique` error (thanks to https://github.com/rails/rails/pull/48295), but the error message is not include this info (https://github.com/rails/rails/pull/48295#issuecomment-1570702063), so needs to fix that\r\n\r\nI would like to provide a PR, but need a suggestion on which path to choose. \r\n@byroot you helped to implement the linked PR, can you please suggest? ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50935/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50932",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50932/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50932/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50932/events",
        "html_url": "https://github.com/rails/rails/issues/50932",
        "id": 2111605159,
        "node_id": "I_kwDNIULOfdyJpw",
        "number": 50932,
        "title": "Rails 7.1 undefined method purge & same for variant using ruby 3.3.0-dev",
        "user": {
            "login": "kashifcodility",
            "id": 157491032,
            "node_id": "U_kgDOCWMfWA",
            "avatar_url": "https://avatars.githubusercontent.com/u/157491032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kashifcodility",
            "html_url": "https://github.com/kashifcodility",
            "followers_url": "https://api.github.com/users/kashifcodility/followers",
            "following_url": "https://api.github.com/users/kashifcodility/following{/other_user}",
            "gists_url": "https://api.github.com/users/kashifcodility/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kashifcodility/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kashifcodility/subscriptions",
            "organizations_url": "https://api.github.com/users/kashifcodility/orgs",
            "repos_url": "https://api.github.com/users/kashifcodility/repos",
            "events_url": "https://api.github.com/users/kashifcodility/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kashifcodility/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            },
            {
                "id": 1071962662,
                "node_id": "MDU6TGFiZWwxMDcxOTYyNjYy",
                "url": "https://api.github.com/repos/rails/rails/labels/more-information-needed",
                "name": "more-information-needed",
                "color": "bfdadc",
                "default": false,
                "description": "When reporter needs to provide more information"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-01T05:45:14Z",
        "updated_at": "2024-02-01T10:02:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "irb(main):047> image\r\n=> \r\n#<ActiveStorage::Attachment:0x00007ff81133c0a0\r\n id: 4,\r\n name: \"images\",\r\n record_type: \"News\",\r\n record_id: 2,\r\n blob_id: 4,\r\n created_at: Wed, 31 Jan 2024 12:00:01.463996000 UTC +00:00>\r\nirb(main):048> \r\nirb(main):049> \r\nirb(main):050> image.class\r\n=> ActiveStorage::Attachment(id: integer, name: string, record_type: string, record_id: integer, blob_id: integer, created_at: datetime)\r\nirb(main):051> \r\nirb(main):052> \r\nirb(main):053> \r\nirb(main):054> image.purge\r\n/home/lap-053/.rbenv/versions/3.3.0-dev/lib/ruby/gems/3.4.0+0/gems/activemodel-7.1.3/lib/active_model/attribute_methods.rb:489:in `method_missing': undefined method `purge' for an instance of ActiveStorage::Attachment (NoMethodError)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50932/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50930",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50930/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50930/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50930/events",
        "html_url": "https://github.com/rails/rails/issues/50930",
        "id": 2111351021,
        "node_id": "I_kwDNIULOfdio7Q",
        "number": 50930,
        "title": "Rails 7.1 doesn't render Enumerator in view correctly",
        "user": {
            "login": "kuwabarahiroshi",
            "id": 816749,
            "node_id": "MDQ6VXNlcjgxNjc0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/816749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kuwabarahiroshi",
            "html_url": "https://github.com/kuwabarahiroshi",
            "followers_url": "https://api.github.com/users/kuwabarahiroshi/followers",
            "following_url": "https://api.github.com/users/kuwabarahiroshi/following{/other_user}",
            "gists_url": "https://api.github.com/users/kuwabarahiroshi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kuwabarahiroshi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kuwabarahiroshi/subscriptions",
            "organizations_url": "https://api.github.com/users/kuwabarahiroshi/orgs",
            "repos_url": "https://api.github.com/users/kuwabarahiroshi/repos",
            "events_url": "https://api.github.com/users/kuwabarahiroshi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kuwabarahiroshi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T02:21:08Z",
        "updated_at": "2024-02-01T02:22:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Prior to Rails 7.1, returning an Enumerator in a view rendered the content correctly. However, starting from Rails 7.1, it appears to render only the Enumerator's string representation (Enumerator#to_s), resulting in a response like `\"#<Enumerator:0xXXXXXX>\"`.\r\n\r\nSetting `self.response_body = Enumerator.new` in an action works for both 7.0 and 7.1 (fixed in https://github.com/rails/rails/issues/49588).\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # gem \"rails\", \"~> 7.0.0\" # => works\r\n  gem \"rails\", \"~> 7.1.0\" # => fails\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"enumerator_in_action\", controller: :test\r\n    get \"enumerator_in_view\", controller: :test\r\n  end\r\nend\r\n\r\nclass TestController < ActionController::Base\r\n  def enumerator_in_action\r\n    self.response_body = Enumerator.new do |buff|\r\n      10.times { buff << _1.to_s }\r\n    end\r\n  end\r\n\r\n  def enumerator_in_view\r\n    render inline: <<~EOS, layout: false, type: :ruby\r\n      Enumerator.new do |buff|\r\n        10.times { buff << _1.to_s }\r\n      end\r\n    EOS\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def test_enumerator_in_action\r\n    get \"/enumerator_in_action\"\r\n    assert_equal \"0123456789\", last_response.body\r\n  end\r\n\r\n  def test_enumerator_in_view\r\n    get \"/enumerator_in_view\"\r\n    assert_equal \"0123456789\", last_response.body\r\n  end\r\n\r\n  private\r\n\r\n    def app\r\n      Rails.application\r\n    end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe content should be rendered by evaluating the Enumerator.\r\n\r\nI'm not sure whether it is guaranteed behavior in specification when it's returned from view, but I expect it works as was the case until Rails 7.0.\r\n\r\n### Actual behavior\r\n\r\nIt currently renders the Enumerator's string representation, such as \"#<Enumerator:0xXXXXXX>\".\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50930/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50928",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50928/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50928/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50928/events",
        "html_url": "https://github.com/rails/rails/pull/50928",
        "id": 2110751556,
        "node_id": "PR_kwDNIULOZZsk5w",
        "number": 50928,
        "title": "Fixes race condition for multiple preprocessed video variants",
        "user": {
            "login": "searls",
            "id": 79303,
            "node_id": "MDQ6VXNlcjc5MzAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/79303?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/searls",
            "html_url": "https://github.com/searls",
            "followers_url": "https://api.github.com/users/searls/followers",
            "following_url": "https://api.github.com/users/searls/following{/other_user}",
            "gists_url": "https://api.github.com/users/searls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/searls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/searls/subscriptions",
            "organizations_url": "https://api.github.com/users/searls/orgs",
            "repos_url": "https://api.github.com/users/searls/repos",
            "events_url": "https://api.github.com/users/searls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/searls/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-31T18:49:44Z",
        "updated_at": "2024-02-01T02:00:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50928",
            "html_url": "https://github.com/rails/rails/pull/50928",
            "diff_url": "https://github.com/rails/rails/pull/50928.diff",
            "patch_url": "https://github.com/rails/rails/pull/50928.patch",
            "merged_at": null
        },
        "body": "This fixes race condition in Active Storage when multiple preprocessed variants are defined for a `Previewable` file is attached.\r\n\r\n## Background\r\n\r\nWhen a variant is specified for a \"previewable\" file type (e.g. video  or PDF) attachment, a `preview_image` attachment is first created and attached on the original blob and then any user-specified variants are derived from _that_ preview image. When those variants are named and have `preprocessed: true`, the jobs to create those variants are queued simultaneously.\r\n\r\nExample from my case:\r\n\r\n```ruby\r\n  has_one_attached :file, dependent: :purge_later do |attachable|\r\n    attachable.variant :preview, resize_to_fill: [400, 400], preprocessed: true\r\n    attachable.variant :still, format: \"jpg\", saver: {quality: 85}, preprocessed: true\r\n  end\r\n```\r\n\r\n## The issue\r\n\r\nWhen a `Previewable` attachment is created (a video, in my case), `TransformJob.perform_later` is called for each named variant with `preprocessed: true`. Unless your queue adapter is synchronous (e.g. :inline or :test), this results in a race condition in which every such variant's worker will check `processed?`, see that no `preview_image` attachment exists yet on the `ActiveStorage::Blob`, and:\r\n\r\n1. Redundantly download the file from storage\r\n2. Create duplicative ActiveStorage::Attachment and `ActiveStorage::Blob` records for the `preview_image` attachment (all but one of which will be orphaned from the original blob's `has_one_attached :preview_image`)\r\n3. Create variant blobs (and associated `ActiveStorage::VariantRecord`) that are similarly orphaned (by virtue of being a variant of an orphaned `preview_image` blob)\r\n\r\nAs a result, if the video is ever purged, `PurgeJob` will only find the current `has_one_attached :preview_image` and whatever variant demanded it into existence, then leave the rest as orphaned records in the database and in storage.\r\n\r\n## The fix\r\n\r\nPretty simple: wrap the first step of the job in `blob.with_lock {}`. By pessimistically locking on the blob, we can prevent processing the preview image multiple times by multiple `TransformJob` jobs running concurrently.\r\n\r\nAlternate approaches would all be more work:\r\n\r\n* Queuing a `PreviewImage` job instead of N `TransformJob` and have it, only after `preview_image` is attached, enqueue those `TransformJob` jobs\r\n* Batching up all the named variant transformations into a single meta-job\r\n\r\n## Testing caveat \r\n\r\nWriting a test for this inside Rails would be difficult because it would require running the resulting TransformJob jobs concurrently. I [started a test](https://github.com/searls/rails/blob/fix-video-duplicate-preview-variants/activestorage/test/models/variant_with_record_test.rb#L348-L367) but failed to reproduce, in part because the test queue adapter will perform enqueued jobs inline instead of concurrently. In order to write a test that replicated the issue appropriately, we might first need a new option for `perform_enqueued_jobs(async: true) {\u00a0\u2026 }`\r\n\r\nIf you're interested, [this gist](https://gist.github.com/searls/5b8298abe88b3206f670ea3c6d574aab) includes a driver script and output before and after the patch showing it working.\r\n\r\n## Evaluating impact on existing Active Storage users\r\n\r\nI only found this because I'm a total cheapskate and was literally counting records in my S3 bucket to ensure `PurgeJob` worked. Then I wasted the next two days trying to figure out why before landing on this. I strongly suspect that ActiveStorage users who host video and take advantage of `preprocessed: true` named variants will have a lot of orphaned stuff floating around their buckets.\r\n\r\nTo see if you have any such \"zombie\" preview_images (and presumably, associated variants) floating around your application that would survive calls to `purge` on the owning attachment, you could write a query like this:\r\n\r\n```\r\nActiveStorage::Attachment\r\n  .joins(\"INNER JOIN active_storage_attachments as other_attachments ON\r\n          active_storage_attachments.record_id = other_attachments.record_id AND\r\n          active_storage_attachments.id != other_attachments.id\")\r\n  .where(\r\n    :name => \"preview_image\",\r\n    :record_type => \"ActiveStorage::Blob\",\r\n    \"other_attachments.name\" => \"preview_image\",\r\n    \"other_attachments.record_type\" => \"ActiveStorage::Blob\"\r\n  )\r\n  .distinct\r\n```\r\n\r\nClearing out one's production database and backend storage to get this all right-sized should be a fun exercise for the reader.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50928/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50920",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50920/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50920/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50920/events",
        "html_url": "https://github.com/rails/rails/pull/50920",
        "id": 2107533190,
        "node_id": "PR_kwDNIULOZW8w1g",
        "number": 50920,
        "title": "Support encrypting binary columns",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-30T10:53:34Z",
        "updated_at": "2024-02-02T14:07:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50920",
            "html_url": "https://github.com/rails/rails/pull/50920",
            "diff_url": "https://github.com/rails/rails/pull/50920.diff",
            "patch_url": "https://github.com/rails/rails/pull/50920.patch",
            "merged_at": null
        },
        "body": "\r\n### Motivation / Background\r\n\r\nActiveRecord Encryption doesn't prevent you from encrypting binary columns but it doesn't have proper support for it either.\r\n\r\nWhen the data is fed through encrypt/decrypt it is converted to a String. This means that the the encryption layer is not transparent to binary data - which should be passed as Type::Binary::Data.\r\n\r\nAs a result the data is not properly escaped in the SQL queries or deserialized correctly after decryption.\r\n\r\nHowever it just happens to work fine for MySQL and SQLite because the MessageSerializer doesn't use any characters that need to be encoded. However if you try to use a custom serializer that does then it breaks.\r\n\r\nPostgreSQL on the other hand does not work - because the Bytea type is passed a String rather than a Type::Binary::Data to deserialize, it attempts to unescape the data and either mangles it or raises an error if it contains null bytes.\r\n\r\n### Detail\r\n\r\nThe commit fixes the issue, by reserializing the data after encryption and decryption. For text data that's a no-op, but for binary data we'll convert it back to a Type::Binary::Data.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50920/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50919",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50919/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50919/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50919/events",
        "html_url": "https://github.com/rails/rails/pull/50919",
        "id": 2107305664,
        "node_id": "PR_kwDNIULOZWwUOw",
        "number": 50919,
        "title": "Add negative_scopes option to ActiveRecord's enum method",
        "user": {
            "login": "Jay0921",
            "id": 12777550,
            "node_id": "MDQ6VXNlcjEyNzc3NTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/12777550?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jay0921",
            "html_url": "https://github.com/Jay0921",
            "followers_url": "https://api.github.com/users/Jay0921/followers",
            "following_url": "https://api.github.com/users/Jay0921/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jay0921/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jay0921/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jay0921/subscriptions",
            "organizations_url": "https://api.github.com/users/Jay0921/orgs",
            "repos_url": "https://api.github.com/users/Jay0921/repos",
            "events_url": "https://api.github.com/users/Jay0921/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jay0921/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-30T09:11:41Z",
        "updated_at": "2024-01-30T09:40:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50919",
            "html_url": "https://github.com/rails/rails/pull/50919",
            "diff_url": "https://github.com/rails/rails/pull/50919.diff",
            "patch_url": "https://github.com/rails/rails/pull/50919.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nIn certain situation, we might need to store and query `negative` values. Having the option to bypass the auto-generated negative scopes can avoid the conflicts.\r\n\r\n### Detail\r\n\r\nAdd `negative_scopes` option to `ActiveRecord::Enum#enum`, this offers the flexibility to optionally skip the creation of negative scopes.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50919/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50916",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50916/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50916/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50916/events",
        "html_url": "https://github.com/rails/rails/issues/50916",
        "id": 2106914874,
        "node_id": "I_kwDNIULOfZT4Og",
        "number": 50916,
        "title": "Unexpected controller prefix path de-duplication in view partial lookup paths",
        "user": {
            "login": "sfnelson",
            "id": 325974,
            "node_id": "MDQ6VXNlcjMyNTk3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/325974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sfnelson",
            "html_url": "https://github.com/sfnelson",
            "followers_url": "https://api.github.com/users/sfnelson/followers",
            "following_url": "https://api.github.com/users/sfnelson/following{/other_user}",
            "gists_url": "https://api.github.com/users/sfnelson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sfnelson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sfnelson/subscriptions",
            "organizations_url": "https://api.github.com/users/sfnelson/orgs",
            "repos_url": "https://api.github.com/users/sfnelson/repos",
            "events_url": "https://api.github.com/users/sfnelson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sfnelson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-30T04:10:56Z",
        "updated_at": "2024-01-30T04:22:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nCreate nested controller and nested object views where there is overlap between the controller and object namespaces. For example:\r\n\r\n- `Courses::Quiz::Question` and `Courses::Quiz::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Quiz::Extra::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Courses::Quiz::QuestionsController`\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\nrequire \"active_model/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/unrelated\" => \"learning/questions#new\"\r\n    get \"/duplication\" => \"courses/quiz/questions#new\"\r\n    get \"/collision\" => \"learning/quiz/extra/questions#new\"\r\n    get \"/repetition\" => \"learning/courses/quiz/questions#new\"\r\n  end\r\nend\r\n\r\nmodule Courses\r\n  module Quiz\r\n    class Question\r\n      include ActiveModel::Model\r\n\r\n      attr_accessor :name\r\n    end\r\n\r\n    class QuestionsController < ActionController::Base\r\n      def new\r\n        render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nmodule Learning\r\n  class QuestionsController < ActionController::Base\r\n    def new\r\n      render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n    end\r\n  end\r\n\r\n  module Quiz\r\n    module Extra\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\n\r\n  module Courses\r\n    module Quiz\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def setup\r\n    super\r\n    @views = Dir.mktmpdir\r\n    ActionController::Base.prepend_view_path @views\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_unrelated_partial\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/unrelated\"\r\n    assert_equal \"Nested partial\", last_response.body\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_duplication\r\n    view_file \"courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n\r\n    get \"/duplication\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  # \u274c FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path breaks after the first match, skips 'extra'\r\n  def test_collision\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Harmful de-duplication <%= question.name %>\"\r\n    view_file \"learning/courses/extra/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/collision\"\r\n    assert_equal \"Collision partial\", last_response.body\r\n  end\r\n\r\n  # \u274c FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path fails to find overlap because offsets do not align\r\n  def test_repetition\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n    view_file \"learning/courses/quiz/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/repetition\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  private\r\n\r\n  def app\r\n    Rails.application\r\n  end\r\n\r\n  def view_file(name, content)\r\n    path = Pathname.new(@views).join(name)\r\n    path.dirname.tap(&:mkpath)\r\n    path.write(content)\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\n- Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `quiz/extra` suffix on the controller does not match the `quiz` prefix on the model so no de-duplication is performed. Partial should be `learning/courses/extra/courses/quiz/questions/_question.html.erb`\r\n- Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   `courses/quiz` suffix on controller matches `courses/quiz` prefix on model so repetition is removed. Partial should be `learning/courses/quiz/questions/_question.html.erb`\r\n\r\n### Actual behavior\r\n\r\n- \u2705 Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- \u274c Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `Quiz` is detected as overlap and `Extra` is dropped from the partial path, this is confusing and inconsistent\r\n- \u274c Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   no module duplication is detected, so full module path to controller is prefixed on the object path \u2013 deep repetition\r\n\r\n### System configuration\r\n**Rails version**: 7.1.0\r\n\r\n**Ruby version**: 3.2.3\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50916/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50916/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50914",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50914/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50914/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50914/events",
        "html_url": "https://github.com/rails/rails/pull/50914",
        "id": 2106594568,
        "node_id": "PR_kwDNIULOZWKOxQ",
        "number": 50914,
        "title": "Generate devcontainer files by default",
        "user": {
            "login": "andrewn617",
            "id": 39735028,
            "node_id": "MDQ6VXNlcjM5NzM1MDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/39735028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewn617",
            "html_url": "https://github.com/andrewn617",
            "followers_url": "https://api.github.com/users/andrewn617/followers",
            "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewn617/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewn617/orgs",
            "repos_url": "https://api.github.com/users/andrewn617/repos",
            "events_url": "https://api.github.com/users/andrewn617/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewn617/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            },
            {
                "id": 1174770998,
                "node_id": "MDU6TGFiZWwxMTc0NzcwOTk4",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailbox",
                "name": "actionmailbox",
                "color": "f4a6cb",
                "default": false,
                "description": ""
            },
            {
                "id": 1180817762,
                "node_id": "MDU6TGFiZWwxMTgwODE3NzYy",
                "url": "https://api.github.com/repos/rails/rails/labels/actiontext",
                "name": "actiontext",
                "color": "3bc667",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-29T23:03:25Z",
        "updated_at": "2024-02-01T23:57:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50914",
            "html_url": "https://github.com/rails/rails/pull/50914",
            "diff_url": "https://github.com/rails/rails/pull/50914.diff",
            "patch_url": "https://github.com/rails/rails/pull/50914.patch",
            "merged_at": null
        },
        "body": "https://github.com/rails/rails/issues/50566\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created to generate `devcontainer` files for new Rails apps.\r\n\r\n### Detail\r\n\r\nThis Pull Request adds templates for devcontainer files (`devcontainer.json`, `Dockerfile` and `docker-compose.yml`) to be generated on `rails new`.\r\n\r\nBy default the devcontainer contains the following:\r\n- A redis container for Sidekiq and Action Cable\r\n- A database (SQLite, Postgres, MySQL or MariaDB)\r\n- A Headless chrome container for system tests\r\n- Active Storage configured to use the local disk and with preview features working\r\n\r\nIf `rails new` is called with options to skip any of the above they will be removed from the dev container config.\r\n\r\nThe dev container can be skipped entirely with the `--skip_devcontainer` option.\r\n\r\n### Additional information\r\n\r\nA few changes are needed to other files generated by rails new to make sure new Rails apps can be developed both in a container and locally.\r\n\r\n- Differentiate `CABLE_REDIS_URL` and `JOBS_REDIS_URL` instead of just using `REDIS_URL` for both (A PR will need to be opened to turbo-rails to make this change as well)\r\n- For MariaDB and MySQL use the `RAILS_DATABASE_HOST` if it's set (which it will be in a container) and fallback to `localhost`\r\n- For Postgres set the host (`RAILS_DATABASE_HOST`), username and password when in a container\r\n\r\nFor system tests, we need to configure the `Capybara` host and port to the selenium container. Rather than expose the implementation details of `Capybara` to the developer, we created a new `served_by` method on `SystemTestCase` to configure these.\r\n\r\n`db:system:change` re-generates `database.yml`. I added a `skip-devcontainer` option to this generator with a default of `true`. So, any existing apps that use this command will not get devcontainer config in their db yaml. Users can opt in to have devcontainer config added to the new db yml by adding `--skip-devcontainer=false`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50909",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50909/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50909/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50909/events",
        "html_url": "https://github.com/rails/rails/pull/50909",
        "id": 2104413485,
        "node_id": "PR_kwDNIULOZUSoNQ",
        "number": 50909,
        "title": "[ci skip] [docs] make increment requirement explicit",
        "user": {
            "login": "jamiemccarthy",
            "id": 40373,
            "node_id": "MDQ6VXNlcjQwMzcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40373?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamiemccarthy",
            "html_url": "https://github.com/jamiemccarthy",
            "followers_url": "https://api.github.com/users/jamiemccarthy/followers",
            "following_url": "https://api.github.com/users/jamiemccarthy/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamiemccarthy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamiemccarthy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamiemccarthy/subscriptions",
            "organizations_url": "https://api.github.com/users/jamiemccarthy/orgs",
            "repos_url": "https://api.github.com/users/jamiemccarthy/repos",
            "events_url": "https://api.github.com/users/jamiemccarthy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamiemccarthy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-29T00:07:29Z",
        "updated_at": "2024-01-29T00:20:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50909",
            "html_url": "https://github.com/rails/rails/pull/50909",
            "diff_url": "https://github.com/rails/rails/pull/50909.diff",
            "patch_url": "https://github.com/rails/rails/pull/50909.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAs of December, [ActionController::Metal::RateLimiting](https://github.com/rails/rails/blob/main/actionpack/lib/action_controller/metal/rate_limiting.rb) provides rate limiting through the `increment` method of any cache store. RateLimiting relies on a feature of the underlying store. This feature needs to be documented, so that it remains supported, and so alternative stores know to support it.\r\n\r\nThis PR has been created to document this behavior.\r\n\r\n### Detail\r\n\r\nThe feature is that `increment`, when passed `expires_in`, will set expiration time when the key is first created, and ignore that option if the key already exists.\r\n\r\nThat functionality is already tested [here](https://github.com/rails/rails/blob/cf26c5482924babca573e6c01594d77e3321ae58/activesupport/test/cache/behaviors/cache_increment_decrement_behavior.rb#L34), in the `CacheIncrementDecrementBehavior` test module.\r\n\r\nThis Pull Request changes the documentation of `ActiveSupport::Cache::Store.increment` to reflect a now-required feature of existing stores.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50909/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50909/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50901",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50901/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50901/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50901/events",
        "html_url": "https://github.com/rails/rails/pull/50901",
        "id": 2104069423,
        "node_id": "PR_kwDNIULOZUBH_g",
        "number": 50901,
        "title": "[Fix #50897] Autosaving `has_one` sets foreign key attribute when unchanged",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-28T09:30:20Z",
        "updated_at": "2024-01-30T10:42:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50901",
            "html_url": "https://github.com/rails/rails/pull/50901",
            "diff_url": "https://github.com/rails/rails/pull/50901.diff",
            "patch_url": "https://github.com/rails/rails/pull/50901.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes https://github.com/rails/rails/issues/50897\r\nSimilar to https://github.com/rails/rails/pull/46759\r\n\r\n### Detail\r\n\r\nUpdates `ActiveRecord::AutosaveAssociation#save_has_one_association` to only update the foreign key attribute on the child record if it has changed. This makes its behaviour consistent with `belongs_to` associations and ensures that `ActiveRecord::ReadOnlyAttributeError` isn't raised when no changes have been made to the attribute.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nNone.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50901/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50897",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50897/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50897/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50897/events",
        "html_url": "https://github.com/rails/rails/issues/50897",
        "id": 2103568249,
        "node_id": "I_kwDNIULOfWHneQ",
        "number": 50897,
        "title": "Incorrectly raising `ReadonlyAttributeError` when autosaving `has_one` association with readonly foreign key",
        "user": {
            "login": "Earlopain",
            "id": 14981592,
            "node_id": "MDQ6VXNlcjE0OTgxNTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/14981592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Earlopain",
            "html_url": "https://github.com/Earlopain",
            "followers_url": "https://api.github.com/users/Earlopain/followers",
            "following_url": "https://api.github.com/users/Earlopain/following{/other_user}",
            "gists_url": "https://api.github.com/users/Earlopain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Earlopain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Earlopain/subscriptions",
            "organizations_url": "https://api.github.com/users/Earlopain/orgs",
            "repos_url": "https://api.github.com/users/Earlopain/repos",
            "events_url": "https://api.github.com/users/Earlopain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Earlopain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 4,
        "created_at": "2024-01-27T12:29:15Z",
        "updated_at": "2024-01-28T20:15:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Rails 7.1 sets `raise_on_assign_to_attr_readonly` to true. In the following repro I set a column unrelated to `attr_readonly` yet the error is still being set. If I stop setting this column the error goes away.\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord.raise_on_assign_to_attr_readonly = true\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :forum_topics, force: true do |t|\r\n    t.integer :updater_id\r\n    t.text :title\r\n  end\r\n\r\n  create_table :forum_posts, force: true do |t|\r\n    t.integer :updater_id\r\n    t.integer :forum_topic_id\r\n    t.text :body\r\n  end\r\nend\r\n\r\nclass ForumTopic < ActiveRecord::Base\r\n  has_one :original_forum_post, -> { order(\"forum_posts.id asc\") }, class_name: \"ForumPost\", inverse_of: :forum_topic\r\n  validates_associated :original_forum_post\r\n  accepts_nested_attributes_for :original_forum_post\r\nend\r\n\r\nclass ForumPost < ActiveRecord::Base\r\n  attr_readonly :forum_topic_id\r\n  belongs_to :forum_topic\r\n\r\n  before_validation do |rec|\r\n    # next # Skipping setting this column makes the error go away\r\n    if persisted?\r\n      rec.updater_id = 456\r\n    else\r\n      rec.updater_id = 123\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_readonly_attr_exception\r\n    topic = ForumTopic.create!(title: \"Hi!\", original_forum_post_attributes: { body: \"What's up?\" })\r\n    topic.update(title: \"nevermind\") # => ActiveRecord::ReadonlyAttributeError: forum_topic_id\r\n    assert_equal(456, topic.original_forum_post.updater_id)\r\n  end\r\nend\r\n```\r\n\r\n### System configuration\r\n**Rails version**: master\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50895",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50895/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50895/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50895/events",
        "html_url": "https://github.com/rails/rails/pull/50895",
        "id": 2103219381,
        "node_id": "PR_kwDNIULOZTZN2g",
        "number": 50895,
        "title": "Enhanced ActiveStorage variant tracking control",
        "user": {
            "login": "JaceBayless",
            "id": 25781337,
            "node_id": "MDQ6VXNlcjI1NzgxMzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25781337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JaceBayless",
            "html_url": "https://github.com/JaceBayless",
            "followers_url": "https://api.github.com/users/JaceBayless/followers",
            "following_url": "https://api.github.com/users/JaceBayless/following{/other_user}",
            "gists_url": "https://api.github.com/users/JaceBayless/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JaceBayless/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JaceBayless/subscriptions",
            "organizations_url": "https://api.github.com/users/JaceBayless/orgs",
            "repos_url": "https://api.github.com/users/JaceBayless/repos",
            "events_url": "https://api.github.com/users/JaceBayless/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JaceBayless/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-27T04:41:38Z",
        "updated_at": "2024-01-27T04:42:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50895",
            "html_url": "https://github.com/rails/rails/pull/50895",
            "diff_url": "https://github.com/rails/rails/pull/50895.diff",
            "patch_url": "https://github.com/rails/rails/pull/50895.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n#### My Specific Use Case\r\n\r\nIn my project, where `ActiveStorage.track_variants = true`, I needed to generate a variant of an image (a thumbnail for a room on a floorplan) but did not want to create a variant record of the original image record. This is because I intended to save the variant on a child relation, separate from the original image record.\r\n\r\n#### The Challenge\r\nWith `ActiveStorage.track_variants = true` every variant generated through `ActiveStorage` is automatically tracked in the database to the original record. There are cases in this application where we **do** want to track these variant records so I was unable to change the default configuration. This meant to properly generate my variant I had to use `ImageProcessing::Vips` directly to not generate the variant record. This worked but generated two concerns for me:\r\n\r\n1. This specific code is dependent on `ImageProcessing::Vips` and if we were to ever migrate to another image processor we would have to remember to update this code as well instead of just relying on the `ActiveStorage` default processor.\r\n2. It strays enough from the standard pattern when generating `ActiveStorage` variants that without good documentation it can become confusing to maintain.\r\n\r\n### Detail\r\n\r\nThis pull request adds the `track` option to the `variant` method which allows for overriding of the `ActiveStorage.track_variants`. This is useful when in cases where you want to stray from the application's standard configuration.\r\n\r\n```ruby\r\nActiveSupport.track_variants\r\n# => true\r\nuser.avatar.variant(track: false, resize_to_limit: [100, 100])\r\n# => #<ActiveStorage::Variant:0x00007f4e0004ffb0> \r\n```\r\nand\r\n```ruby\r\nActiveSupport.track_variants\r\n# => false\r\nuser.avatar.variant(track: true, resize_to_limit: [100, 100])\r\n# => #<ActiveStorage::VariantWithRecord:0x00007f4e0004ffb0> \r\n```\r\n\r\n### Additional information\r\n\r\nThis is my first time contributing to Rails and I appreciate anyone who takes the time to read all this. I tried my best to follow all conventions and to keep all current functionality, but in the case that I missed something I'd be happy to discuss and fix whatever is needed.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50895/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50895/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50894",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50894/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50894/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50894/events",
        "html_url": "https://github.com/rails/rails/pull/50894",
        "id": 2103022783,
        "node_id": "PR_kwDNIULOZTPMhg",
        "number": 50894,
        "title": "Add cost argument to has_secure_password",
        "user": {
            "login": "t27duck",
            "id": 545604,
            "node_id": "MDQ6VXNlcjU0NTYwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/545604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t27duck",
            "html_url": "https://github.com/t27duck",
            "followers_url": "https://api.github.com/users/t27duck/followers",
            "following_url": "https://api.github.com/users/t27duck/following{/other_user}",
            "gists_url": "https://api.github.com/users/t27duck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t27duck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t27duck/subscriptions",
            "organizations_url": "https://api.github.com/users/t27duck/orgs",
            "repos_url": "https://api.github.com/users/t27duck/repos",
            "events_url": "https://api.github.com/users/t27duck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t27duck/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-26T22:52:13Z",
        "updated_at": "2024-01-27T05:30:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50894",
            "html_url": "https://github.com/rails/rails/pull/50894",
            "diff_url": "https://github.com/rails/rails/pull/50894.diff",
            "patch_url": "https://github.com/rails/rails/pull/50894.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThere may be instances where a developer is working in an environment where a higher cost than the default (12) for BCrypt is required either due to arbitrary security requirements or the recommended minimum changes and the version of bcrypt used isn't updated.\r\n\r\n### Detail\r\n\r\nThis change adds a `cost:` argument to `has_secure_password`. If provided, it will use that value for the password cost. Its value is validated to make sure it's between `BCrypt::Engine::MIN_COST` and `BCrypt::Engine::MAX_COST`.\r\n\r\nAdditionally `[password attribute]_cost` is exposed as a convenience method to determine the cost used for the set password hash. This can be used to review the current costs from a user record and either transparently upgrade the user's password or force a password reset.\r\n\r\n### Additional information\r\n\r\nI'm not 100% married to using `cost` as the argument name as it affects only new passwords created for the record going forward.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50892",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50892/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50892/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50892/events",
        "html_url": "https://github.com/rails/rails/pull/50892",
        "id": 2102819884,
        "node_id": "PR_kwDNIULOZTEC2A",
        "number": 50892,
        "title": "Documentation: Expand documentation on has_one_attached method [ci-skip].",
        "user": {
            "login": "Takahashi-Seiji",
            "id": 140453075,
            "node_id": "U_kgDOCF8k0w",
            "avatar_url": "https://avatars.githubusercontent.com/u/140453075?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Takahashi-Seiji",
            "html_url": "https://github.com/Takahashi-Seiji",
            "followers_url": "https://api.github.com/users/Takahashi-Seiji/followers",
            "following_url": "https://api.github.com/users/Takahashi-Seiji/following{/other_user}",
            "gists_url": "https://api.github.com/users/Takahashi-Seiji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Takahashi-Seiji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Takahashi-Seiji/subscriptions",
            "organizations_url": "https://api.github.com/users/Takahashi-Seiji/orgs",
            "repos_url": "https://api.github.com/users/Takahashi-Seiji/repos",
            "events_url": "https://api.github.com/users/Takahashi-Seiji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Takahashi-Seiji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-26T20:02:30Z",
        "updated_at": "2024-01-30T18:45:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50892",
            "html_url": "https://github.com/rails/rails/pull/50892",
            "diff_url": "https://github.com/rails/rails/pull/50892.diff",
            "patch_url": "https://github.com/rails/rails/pull/50892.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nGive further context about the requirements for using the has_one_attached method. \r\n\r\nI have an application that does not have an ActiveJob::Backend queue adapter. When I tried to destroy a record, it raised an error that I needed a queue adapter. There is a dependency between the has_one_attached method and a queue adapter. \r\n\r\nThat is why adding more context about the functionality and requirements about using the has_one_attached method is important. \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50889",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50889/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50889/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50889/events",
        "html_url": "https://github.com/rails/rails/pull/50889",
        "id": 2102411019,
        "node_id": "PR_kwDNIULOZStxpQ",
        "number": 50889,
        "title": "Introduce `ActiveSupport::TestCase.around`",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2024-01-26T15:29:23Z",
        "updated_at": "2024-01-29T19:58:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50889",
            "html_url": "https://github.com/rails/rails/pull/50889",
            "diff_url": "https://github.com/rails/rails/pull/50889.diff",
            "patch_url": "https://github.com/rails/rails/pull/50889.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nWhen discussing testing frameworks for new projects, the absence of `around` hooks is usually a focal point of the conversation that pushes consensus toward alternative test harnesses.\r\n\r\nMinitest itself [will not support built-in `around` hooks](https://github.com/minitest/minitest/issues/892). While the [minitest-hooks](https://github.com/jeremyevans/minitest-hooks) gem provides support for `around`, Active Support's callback system makes adding `around` hooks fairly trivial, and is guaranteed to be implemented in the same way as all other callbacks (Controller, Jobs, Mailers, etc.).\r\n\r\n\r\n### Detail\r\n\r\nAdd a callback, which runs around `TestCase#setup`, the `test` block, and `TestCase#teardown`. Yields the test class instance and the test case to the block:\r\n\r\n```ruby\r\nclass Test < ActiveSupport::TestCase\r\n  around do |test_case, &block|\r\n    Client.with(stubbed: true, &block)\r\n  end\r\nend\r\n```\r\n\r\n### Additional Information\r\n\r\nTo support this change, rename the `activesupport/test/testing/after_teardown_test.rb` file to `activesupport/test/testing/callbacks_test.rb`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50889/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50889/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50886",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50886/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50886/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50886/events",
        "html_url": "https://github.com/rails/rails/pull/50886",
        "id": 2102255707,
        "node_id": "PR_kwDNIULOZSlTeQ",
        "number": 50886,
        "title": "[Fix #50812] Don't duplicate selects, inner and outer joins when merging with STI",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-26T13:54:50Z",
        "updated_at": "2024-01-30T10:41:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50886",
            "html_url": "https://github.com/rails/rails/pull/50886",
            "diff_url": "https://github.com/rails/rails/pull/50886.diff",
            "patch_url": "https://github.com/rails/rails/pull/50886.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes https://github.com/rails/rails/issues/50812\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `#merge_select_values`, `#merge_joins` and `#merge_outer_joins` in `ActiveRecord::Relation::Merger` to unionise selects, inner and outer joins when the two sources of a `merge` are related via STI.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nThe only similar case left in `ActiveRecord::Relation::Merger` is when [merging preloads](https://github.com/rails/rails/blob/68eade83c87ae309191add6dfa4959d7d7e07464/activerecord/lib/active_record/relation/merger.rb#L101).\r\n\r\nI don't think that is similar to these cases since the preload values are simply used to preload associations. I thought I would just mention it anyway.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50886/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50886/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50885",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50885/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50885/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50885/events",
        "html_url": "https://github.com/rails/rails/pull/50885",
        "id": 2102202900,
        "node_id": "PR_kwDNIULOZSiasw",
        "number": 50885,
        "title": "Document Attached::Model#attachment_changes [ci skip]",
        "user": {
            "login": "tsvallender",
            "id": 122306143,
            "node_id": "U_kgDOB0o-Xw",
            "avatar_url": "https://avatars.githubusercontent.com/u/122306143?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tsvallender",
            "html_url": "https://github.com/tsvallender",
            "followers_url": "https://api.github.com/users/tsvallender/followers",
            "following_url": "https://api.github.com/users/tsvallender/following{/other_user}",
            "gists_url": "https://api.github.com/users/tsvallender/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tsvallender/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tsvallender/subscriptions",
            "organizations_url": "https://api.github.com/users/tsvallender/orgs",
            "repos_url": "https://api.github.com/users/tsvallender/repos",
            "events_url": "https://api.github.com/users/tsvallender/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tsvallender/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-26T13:18:39Z",
        "updated_at": "2024-01-26T14:14:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50885",
            "html_url": "https://github.com/rails/rails/pull/50885",
            "diff_url": "https://github.com/rails/rails/pull/50885.diff",
            "patch_url": "https://github.com/rails/rails/pull/50885.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAdds documentation for the `attachment_changes` method of Active Storage.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50885/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50883",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50883/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50883/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50883/events",
        "html_url": "https://github.com/rails/rails/pull/50883",
        "id": 2101864232,
        "node_id": "PR_kwDNIULOZSQNiA",
        "number": 50883,
        "title": "Put plural inverse association inference behind a configuration flag",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/83",
            "html_url": "https://github.com/rails/rails/milestone/83",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/83/labels",
            "id": 9964242,
            "node_id": "MI_kwDNIULOAJgK0g",
            "number": 83,
            "title": "7.2.0",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 9,
            "closed_issues": 7,
            "state": "open",
            "created_at": "2023-09-25T20:29:14Z",
            "updated_at": "2024-01-26T09:49:33Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 1,
        "created_at": "2024-01-26T09:19:56Z",
        "updated_at": "2024-01-26T17:23:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50883",
            "html_url": "https://github.com/rails/rails/pull/50883",
            "diff_url": "https://github.com/rails/rails/pull/50883.diff",
            "patch_url": "https://github.com/rails/rails/pull/50883.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50284\r\n\r\nWhile having the inverse association configured it generally positive as it avoid some extra queries etc, infering it may break legecy code, as evidenced by how it broke `ActiveStorage::Blob` in https://github.com/rails/rails/pull/50800\r\n\r\nAs such we can't just enable this behavior immediately, we need to provide and upgrade path for users.\r\n\r\nAt this stage this PR is just a quick draft to discuss how exactly we should gate this. We can just make it a regular framework default, but perhaps emitting a deprecation warning when we would have infered the inverse relation would help users upgrade?  cc @rafaelfranca as you generally have great insights on this kind of new framework default.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50883/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50879",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50879/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50879/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50879/events",
        "html_url": "https://github.com/rails/rails/pull/50879",
        "id": 2101071156,
        "node_id": "PR_kwDNIULOZRn03Q",
        "number": 50879,
        "title": "Transform actionpack documentation to Markdown",
        "user": {
            "login": "rafaelfranca",
            "id": 47848,
            "node_id": "MDQ6VXNlcjQ3ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rafaelfranca",
            "html_url": "https://github.com/rafaelfranca",
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-25T19:53:03Z",
        "updated_at": "2024-01-25T22:29:37Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50879",
            "html_url": "https://github.com/rails/rails/pull/50879",
            "diff_url": "https://github.com/rails/rails/pull/50879.diff",
            "patch_url": "https://github.com/rails/rails/pull/50879.patch",
            "merged_at": null
        },
        "body": "Related to #50759\r\n\r\n`./tools/rdoc-to-md -a --only=actionpack` to reproduce the results.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50879/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50873",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50873/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50873/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50873/events",
        "html_url": "https://github.com/rails/rails/pull/50873",
        "id": 2100413008,
        "node_id": "PR_kwDNIULOZREGFA",
        "number": 50873,
        "title": "dump schema: ignore tables from any postgres schema",
        "user": {
            "login": "gagalago",
            "id": 519226,
            "node_id": "MDQ6VXNlcjUxOTIyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/519226?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gagalago",
            "html_url": "https://github.com/gagalago",
            "followers_url": "https://api.github.com/users/gagalago/followers",
            "following_url": "https://api.github.com/users/gagalago/following{/other_user}",
            "gists_url": "https://api.github.com/users/gagalago/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gagalago/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gagalago/subscriptions",
            "organizations_url": "https://api.github.com/users/gagalago/orgs",
            "repos_url": "https://api.github.com/users/gagalago/repos",
            "events_url": "https://api.github.com/users/gagalago/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gagalago/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-25T13:31:52Z",
        "updated_at": "2024-01-25T13:41:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50873",
            "html_url": "https://github.com/rails/rails/pull/50873",
            "diff_url": "https://github.com/rails/rails/pull/50873.diff",
            "patch_url": "https://github.com/rails/rails/pull/50873.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nthis pull request improve the current implementation of ignoring table during the schema dump by allowing to ignore tables from other postgres schema than \"public\".\r\n\r\n### Detail\r\n\r\nThis Pull Request changes [REPLACE ME]\r\n\r\n### Additional information\r\n\r\nthe proposed implementation lack the ability to specify exactly from which schema, the table is ignored but I think that even do, it's better than the current implementation.\r\n\r\n- [pg_dump documentation](https://www.postgresql.org/docs/current/app-pgdump.html)\r\n- [pattern documentation](https://www.postgresql.org/docs/current/app-psql.html#APP-PSQL-PATTERNS\r\n\r\n### Checklist\r\n\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\nI feel that the code change is too small to request updating CHANGELOG or writing new tests",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50868",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50868/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50868/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50868/events",
        "html_url": "https://github.com/rails/rails/issues/50868",
        "id": 2099221011,
        "node_id": "I_kwDNIULOfR-SEw",
        "number": 50868,
        "title": "Comparing `Time` object with an integer doesn't throw an error ",
        "user": {
            "login": "tgxworld",
            "id": 4335742,
            "node_id": "MDQ6VXNlcjQzMzU3NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4335742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgxworld",
            "html_url": "https://github.com/tgxworld",
            "followers_url": "https://api.github.com/users/tgxworld/followers",
            "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
            "organizations_url": "https://api.github.com/users/tgxworld/orgs",
            "repos_url": "https://api.github.com/users/tgxworld/repos",
            "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgxworld/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-24T22:29:19Z",
        "updated_at": "2024-01-30T04:47:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/time\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_stuff\r\n    # This would have raise an argument error in Ruby for trying to compare a Time object with an Integer\r\n    assert Time.now >= Time.now.to_i - 999_999\r\n\r\n    assert Time.now.to_i >= Time.now.to_i - 999_999\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI'm not sure but I would expect one of the following:\r\n\r\n1. Raise an argument error like what Ruby does when trying to compare a `Time` object with an `Integer`\r\n2. Convert the `Time` object to an `Integer` before comparing\r\n3. Convert the `Integer` to a `Time` object before comparing\r\n\r\n### Actual behavior\r\n\r\nNo errors are raised and the code will always evaluate to `false`.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50867",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50867/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50867/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50867/events",
        "html_url": "https://github.com/rails/rails/pull/50867",
        "id": 2098780342,
        "node_id": "PR_kwDNIULOZPrnLA",
        "number": 50867,
        "title": "Initialize ActiveRecord::Migrator.migrations_paths at application initialization",
        "user": {
            "login": "fsateler",
            "id": 1322013,
            "node_id": "MDQ6VXNlcjEzMjIwMTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsateler",
            "html_url": "https://github.com/fsateler",
            "followers_url": "https://api.github.com/users/fsateler/followers",
            "following_url": "https://api.github.com/users/fsateler/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsateler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsateler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsateler/subscriptions",
            "organizations_url": "https://api.github.com/users/fsateler/orgs",
            "repos_url": "https://api.github.com/users/fsateler/repos",
            "events_url": "https://api.github.com/users/fsateler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsateler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-24T17:44:10Z",
        "updated_at": "2024-01-24T17:46:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50867",
            "html_url": "https://github.com/rails/rails/pull/50867",
            "diff_url": "https://github.com/rails/rails/pull/50867.diff",
            "patch_url": "https://github.com/rails/rails/pull/50867.patch",
            "merged_at": null
        },
        "body": "This is already done in rake tasks in the `load_config` task. However, if migrations want to be manipulated/used by a non-rake program this initialization would miss any extra directories configured by the user.\r\n\r\nWe move the initialization to an initializer block. With this we can remove the rake config since it depends on `environment` anyway.\r\n\r\n### Motivation / Background\r\n\r\nIn our app we use schema-based multitenancy which means we need to setup and migrate for each tenant. We have created\r\na few helpers to aid in this task. \r\nRecently, we began modularizing our app, and started moving our migrations into packs. \r\nThen we started facing issues with migrations that tried to run more than once.\r\nWe diagnosed the root cause that our tenant creation command was not invoking `db:load_config` before loading the schema.\r\nThis resulted in \"packed\" migrations not being recorded in the initial seed of the `schema_migrations` table. Then when we attempted to run migrations on that tenant those migrations would try to run and fail. \r\n\r\nThis Pull Request has been created because a fix for this is to ensure whenever the app is loaded, the correct default paths\r\nare loaded.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the initialization from a rake task to the app initialization process.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50867/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 3,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50862",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50862/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50862/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50862/events",
        "html_url": "https://github.com/rails/rails/pull/50862",
        "id": 2097954073,
        "node_id": "PR_kwDNIULOZO-RWg",
        "number": 50862,
        "title": "Accept Tempfile as ActiveStorage attachable",
        "user": {
            "login": "shouichi",
            "id": 99586,
            "node_id": "MDQ6VXNlcjk5NTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/99586?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shouichi",
            "html_url": "https://github.com/shouichi",
            "followers_url": "https://api.github.com/users/shouichi/followers",
            "following_url": "https://api.github.com/users/shouichi/following{/other_user}",
            "gists_url": "https://api.github.com/users/shouichi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shouichi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shouichi/subscriptions",
            "organizations_url": "https://api.github.com/users/shouichi/orgs",
            "repos_url": "https://api.github.com/users/shouichi/repos",
            "events_url": "https://api.github.com/users/shouichi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shouichi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-24T10:31:28Z",
        "updated_at": "2024-01-29T23:50:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50862",
            "html_url": "https://github.com/rails/rails/pull/50862",
            "diff_url": "https://github.com/rails/rails/pull/50862.diff",
            "patch_url": "https://github.com/rails/rails/pull/50862.patch",
            "merged_at": null
        },
        "body": "`File` is already accepted as an attachable, so why not?",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50861",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50861/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50861/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50861/events",
        "html_url": "https://github.com/rails/rails/pull/50861",
        "id": 2097724253,
        "node_id": "PR_kwDNIULOZOxlpw",
        "number": 50861,
        "title": "ActionView: Raise on invalid format",
        "user": {
            "login": "3v0k4",
            "id": 5238698,
            "node_id": "MDQ6VXNlcjUyMzg2OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5238698?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3v0k4",
            "html_url": "https://github.com/3v0k4",
            "followers_url": "https://api.github.com/users/3v0k4/followers",
            "following_url": "https://api.github.com/users/3v0k4/following{/other_user}",
            "gists_url": "https://api.github.com/users/3v0k4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3v0k4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3v0k4/subscriptions",
            "organizations_url": "https://api.github.com/users/3v0k4/orgs",
            "repos_url": "https://api.github.com/users/3v0k4/repos",
            "events_url": "https://api.github.com/users/3v0k4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3v0k4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-24T08:37:24Z",
        "updated_at": "2024-01-24T08:37:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50861",
            "html_url": "https://github.com/rails/rails/pull/50861",
            "diff_url": "https://github.com/rails/rails/pull/50861.diff",
            "patch_url": "https://github.com/rails/rails/pull/50861.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFixes #45636 \r\n\r\n### Detail\r\n\r\nThis Pull Request adds a check in `ActionView::PathSet#find_all` to ensure all passed formats are valid.\r\n\r\nSince `#find_all` is used by `#exists?` and `#find`, the check is extended to all the public methods in the class that search templates.\r\n\r\n### Additional information\r\n\r\n.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50861/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50858",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50858/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50858/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50858/events",
        "html_url": "https://github.com/rails/rails/pull/50858",
        "id": 2097141500,
        "node_id": "PR_kwDNIULOZOSs4A",
        "number": 50858,
        "title": "Support options for ActionMailer delivery callbacks",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107188,
                "node_id": "MDU6TGFiZWwxMDcxODg=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
                "name": "actionmailer",
                "color": "8B00FC",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T23:16:27Z",
        "updated_at": "2024-01-23T23:16:31Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50858",
            "html_url": "https://github.com/rails/rails/pull/50858",
            "diff_url": "https://github.com/rails/rails/pull/50858.diff",
            "patch_url": "https://github.com/rails/rails/pull/50858.patch",
            "merged_at": null
        },
        "body": "Closes https://github.com/rails/rails/issues/50830.\r\n\r\nThe code works, but docs/tests etc are currently missing. I want to validate the approach before proceeding.\r\n\r\nInside action mailer I am reusing private methods from the implementation of callbacks from the action controller, see https://github.com/rails/rails/blob/main/actionpack/lib/abstract_controller/callbacks.rb.\r\n\r\nThe questions to consider are:\r\n1. Should the mailer callbacks really depend on the internals of controller callbacks, considering that it already includes it https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionmailer/lib/action_mailer/base.rb#L493\r\n2. Controllers callbacks have a `raise_on_missing_callbacks_action`, see https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionpack/lib/abstract_controller/callbacks.rb#L36 which can be set via `config.action_controller. raise_on_missing_callbacks_action`. This kinda makes sense for action mailer too, so should we introduce `config.action_mailer.raise_on_missing_callbacks_action` config? \r\n3. Controller callbacks use the word `\"controller\"`, see https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionpack/lib/abstract_controller/callbacks.rb#L54, while for mailer we should use the `\"mailer\"` word or should we make the message text more generic? \r\n\r\ncc @bensheldon ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50856",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50856/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50856/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50856/events",
        "html_url": "https://github.com/rails/rails/pull/50856",
        "id": 2096854463,
        "node_id": "PR_kwDNIULOZODAXw",
        "number": 50856,
        "title": "Document autosave validation behavior for ActiveRecord associations [ci skip]",
        "user": {
            "login": "Dmoment",
            "id": 29010172,
            "node_id": "MDQ6VXNlcjI5MDEwMTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/29010172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dmoment",
            "html_url": "https://github.com/Dmoment",
            "followers_url": "https://api.github.com/users/Dmoment/followers",
            "following_url": "https://api.github.com/users/Dmoment/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dmoment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dmoment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dmoment/subscriptions",
            "organizations_url": "https://api.github.com/users/Dmoment/orgs",
            "repos_url": "https://api.github.com/users/Dmoment/repos",
            "events_url": "https://api.github.com/users/Dmoment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dmoment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-23T19:41:36Z",
        "updated_at": "2024-01-23T21:03:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50856",
            "html_url": "https://github.com/rails/rails/pull/50856",
            "diff_url": "https://github.com/rails/rails/pull/50856.diff",
            "patch_url": "https://github.com/rails/rails/pull/50856.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nThis Pull Request needs to be merged to document the behavior of autosave: true enabling validations for belongs_to and has_one associations in ActiveRecord. Currently, this behavior is implemented in the code but not mentioned in the official documentation. This can lead to confusion for developers who rely on the Rails guides for accurate information on how ActiveRecord associations work. Including this information will improve the clarity and comprehensiveness of the Rails documentation.\r\n-->\r\n\r\n### Detail\r\n\r\nThis Pull Request adds documentation comments to the belongs_to and has_one methods in ActiveRecord::Associations to explain that autosave: true also enables validations by default. This is to reflect the actual behavior of these methods, as described in the source code and observed in application behavior.\r\n\r\n### Additional information\r\n\r\nReference to the issue discussed in Rails: Undocumented - validations enabled by autosave #50807\r\nInline gemfile with bundler example -\r\n``` ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n  gem \"rails\", \"7.1.3\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :authors do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table :books do |t|\r\n    t.belongs_to :author\r\n    t.string :title\r\n  end\r\nend\r\n\r\nclass Author < ActiveRecord::Base\r\n  has_one :book, autosave: true\r\nend\r\n\r\nclass Book < ActiveRecord::Base\r\n  belongs_to :author\r\n  validates :title, presence: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_autosave_with_validations\r\n    author = Author.new(name: \"J.K. Rowling\")\r\n    author.build_book # Not setting a title to trigger validation failure\r\n\r\n    refute author.save, \"Author should not be saved due to book validation failure\"\r\n    assert author.book.errors.full_messages.include?(\"Title can't be blank\"), \"Book should contain error on title\"\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change, specifically the addition of documentation for autosave: true behavior.\r\n* [x] Commit message includes a detailed description of the changes, for example: [Doc #50807] Document autosave validation behavior for associations.\r\n* [x] Tests are not required as this is a documentation update.\r\n* [x] CHANGELOG is not updated since this is a minor documentation change and does not affect library behavior.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50856/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50852",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50852/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50852/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50852/events",
        "html_url": "https://github.com/rails/rails/pull/50852",
        "id": 2096320468,
        "node_id": "PR_kwDNIULOZNlvqQ",
        "number": 50852,
        "title": "Action View: Fallback to existing partial when possible",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T15:19:52Z",
        "updated_at": "2024-01-23T15:27:15Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50852",
            "html_url": "https://github.com/rails/rails/pull/50852",
            "diff_url": "https://github.com/rails/rails/pull/50852.diff",
            "patch_url": "https://github.com/rails/rails/pull/50852.patch",
            "merged_at": null
        },
        "body": "Closes [#50844][]\r\n\r\nMotivation / Background\r\n---\r\n\r\nA controller declared in the top-level module can render a top-level Active Model instance whose partial is declared in the root view directory (like `articles/_article.html.erb`).\r\n\r\nA controller scoped within a module can render an Active Model instance whose partial is similarly scoped within view directory (like `scoped/articles/_article.html.erb`).\r\n\r\nA controller scoped within a module cannot render an Active Model instance whose partial is declared in the root view directory (like `articles/_article.html.erb`), despite the absence of a similarly scoped partial.\r\n\r\nThis is intended behavior that's powered by\r\n[`config.action_view.prefix_partial_path_with_controller_namespace = true`][prefix_partial_path_with_controller_namespace] (`true` by default).\r\n\r\nThis change was introduced in March of 2012 as part of [#5625][].\r\n\r\nDetail\r\n---\r\n\r\nAs a consumer of Action View, my intuition is that the lookup would fallback, in the same way that a controller that inherits from `ApplicationController` could define its own view, then rely on fallback to render an `app/views/application` partial.\r\n\r\nThis commit modifies the behavior to gracefully fall back to the root-level view partial.\r\n\r\nChecklist\r\n---\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n[#59844]: https://github.com/rails/rails/issues/50844\r\n[prefix_partial_path_with_controller_namespace]: https://guides.rubyonrails.org/configuring.html#config-action-view-prefix-partial-path-with-controller-namespace\r\n[#5625]: https://github.com/rails/rails/pull/5625\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50852/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50850",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50850/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50850/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50850/events",
        "html_url": "https://github.com/rails/rails/issues/50850",
        "id": 2095807650,
        "node_id": "I_kwDNIULOfOt8og",
        "number": 50850,
        "title": "belongs_to association doesn't work with composite `primary_key` option",
        "user": {
            "login": "bguban",
            "id": 1564376,
            "node_id": "MDQ6VXNlcjE1NjQzNzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1564376?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bguban",
            "html_url": "https://github.com/bguban",
            "followers_url": "https://api.github.com/users/bguban/followers",
            "following_url": "https://api.github.com/users/bguban/following{/other_user}",
            "gists_url": "https://api.github.com/users/bguban/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bguban/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bguban/subscriptions",
            "organizations_url": "https://api.github.com/users/bguban/orgs",
            "repos_url": "https://api.github.com/users/bguban/repos",
            "events_url": "https://api.github.com/users/bguban/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bguban/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-23T10:56:14Z",
        "updated_at": "2024-01-25T15:00:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have an aggregator model that represents the same entity from different providers. This model has a single primary but some of the providers have a composite key. So I must use 2 columns to be able to build the reflection\r\n\r\n```\r\nclass Ticker < ApplicationRecord\r\n  # this model has gvkey and iid but they are not the primary key. just fields to build the relation\r\n  has_many :co_actions, primary_key: [:gvkey, :iid], query_constraints: [:gvkey, :iid]\r\nend\r\n\r\nclass CoAction\r\n  # this model has gvkey and iid as a foreign key\r\n  belongs_to :ticker, primary_key: [:gvkey, :iid], query_constraints: [:gvkey, :iid]\r\nend\r\n```\r\n\r\nWhen I run\r\n```\r\nCoAction.take.ticker\r\n```\r\nit returns\r\n```\r\n/activerecord-7.1.3/lib/active_record/reflection.rb:576:in `check_validity!': Association CoAction#ticker primary key [:gvkey, :iid] doesn't match with foreign key [\"gvkey\", \"iid\"]. Please specify query_constraints, or primary_key and foreign_key values. (ActiveRecord::CompositePrimaryKeyMismatchError)\r\n```\r\nbut I would expect to receive the ticker model instead. The composite_primary_key gem does what expected but rails 7.1.3 relation builder converts the primary key into a string instead. So what you see in the message is a string `\"[:gvkey, :iid]\"`. (ActiveRecord::Reflection::BelongsToReflection#association_primary_key)\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.1\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50850/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50849",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50849/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50849/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50849/events",
        "html_url": "https://github.com/rails/rails/pull/50849",
        "id": 2095108275,
        "node_id": "PR_kwDNIULOZMkKDg",
        "number": 50849,
        "title": "Fixes ActionView::Template::Error when pasting images via Trix",
        "user": {
            "login": "schristm",
            "id": 24068,
            "node_id": "MDQ6VXNlcjI0MDY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schristm",
            "html_url": "https://github.com/schristm",
            "followers_url": "https://api.github.com/users/schristm/followers",
            "following_url": "https://api.github.com/users/schristm/following{/other_user}",
            "gists_url": "https://api.github.com/users/schristm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schristm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schristm/subscriptions",
            "organizations_url": "https://api.github.com/users/schristm/orgs",
            "repos_url": "https://api.github.com/users/schristm/repos",
            "events_url": "https://api.github.com/users/schristm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schristm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1180817762,
                "node_id": "MDU6TGFiZWwxMTgwODE3NzYy",
                "url": "https://api.github.com/repos/rails/rails/labels/actiontext",
                "name": "actiontext",
                "color": "3bc667",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T02:14:58Z",
        "updated_at": "2024-01-23T02:15:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50849",
            "html_url": "https://github.com/rails/rails/pull/50849",
            "diff_url": "https://github.com/rails/rails/pull/50849.diff",
            "patch_url": "https://github.com/rails/rails/pull/50849.patch",
            "merged_at": null
        },
        "body": "The asset pipeline really shouldn't be checked for remote images regardless, but this also happens to fix an issue with images pasted into Trix that get serialized as action-text-attachments with \"blob:\" urls.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50849/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50848",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50848/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50848/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50848/events",
        "html_url": "https://github.com/rails/rails/issues/50848",
        "id": 2095071717,
        "node_id": "I_kwDNIULOfOBB5Q",
        "number": 50848,
        "title": "O(N^2) operation in `CollectionAssociation#replace_common_records_in_memory` and **another** O(N^2) operation in `ActiveStorage::Attached::Many#attach`",
        "user": {
            "login": "malavbhavsar",
            "id": 1080592,
            "node_id": "MDQ6VXNlcjEwODA1OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1080592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malavbhavsar",
            "html_url": "https://github.com/malavbhavsar",
            "followers_url": "https://api.github.com/users/malavbhavsar/followers",
            "following_url": "https://api.github.com/users/malavbhavsar/following{/other_user}",
            "gists_url": "https://api.github.com/users/malavbhavsar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malavbhavsar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malavbhavsar/subscriptions",
            "organizations_url": "https://api.github.com/users/malavbhavsar/orgs",
            "repos_url": "https://api.github.com/users/malavbhavsar/repos",
            "events_url": "https://api.github.com/users/malavbhavsar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malavbhavsar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T01:29:33Z",
        "updated_at": "2024-01-23T01:39:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nApologies for not following the template. I wasn't sure how to include my half-baked fix with it... I have full repro and additional information here: [malavbhavsar/rails#1](https://github.com/malavbhavsar/rails/pull/1) \r\n\r\n```ruby\r\nuser_1 = User.create!(name: \"Jason\")\r\nuser_1.highlights.attach(\r\n  1000.times.map do |i|\r\n    {\r\n      io: StringIO.new(\"Example string inside text_file_#{i}\"),\r\n      filename: \"text_file_#{i}.txt\",\r\n      content_type: \"text/plain\",\r\n    }\r\n  end\r\n)\r\nuser_1.save!\r\nuser_1.reload\r\n\r\n# Below operation takes 5 seconds\r\nBenchmark.bm(30) do |x|\r\n  x.report(\"attach performance without fix\") do\r\n    user_1.highlights.attach(\r\n      {\r\n        io: StringIO.new(\"another text file. wow.\"),\r\n        filename: \"text_file_another.txt\",\r\n        content_type: \"text/plain\",\r\n      }\r\n    )\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nExecution time of `#attach` should not depend on how big a collection is.\r\n\r\n### Actual behavior\r\nOn a big `has_many_attached` collection, `#attach` takes a long time. If there are 1000 existing attachments, it will take 5 seconds to attach a new one.\r\n\r\n### System configuration\r\n**Rails version**: `main`\r\n\r\n**Ruby version**: `3.1.4`\r\n\r\n### Explanation\r\nWhen we call `#attach` on an already big activestorage collection, it first calls `record.public_send(\"#{name}=\", blobs + attachables.flatten) # e.g. record.highlights=...`. This eventually ends up calling `CollectionAssociation#replace_common_records_in_memory` which has been discovered as a performance problem in #46652. It ends up calling `Array#index` **n** times and `#==` **(n*n1)/2** times. In this case, `499500` times.\r\n\r\nFor ActiveRecord has_many collections, this is not a huge problem because, in my experience, `post.comments = new_comments` is not a common pattern. The general use case is `post.comments << new_comment`, which does pretty well performance-wise.\r\n\r\nUnfortunately for `has_many_attached` collection, calling `#attach` is a common use case and it calls `record.things_attachments=` under the hood. Aside - seems like people are running into this [problem](https://discuss.rubyonrails.org/t/attach-pictures-gets-very-slow/81684).\r\n\r\n### Flamegraph\r\n![flamegraph_1](https://github.com/rails/rails/assets/1080592/0bef4acf-aaa7-44b8-a830-daf4a6717ab5)\r\n\r\n### Possible solutions\r\n- Get #46652 merged\r\n- If we are concerned about the increased complexity of `@target_index_map` in #46652, I tried the [same approach with a local variable](https://github.com/malavbhavsar/rails/pull/1/files#diff-ceff30ddab4e756e3a70ece45076eb17ff2f587a068dae657d2ad3a265a3f0d6) and it helped.\r\n\r\n### ANOTHER problem\r\nAs flamegraph shows, there is another O(N^2) in `#attach`. That one is coming from `Attached::Changes::CreateOneOfMany#find_attachment`. I haven't figured out a possible solution for it... I don't understand the change tracking(?) active storage is doing but if someone can help me understand I can try fixing it. I assume this will probably need a new `Attached::Changes::AttachMany` and `Attached::Changes::AttachOne`?\r\n\r\n### Workaround\r\nI have found that creating blobs and attachments manually gets rid of BOTH problems and doesn't leave `highlights_attachments` and `highlights_blobs` stale.\r\n\r\n```ruby\r\nuser_3 = User.create!(name: \"Lauren\")\r\nuser_3.highlights.attach(\r\n  1000.times.map do |i|\r\n    {\r\n      io: StringIO.new(\"Example string inside text_file_#{i}\"),\r\n      filename: \"text_file_#{i}.txt\",\r\n      content_type: \"text/plain\",\r\n    }\r\n  end\r\n)\r\nuser_3.save!\r\nuser_3.reload\r\n\r\n# Below operation takes 0.02 second\r\nApplicationRecord.transaction do\r\n  blob = ActiveStorage::Blob.create_and_upload!(\r\n    io: StringIO.new(\"another text file. wow.\"),\r\n    filename: \"text_file_another.txt\",\r\n    content_type: \"text/plain\",\r\n  )\r\n  user_3.highlights_attachments.create!(\r\n    blob_id: blob.id,\r\n    name: 'highlights',\r\n  )\r\n  user_3.save!\r\nend\r\n```\r\n\r\n### Final performance stats\r\n\r\n```\r\n                                              user     system      total        real\r\nattach performance without fix            4.711782   0.013564   4.725346 (  4.760098)\r\n                                              user     system      total        real\r\nattach performance with half-ish fix      1.855833   0.009120   1.864953 (  1.901090)\r\n                                              user     system      total        real\r\nattach performance manual                 0.024790   0.002624   0.027414 (  0.030269)\r\n```\r\n\r\ncc: @jonathanhefner, @jeffcarbs, @danny-pflughoeft",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50848/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50846",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50846/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50846/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50846/events",
        "html_url": "https://github.com/rails/rails/pull/50846",
        "id": 2094996849,
        "node_id": "PR_kwDNIULOZMeOHA",
        "number": 50846,
        "title": "Set ActiveRecord::RecordNotFound#id when raised from a call to #reload a deleted record",
        "user": {
            "login": "segiddins",
            "id": 1946610,
            "node_id": "MDQ6VXNlcjE5NDY2MTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1946610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/segiddins",
            "html_url": "https://github.com/segiddins",
            "followers_url": "https://api.github.com/users/segiddins/followers",
            "following_url": "https://api.github.com/users/segiddins/following{/other_user}",
            "gists_url": "https://api.github.com/users/segiddins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/segiddins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/segiddins/subscriptions",
            "organizations_url": "https://api.github.com/users/segiddins/orgs",
            "repos_url": "https://api.github.com/users/segiddins/repos",
            "events_url": "https://api.github.com/users/segiddins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/segiddins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T00:04:37Z",
        "updated_at": "2024-01-23T16:49:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50846",
            "html_url": "https://github.com/rails/rails/pull/50846",
            "diff_url": "https://github.com/rails/rails/pull/50846.diff",
            "patch_url": "https://github.com/rails/rails/pull/50846.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because I am writing some tests for my app around records being deleted by calling `reload`, and there was no easy way to assert that the record raising the `ActiveRecord::RecordNotFound` exception was the record I was expecting\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `raise_record_not_found_exception!` to find IDs based on the primary key from the where condition, if no IDs are explicitly passed\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50846/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50844",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50844/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50844/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50844/events",
        "html_url": "https://github.com/rails/rails/issues/50844",
        "id": 2094843344,
        "node_id": "I_kwDNIULOfNzF0A",
        "number": 50844,
        "title": "`ActionView::Template::Error`: Missing Active Model partial when rendered from Controller declared in module",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-22T22:05:18Z",
        "updated_at": "2024-01-23T15:20:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_model/railtie\"\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/\" => \"test#index\"\r\n    get \"/scoped\" => \"scoped/test#index\"\r\n  end\r\nend\r\n\r\nclass Model\r\n  include ActiveModel::Model\r\nend\r\n\r\nclass TestController < ActionController::Base\r\nend\r\n\r\nmodule Scoped\r\n  class TestController < ActionController::Base\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def setup\r\n    super\r\n    @views = Dir.mktmpdir\r\n    ActionController::Base.prepend_view_path @views\r\n\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"test/index.html.erb\", \"<%= render Model.new %>\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_controller_renders_unscoped_partial\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_scoped_controller_renders_scoped_partial\r\n    view_file \"scoped/models/_model.html.erb\", \"Rendered\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/scoped\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  # \ud83d\udd34 FAILS\r\n  def test_scoped_controller_renders_unscoped_partial\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/scoped\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  private\r\n    def app\r\n      Rails.application\r\n    end\r\n\r\n    def view_file(name, content)\r\n      path = Pathname.new(@views).join(name)\r\n      path.dirname.tap(&:mkpath)\r\n      path.write(content)\r\n    end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nA controller declared in the top-level module (as exercised by `test_controller_renders_unscoped_partial`) can render a top-level Active Model instance whose partial is declared in the root view directory (like `models/_model.html.erb`).\r\n\r\nA controller scoped within a module (as exercised by `test_scoped_controller_renders_scoped_partial`) can render an Active Model instance whose partial is similarly scoped within view directory (like `scoped/models/_model.html.erb`).\r\n\r\nA controller scoped within a module (as exercised by `test_scoped_controller_renders_unscoped_partial`) should be able to render an Active Model instance whose partial is declared in the root view directory (like `models/_model.html.erb`), despite the absence of a similarly scoped partial. **It should gracefully fall back to the root-level view partial).\r\n\r\n### Actual behavior\r\n\r\nThe `test_scoped_controller_renders_unscoped_partial` test raises an Action View error:\r\n\r\n```\r\nActionView::Template::Error (Missing partial scoped/models/_model with {:locale=>[:en], :formats=>[:html], :variants=>[], :handlers=>[:raw, :erb, :html, :builder, :ruby]}.\r\n                                                                                                          \r\nSearched in:                                                                                              \r\n  * \"/var/folders/4q/q308vb3s12x2rzrgppdsz0540000gn/T/d20240122-19453-6bve0b\"\r\n):                                                                                                        \r\n    1: <%= render Model.new %>                                                                            \r\n                                          \r\n```\r\n\r\nIt cannot resolve the `models/_model` partial, since the rendering controller is namespaced within `scoped/`.\r\n\r\n### System configuration\r\n**Rails version**: `7.1.3`\r\n\r\n**Ruby version**: `3.2.0`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50844/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50842",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50842/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50842/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50842/events",
        "html_url": "https://github.com/rails/rails/issues/50842",
        "id": 2094312908,
        "node_id": "I_kwDNIULOfNStzA",
        "number": 50842,
        "title": "How to use Azure Managed Identity for authentication and authorization for Ruby On Rails Active Storage?",
        "user": {
            "login": "avivansh",
            "id": 40461477,
            "node_id": "MDQ6VXNlcjQwNDYxNDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/40461477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/avivansh",
            "html_url": "https://github.com/avivansh",
            "followers_url": "https://api.github.com/users/avivansh/followers",
            "following_url": "https://api.github.com/users/avivansh/following{/other_user}",
            "gists_url": "https://api.github.com/users/avivansh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/avivansh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/avivansh/subscriptions",
            "organizations_url": "https://api.github.com/users/avivansh/orgs",
            "repos_url": "https://api.github.com/users/avivansh/repos",
            "events_url": "https://api.github.com/users/avivansh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/avivansh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-22T16:41:34Z",
        "updated_at": "2024-01-22T16:41:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Current setup\r\n```yaml\r\nazure:\r\n  service: AzureStorage\r\n  storage_account_name: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-NAME\") %>\r\n  storage_access_key: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-ACCESS-KEY\") %>\r\n  container: <%= VaultService.get_secret('AZURE-ATTACHMENTS-BUCKET-NAME') %>\r\n```\r\n\r\nGiven the implementation of accessing Azure Storage using Access Token. [Link](https://github.com/azure/azure-storage-ruby/tree/master/blob#access-token)\r\n \r\n```ruby\r\nrequire \"azure/storage/common\"\r\n\r\naccess_token = <your initial access token>\r\n\r\n# Creating an instance of `Azure::Storage::Common::Core::TokenCredential`\r\ntoken_credential = Azure::Storage::Common::Core::TokenCredential.new access_token\r\ntoken_signer = Azure::Storage::Common::Core::Auth::TokenSigner.new token_credential\r\nblob_token_client = Azure::Storage::Blob::BlobService.new(storage_account_name: <your_account_name>, signer: token_signer)\r\n```\r\n\r\n\r\nGiven the implementation of Active Storage for Ruby on Rails. It uses azure-storage-blob gem under the hood.\r\n[link](https://github.com/rails/rails/blob/61d6eb119fc53678d8f5028bd73ae77e69b91fb6/activestorage/lib/active_storage/service/azure_storage_service.rb#L16)\r\n\r\n```ruby\r\n    def initialize(storage_account_name:, storage_access_key:, container:, public: false, **options)\r\n      @client = Azure::Storage::Blob::BlobService.create(storage_account_name: storage_account_name, storage_access_key: storage_access_key, **options)\r\n      @signer = Azure::Storage::Common::Core::Auth::SharedAccessSignature.new(storage_account_name, storage_access_key)\r\n      @container = container\r\n      @public = public\r\n    end\r\n```\r\n\r\nNew Setup, config/storage.yml\r\n\r\n```yaml\r\nazure:\r\n  service: AzureStorage\r\n  storage_account_name: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-NAME\") %>\r\n  container: <%= VaultService.get_secret('AZURE-ATTACHMENTS-BUCKET-NAME') %>\r\n```\r\n\r\nMonkey patched to use the above information to use active storage using managed identity\r\n\r\n```ruby\r\nmodule ActiveStorage\r\n  class Service::AzureStorageService < Service\r\n    def initialize(storage_account_name:, container:, public: false, **options)\r\n      access_token = AzureAd::ManagedIdentityTokenProvider.new('https://storage.azure.com/', client_id: ENV['AKS_MANAGED_IDENTITY_ID']).get_authentication_header.split(' ').last\r\n      # Creating an instance of `Azure::Storage::Common::Core::TokenCredential`\r\n      token_credential = ::Azure::Storage::Common::Core::TokenCredential.new access_token\r\n      token_signer = ::Azure::Storage::Common::Core::Auth::TokenSigner.new token_credential\r\n      @client = Azure::Storage::Blob::BlobService.create(storage_account_name: storage_account_name, signer: token_signer, **options)\r\n      user_delegation_key = @client.get_user_delegation_key(DateTime.now - 1.minute, DateTime.now + 6.day + 23.hours)\r\n      @signer = Azure::Storage::Common::Core::Auth::SharedAccessSignature.new(storage_account_name: storage_account_name, user_delegation_key: user_delegation_key )\r\n      @container = container\r\n      @public = public\r\n    rescue StandardError => e\r\n      raise e unless Rake.respond_to?(:application) && (!Rake.application.top_level_tasks.exclude?('assets:precompile') || !Rake.application.top_level_tasks.exclude?('source_map:upload_source_map'))\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n\r\nIs this approach correct? (I am yet to test this.). Also, is there any other approach on how to achieve this? I have posted the question on [stackoverflow](https://stackoverflow.com/questions/77846948/can-we-connect-active-storage-in-ruby-on-rails-with-azure-using-managed-identity) as well.\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: Rails 6.1.7.3\r\n\r\n**Ruby version**: ruby 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50842/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50838",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50838/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50838/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50838/events",
        "html_url": "https://github.com/rails/rails/pull/50838",
        "id": 2093903637,
        "node_id": "PR_kwDNIULOZLiUKA",
        "number": 50838,
        "title": "Fix SQLite table definition parsing bug to handle commas in default function definitions",
        "user": {
            "login": "fractaledmind",
            "id": 5077225,
            "node_id": "MDQ6VXNlcjUwNzcyMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5077225?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fractaledmind",
            "html_url": "https://github.com/fractaledmind",
            "followers_url": "https://api.github.com/users/fractaledmind/followers",
            "following_url": "https://api.github.com/users/fractaledmind/following{/other_user}",
            "gists_url": "https://api.github.com/users/fractaledmind/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fractaledmind/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fractaledmind/subscriptions",
            "organizations_url": "https://api.github.com/users/fractaledmind/orgs",
            "repos_url": "https://api.github.com/users/fractaledmind/repos",
            "events_url": "https://api.github.com/users/fractaledmind/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fractaledmind/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-22T13:18:21Z",
        "updated_at": "2024-01-22T13:18:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50838",
            "html_url": "https://github.com/rails/rails/pull/50838",
            "diff_url": "https://github.com/rails/rails/pull/50838.diff",
            "patch_url": "https://github.com/rails/rails/pull/50838.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request fixes a bug in the low-level SQLite adapter introspection logic. I came across the bug when working with virtual columns and JSON, but there are many possible cases where this would cause problems. Here is one reproducible bug script though:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\");\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.json :payload, null: false, default: {}\r\n    t.virtual :external_id, type: :string, as: \"JSON_EXTRACT(payload, '$.id')\", stored: true, null: false, index: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_with_comma_in_definition_is_autopopulated\r\n    post = Post.create!(payload: { id: 'pst_1' })\r\n\r\n    assert_equal 'pst_1', post.external_id\r\n  end\r\nend\r\n```\r\n\r\n### Detail\r\n\r\nThis Pull Request more intelligently parses the SQL string description of the table to ensure that we only split by commas that mark a new column definition. In order to accomplish this, the table parsing method needs the list of column names for the table. When `table_structure_sql` is called by `table_structure_with_collation`, these can be supplied as they are already present; when it is called by `foreign_keys`, however, they are not present and thus must be fetched.\r\n\r\nI also added a simple regression test as a part of the virtual column test case.\r\n\r\n### Additional information\r\n\r\nThis bug has existed for a long time, but I most recently touched the relevant code in https://github.com/rails/rails/pull/49376.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\ncc: @byroot (this is related to #49346), @tenderlove (this is related to https://github.com/rails/rails/pull/49290), @yahonda (this is related to https://github.com/rails/rails/pull/49376)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50838/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50837",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50837/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50837/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50837/events",
        "html_url": "https://github.com/rails/rails/pull/50837",
        "id": 2093866588,
        "node_id": "PR_kwDNIULOZLgRiw",
        "number": 50837,
        "title": "Ensure pre-7.1 migrations use legacy index names when using `rename_table`",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-22T12:59:01Z",
        "updated_at": "2024-01-28T20:19:02Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50837",
            "html_url": "https://github.com/rails/rails/pull/50837",
            "diff_url": "https://github.com/rails/rails/pull/50837.diff",
            "patch_url": "https://github.com/rails/rails/pull/50837.patch",
            "merged_at": null
        },
        "body": "Fixes https://github.com/rails/rails/issues/50833.\r\nFollow up to https://github.com/rails/rails/pull/47753 and https://github.com/rails/rails/pull/47863.\r\n\r\nThe easiest way to preserve the old behavior is to rename indexes back after the `rename_table` was run.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50837/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50835",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50835/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50835/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50835/events",
        "html_url": "https://github.com/rails/rails/issues/50835",
        "id": 2093550361,
        "node_id": "I_kwDNIULOfMkLGQ",
        "number": 50835,
        "title": "ActiveStorage::FileNotFoundError (ActiveStorage::FileNotFoundError)",
        "user": {
            "login": "raoehtesham03",
            "id": 152256436,
            "node_id": "U_kgDOCRM_tA",
            "avatar_url": "https://avatars.githubusercontent.com/u/152256436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoehtesham03",
            "html_url": "https://github.com/raoehtesham03",
            "followers_url": "https://api.github.com/users/raoehtesham03/followers",
            "following_url": "https://api.github.com/users/raoehtesham03/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoehtesham03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoehtesham03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoehtesham03/subscriptions",
            "organizations_url": "https://api.github.com/users/raoehtesham03/orgs",
            "repos_url": "https://api.github.com/users/raoehtesham03/repos",
            "events_url": "https://api.github.com/users/raoehtesham03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoehtesham03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1071962662,
                "node_id": "MDU6TGFiZWwxMDcxOTYyNjYy",
                "url": "https://api.github.com/repos/rails/rails/labels/more-information-needed",
                "name": "more-information-needed",
                "color": "bfdadc",
                "default": false,
                "description": "When reporter needs to provide more information"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-22T10:07:53Z",
        "updated_at": "2024-01-23T13:33:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have upgraded my rails application from 6.0 to 6.1 . Since then when I am  executing below queries\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n d = Document.find(768365)\r\n d.page_image.variant(resize_to_limit: Document::PAGE_IMAGE_STYLES[:small]).processed\r\n\r\n```\r\nI am getting this error\r\n### Actual behavior\r\n  ActiveStorage::FileNotFoundError (ActiveStorage::FileNotFoundError)\r\n\r\n### System configuration\r\n**Rails version**: 7.0.8\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50835/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50833",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50833/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50833/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50833/events",
        "html_url": "https://github.com/rails/rails/issues/50833",
        "id": 2092932851,
        "node_id": "I_kwDNIULOfL-e8w",
        "number": 50833,
        "title": "`ActiveRecord::Migration[7.0]`'s `rename_table` uses 7.1's new truncated index name format",
        "user": {
            "login": "r7kamura",
            "id": 111689,
            "node_id": "MDQ6VXNlcjExMTY4OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/111689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/r7kamura",
            "html_url": "https://github.com/r7kamura",
            "followers_url": "https://api.github.com/users/r7kamura/followers",
            "following_url": "https://api.github.com/users/r7kamura/following{/other_user}",
            "gists_url": "https://api.github.com/users/r7kamura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/r7kamura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/r7kamura/subscriptions",
            "organizations_url": "https://api.github.com/users/r7kamura/orgs",
            "repos_url": "https://api.github.com/users/r7kamura/repos",
            "events_url": "https://api.github.com/users/r7kamura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/r7kamura/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-22T02:09:26Z",
        "updated_at": "2024-01-23T03:17:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.3\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_index_name_after_rename_table_with_long_table_name\r\n    long_table_name = \"a\" * 48\r\n\r\n    migration_class = Class.new(ActiveRecord::Migration[7.0]) do\r\n      define_method :migrate do |x|\r\n        create_table :posts do |t|\r\n          t.string :title\r\n          t.index :title\r\n        end\r\n        rename_table :posts, long_table_name\r\n      end\r\n    end\r\n    migration = migration_class.new\r\n\r\n    ActiveRecord::Migrator.new(\r\n      :up,\r\n      [migration],\r\n      ActiveRecord::Base.connection.schema_migration,\r\n      ActiveRecord::Base.connection.internal_metadata\r\n    ).migrate\r\n\r\n    assert_equal \"index_#{long_table_name}_on_title\", ActiveRecord::Base.connection.indexes(long_table_name).first.name\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe above test should pass.\r\n\r\nThis means that since the index name was renamed to `index_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_on_title` in Rails 7.0 and earlier, if `ActiveRecord::Migration[7.0]` or earlier is specified, the same name should be used even in Rails 7.1 or later.\r\n\r\n### Actual behavior\r\n\r\nThe above test fails with the following output:\r\n\r\n```\r\nF\r\n\r\nFailure:\r\nBugTest#test_index_name_after_rename_table_with_long_table_name [example.rb:53]:\r\n--- expected\r\n+++ actual\r\n@@ -1 +1 @@\r\n-\"index_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_on_title\"\r\n+\"idx_on_title_0b3d36c24b\"\r\n\r\n\r\n\r\nbin/rails test example.rb:32\r\n\r\n\r\n\r\nFinished in 0.026827s, 37.2753 runs/s, 37.2753 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\nAs a result, if db/migrate contains `rename_table`, the index names created between Rails 7.0 and 7.1 may be different.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]\r\n\r\n### Other information\r\n\r\nThis is due to the following change:\r\n\r\n- https://github.com/rails/rails/pull/47753\r\n\r\nI think a similar change to the following is needed for `#rename_table`:\r\n\r\n- https://github.com/rails/rails/pull/47863\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50833/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50830",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50830/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50830/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50830/events",
        "html_url": "https://github.com/rails/rails/issues/50830",
        "id": 2092565763,
        "node_id": "I_kwDNIULOfLoFAw",
        "number": 50830,
        "title": "Add support for `ActionMailer.*_delivery` callback `only` and `except` options",
        "user": {
            "login": "viralpraxis",
            "id": 39729785,
            "node_id": "MDQ6VXNlcjM5NzI5Nzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/39729785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viralpraxis",
            "html_url": "https://github.com/viralpraxis",
            "followers_url": "https://api.github.com/users/viralpraxis/followers",
            "following_url": "https://api.github.com/users/viralpraxis/following{/other_user}",
            "gists_url": "https://api.github.com/users/viralpraxis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viralpraxis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viralpraxis/subscriptions",
            "organizations_url": "https://api.github.com/users/viralpraxis/orgs",
            "repos_url": "https://api.github.com/users/viralpraxis/repos",
            "events_url": "https://api.github.com/users/viralpraxis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viralpraxis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107188,
                "node_id": "MDU6TGFiZWwxMDcxODg=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
                "name": "actionmailer",
                "color": "8B00FC",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-21T12:31:43Z",
        "updated_at": "2024-01-21T18:59:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nCurrently ActionMailer's `*_delivery` callbacks do not support `only` and `except` filters, which are quite useful because some callback actions are required for a subset of mailer methods. Technically, only/except can be emulated via `if` option, but another problem is that's not clear from the documentation which options can be passed (currently `only` and `except` are simply ignored).\r\n\r\nI believe that many developers might except `ActionMailer` to behave just like `ActionController`,  so current API implementation might lead to unexpected bugs.\r\n\r\nNote that documentation on `before_action` (and similar callbacks) explicitly refer to possible options:\r\n\r\n> before_action(names, block)[Link](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-before_action)\r\n> Append a callback before actions. See [_insert_callbacks](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_insert_callbacks) for parameter details.\r\n\r\n### Expected behavior\r\nAt least some explicit info on possible `*_delivery` callback options, or (which would be better) support for `only` and `except` options.\r\n\r\n### Actual behavior\r\nMentioned options are simply ignored, no documentation on possible options.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50829",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50829/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50829/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50829/events",
        "html_url": "https://github.com/rails/rails/pull/50829",
        "id": 2092440404,
        "node_id": "PR_kwDNIULOZKUusw",
        "number": 50829,
        "title": "Fix query references for non-hash association where clause values",
        "user": {
            "login": "ezekg",
            "id": 6979737,
            "node_id": "MDQ6VXNlcjY5Nzk3Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6979737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezekg",
            "html_url": "https://github.com/ezekg",
            "followers_url": "https://api.github.com/users/ezekg/followers",
            "following_url": "https://api.github.com/users/ezekg/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezekg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezekg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezekg/subscriptions",
            "organizations_url": "https://api.github.com/users/ezekg/orgs",
            "repos_url": "https://api.github.com/users/ezekg/repos",
            "events_url": "https://api.github.com/users/ezekg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezekg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-21T06:11:40Z",
        "updated_at": "2024-01-30T22:33:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50829",
            "html_url": "https://github.com/rails/rails/pull/50829",
            "diff_url": "https://github.com/rails/rails/pull/50829.diff",
            "patch_url": "https://github.com/rails/rails/pull/50829.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nThis PR fixes an issue where non-hash where-clause values for associations would not set `references_values`. This could (and often does) end up causing hard-to-debug SQL errors due to association name vs table name mismatch, e.g. querying on a singular association name while the actual join table is plural, or vice-versa due to a prior scope.\r\n\r\nMore detailed reproduction script:  https://gist.github.com/ezekg/5969735eb8c5092fb25198bd8fac4053\r\n\r\n#### Before\r\n\r\n```rb\r\nscope = Comment.where(post: { id: post })\r\nscope.references_values # => [\"post\"]\r\n\r\nscope = Comment.where(post: post)\r\nscope.references_values # => []\r\n```\r\n\r\nI'd expect these to be synonymous since [`#id` is called on `post`](https://github.com/ezekg/rails/blob/c37450b76b24cac7951032c4210db17a9c1b7f51/activerecord/lib/active_record/relation/predicate_builder.rb#L58) for the second case.\r\n\r\n#### After\r\n\r\n```rb\r\nscope = Comment.where(post: { id: post })\r\nscope.references_values # => [\"post\"]\r\n\r\nscope = Comment.where(post: post)\r\nscope.references_values # => [\"post\"]\r\n```\r\n\r\nWith this patch, they're now more or less synonymous, both setting `references_values`.\r\n\r\nSince this is likely a breaking change (it broke a few tests in [keygen-sh/keygen-api](https://github.com/keygen-sh/keygen-api) when testing against the patch), this may require some more thought. But it is worth noting that all broken tests were related to various workarounds for this particular bug.\r\n\r\nLet me know what you guys think is the best course of action here.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50828",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50828/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50828/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50828/events",
        "html_url": "https://github.com/rails/rails/pull/50828",
        "id": 2092434369,
        "node_id": "PR_kwDNIULOZKUcQg",
        "number": 50828,
        "title": "Add examples for form helper tags [ci skip]",
        "user": {
            "login": "akhilgkrishnan",
            "id": 22231095,
            "node_id": "MDQ6VXNlcjIyMjMxMDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22231095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akhilgkrishnan",
            "html_url": "https://github.com/akhilgkrishnan",
            "followers_url": "https://api.github.com/users/akhilgkrishnan/followers",
            "following_url": "https://api.github.com/users/akhilgkrishnan/following{/other_user}",
            "gists_url": "https://api.github.com/users/akhilgkrishnan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akhilgkrishnan/subscriptions",
            "organizations_url": "https://api.github.com/users/akhilgkrishnan/orgs",
            "repos_url": "https://api.github.com/users/akhilgkrishnan/repos",
            "events_url": "https://api.github.com/users/akhilgkrishnan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akhilgkrishnan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-21T05:48:04Z",
        "updated_at": "2024-02-01T04:02:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50828",
            "html_url": "https://github.com/rails/rails/pull/50828",
            "diff_url": "https://github.com/rails/rails/pull/50828.diff",
            "patch_url": "https://github.com/rails/rails/pull/50828.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nThis Pull Request add examples for `FormTagHelper` methods.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50828/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50827",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50827/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50827/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50827/events",
        "html_url": "https://github.com/rails/rails/issues/50827",
        "id": 2092292151,
        "node_id": "I_kwDNIULOfLXYNw",
        "number": 50827,
        "title": "System tests not working on Rails 7.1.3 running on a remote machine/docker container.",
        "user": {
            "login": "srabuini",
            "id": 286604,
            "node_id": "MDQ6VXNlcjI4NjYwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/286604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srabuini",
            "html_url": "https://github.com/srabuini",
            "followers_url": "https://api.github.com/users/srabuini/followers",
            "following_url": "https://api.github.com/users/srabuini/following{/other_user}",
            "gists_url": "https://api.github.com/users/srabuini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srabuini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srabuini/subscriptions",
            "organizations_url": "https://api.github.com/users/srabuini/orgs",
            "repos_url": "https://api.github.com/users/srabuini/repos",
            "events_url": "https://api.github.com/users/srabuini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srabuini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-21T00:44:06Z",
        "updated_at": "2024-01-30T12:48:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nI've been running my system tests using a remote browser (on a docker container) since Rails 7.0 without a problem, with the following set up.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nclass ApplicationSystemTestCase < ActionDispatch::SystemTestCase\r\n  driven_by :selenium,\r\n            using: :chrome,\r\n            screen_size: [1400, 1400],\r\n            options: { browser: :remote,\r\n                       url: 'http://chrome-server:4444' } do |driver_option|\r\n    driver_option.add_argument 'disable-dev-shm-usage'\r\n  end\r\n```\r\n\r\nIt looks like the problem was introduced in #49908 and related issues/fixes.\r\n\r\nI fixed it locally just monkeypatching `Selenium::Webdriver::DriverFinder.path` just to return nil.\r\n\r\nHaving a look at the code, I think that it would be nice to avoid `Browser#preload` when browser is `:remote` in:\r\n\r\nhttps://github.com/rails/rails/blob/3064d4f53a48beb107a549a2249820350e698050/actionpack/lib/action_dispatch/system_testing/driver.rb#L19\r\n\r\nIf you think it's the right way to tackle it, I could post a fix.\r\n\r\n### Actual behavior\r\nAfter a while, an exception is raised:\r\n\r\n```\r\nSelenium::WebDriver::Error::SessionNotCreatedError: Could not start a new session. Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: unknown error: no chrome binary at /root/.cache/selenium/chrome/linux64/120.0.6099.109/chrome \r\nHost info: host: 'c3260b1b08ce', ip: '192.168.16.3'\r\nBuild info: version: '4.10.0', revision: 'c14d967899'\r\nSystem info: os.name: 'Linux', os.arch: 'aarch64', os.version: '6.5.11-linuxkit', java.version: '11.0.18'\r\nDriver info: driver.version: unknown\r\nBuild info: version: '4.10.0', revision: 'c14d967899'\r\nSystem info: os.name: 'Linux', os.arch: 'aarch64', os.version: '6.5.11-linuxkit', java.version: '11.0.18'\r\nDriver info: driver.version: unknown\r\n    [remote server] org.openqa.selenium.grid.node.config.DriverServiceSessionFactory(DriverServiceSessionFactory.java):210:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.config.DriverServiceSessionFactory(DriverServiceSessionFactory.java):69:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.local.SessionSlot(SessionSlot.java):147:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.local.LocalNode(LocalNode.java):467:in `newSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor(LocalDistributor.java):643:in `startSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor(LocalDistributor.java):560:in `newSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable(LocalDistributor.java):814:in `handleNewSessionRequest'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable(LocalDistributor.java):773:in `lambda$run$1'\r\n    [remote server] java.util.concurrent.ThreadPoolExecutor(ThreadPoolExecutor.java):1128:in `runWorker'\r\n    [remote server] java.util.concurrent.ThreadPoolExecutor$Worker(ThreadPoolExecutor.java):628:in `run'\r\n    [remote server] java.lang.Thread(Thread.java):829:in `run'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:55:in `assert_ok'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:34:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `create_response'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/default.rb:103:in `request'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:601:in `execute'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:53:in `create_session'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:317:in `block in create_bridge'\r\n    <internal:kernel>:90:in `tap'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:316:in `create_bridge'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:74:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/driver.rb:38:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:57:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:57:in `for'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver.rb:89:in `for'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/selenium/driver.rb:83:in `browser'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:55:in `block in register_selenium'\r\n    <internal:kernel>:90:in `tap'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:54:in `register_selenium'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:41:in `block in register'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/session.rb:105:in `driver'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/session.rb:91:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:421:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:421:in `block in session_pool'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:317:in `current_session'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/dsl.rb:46:in `page'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:106:in `save_image'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:36:in `take_screenshot'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:47:in `take_failed_screenshot'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/setup_and_teardown.rb:8:in `before_teardown'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.1..3\r\n\r\n**Ruby version**: 3.2.2 (2023-03-30 revision e51014f9c0) [aarch64-linux]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50826",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50826/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50826/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50826/events",
        "html_url": "https://github.com/rails/rails/pull/50826",
        "id": 2092286908,
        "node_id": "PR_kwDNIULOZKMR9Q",
        "number": 50826,
        "title": "[docs] Add more examples to `#in_order_of` [ci-skip]",
        "user": {
            "login": "thdaraujo",
            "id": 707418,
            "node_id": "MDQ6VXNlcjcwNzQxOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thdaraujo",
            "html_url": "https://github.com/thdaraujo",
            "followers_url": "https://api.github.com/users/thdaraujo/followers",
            "following_url": "https://api.github.com/users/thdaraujo/following{/other_user}",
            "gists_url": "https://api.github.com/users/thdaraujo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thdaraujo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thdaraujo/subscriptions",
            "organizations_url": "https://api.github.com/users/thdaraujo/orgs",
            "repos_url": "https://api.github.com/users/thdaraujo/repos",
            "events_url": "https://api.github.com/users/thdaraujo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thdaraujo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-21T00:21:26Z",
        "updated_at": "2024-01-31T16:16:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50826",
            "html_url": "https://github.com/rails/rails/pull/50826",
            "diff_url": "https://github.com/rails/rails/pull/50826.diff",
            "patch_url": "https://github.com/rails/rails/pull/50826.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n`#in_order_of` is an excellent method and makes ordering enum columns easier, and many complex order case/when queries can be refactored to use it.\r\n\r\nThis PR was created because I believe having more examples would help people understand this method a bit better.\r\n\r\nAlso, I think it's useful to document that this method will order results, but also FILTER them, excluding rows in which the column doesn't match any of the given values.\r\n\r\nSo I expanded the description and added these examples:\r\n- what happens when dealing with `enum` +columns+\r\n- what happens when passing `nil` as a +value+ for nullable columns\r\n\r\nHere's a gist with some tests: https://gist.github.com/thdaraujo/7d9aa5ffd1b61bf57604ded14535e357\r\n\r\nI'd be happy to add other examples for other usecases you think are relevant, just let me know!\r\n\r\n### Detail\r\n\r\nThis Pull Request expands the documentation for [in_order_of](https://api.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-in_order_of)\r\n\r\n### Additional information\r\n\r\nn/a\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* ~[ ] Tests are added or updated if you fix a bug or add a feature.~ not applicable\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50826/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50823",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50823/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50823/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50823/events",
        "html_url": "https://github.com/rails/rails/pull/50823",
        "id": 2092154145,
        "node_id": "PR_kwDNIULOZKF0tA",
        "number": 50823,
        "title": "Add methods to `ActiveRecord::Relation::FinderMethods` to determine if it contains exactly/more than/less than N records",
        "user": {
            "login": "jordinl",
            "id": 16135423,
            "node_id": "MDQ6VXNlcjE2MTM1NDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16135423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordinl",
            "html_url": "https://github.com/jordinl",
            "followers_url": "https://api.github.com/users/jordinl/followers",
            "following_url": "https://api.github.com/users/jordinl/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordinl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordinl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordinl/subscriptions",
            "organizations_url": "https://api.github.com/users/jordinl/orgs",
            "repos_url": "https://api.github.com/users/jordinl/repos",
            "events_url": "https://api.github.com/users/jordinl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordinl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2024-01-20T16:56:20Z",
        "updated_at": "2024-02-01T14:30:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50823",
            "html_url": "https://github.com/rails/rails/pull/50823",
            "diff_url": "https://github.com/rails/rails/pull/50823.diff",
            "patch_url": "https://github.com/rails/rails/pull/50823.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nI've had to check in a few places if a relation had exactly or less than or more than N records. On top of that, if the collection contains a lot of records, counting on the entire collection not only is slower but also unnecessary and limiting the count the first N or N+1 records is sufficient and faster.\r\n\r\n### Detail\r\n\r\nAdds the following methods to `ActiveRecord::Relation::FinderMethods`:\r\n  * `exactly?` returns true if the relation contains exactly N records, false otherwise.\r\n  * `at_least?` returns true if the relation contains at least N records, false otherwise.\r\n  * `at_most?` returns true if the relation contains at most N records, false otherwise.\r\n  * `less_than?` returns true if the relation contains less than N records, false otherwise.\r\n  * `more_than?` returns true if the relation contains more than N records, false otherwise.\r\n\r\nThese methods perform a `limit(M).count` (where M = N or N + 1) under the hood.\r\n\r\n### Additional information\r\n\r\nI think the naming of these methods is fine as is. Don't know if others would prefer to prefix these with `has_` or `contains_`, ie `has_exactly?` or `contains_exactly?`.\r\n\r\nWith regards to performance of doing the count with and without the limit. Without the limit when there are 8M records I get:\r\n\r\n```sql\r\n  Referral Count (135.2ms)  SELECT COUNT(*) FROM \"referrals\" WHERE \"referrals\".\"company_id\" = $1  [[\"company_id\", \"29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535\"]]\r\n=> 8467786\r\n```\r\n\r\nWith a limit of a 100:\r\n\r\n```sql\r\n  Referral Count (0.4ms)  SELECT COUNT(*) FROM (SELECT 1 AS one FROM \"referrals\" WHERE \"referrals\".\"company_id\" = $1 LIMIT $2) subquery_for_count  [[\"company_id\",\"29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535\", [\"LIMIT\", 100]]\r\n=> 100\r\n```\r\n\r\nSo it's 300x faster even when doing an index only scan:\r\n\r\n```sql\r\nexplain SELECT COUNT(*) FROM \"referrals\" WHERE \"referrals\".\"company_id\" ='29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535';\r\n\r\n                                                                          QUERY PLAN                                                                           \r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n Finalize Aggregate  (cost=136744.58..136744.59 rows=1 width=8)\r\n   ->  Gather  (cost=136744.36..136744.57 rows=2 width=8)\r\n         Workers Planned: 2\r\n         ->  Partial Aggregate  (cost=135744.36..135744.37 rows=1 width=8)\r\n               ->  Parallel Index Only Scan using index_referrals_on_company_id_and_conversion_state on referrals  (cost=0.56..127008.31 rows=3494420 width=0)\r\n                     Index Cond: (company_id = '29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535'::uuid)\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50823/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50820",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50820/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50820/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50820/events",
        "html_url": "https://github.com/rails/rails/pull/50820",
        "id": 2091981384,
        "node_id": "PR_kwDNIULOZJ9GIg",
        "number": 50820,
        "title": "docs: Update validation status based on autosave status",
        "user": {
            "login": "MONSURU-rgb",
            "id": 78952006,
            "node_id": "MDQ6VXNlcjc4OTUyMDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78952006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MONSURU-rgb",
            "html_url": "https://github.com/MONSURU-rgb",
            "followers_url": "https://api.github.com/users/MONSURU-rgb/followers",
            "following_url": "https://api.github.com/users/MONSURU-rgb/following{/other_user}",
            "gists_url": "https://api.github.com/users/MONSURU-rgb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MONSURU-rgb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MONSURU-rgb/subscriptions",
            "organizations_url": "https://api.github.com/users/MONSURU-rgb/orgs",
            "repos_url": "https://api.github.com/users/MONSURU-rgb/repos",
            "events_url": "https://api.github.com/users/MONSURU-rgb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MONSURU-rgb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-20T09:24:46Z",
        "updated_at": "2024-01-22T07:16:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50820",
            "html_url": "https://github.com/rails/rails/pull/50820",
            "diff_url": "https://github.com/rails/rails/pull/50820.diff",
            "patch_url": "https://github.com/rails/rails/pull/50820.patch",
            "merged_at": null
        },
        "body": "This Pull Request has been created to enlighten users that validations are enabled by default when autosave is True for the  `has_one` and `belongs_to`.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50815",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50815/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50815/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50815/events",
        "html_url": "https://github.com/rails/rails/pull/50815",
        "id": 2091630145,
        "node_id": "PR_kwDNIULOZJpzBQ",
        "number": 50815,
        "title": "Add format constraints for generated pwa routes",
        "user": {
            "login": "rossta",
            "id": 11673,
            "node_id": "MDQ6VXNlcjExNjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11673?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rossta",
            "html_url": "https://github.com/rossta",
            "followers_url": "https://api.github.com/users/rossta/followers",
            "following_url": "https://api.github.com/users/rossta/following{/other_user}",
            "gists_url": "https://api.github.com/users/rossta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rossta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rossta/subscriptions",
            "organizations_url": "https://api.github.com/users/rossta/orgs",
            "repos_url": "https://api.github.com/users/rossta/repos",
            "events_url": "https://api.github.com/users/rossta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rossta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T23:10:41Z",
        "updated_at": "2024-01-22T12:00:23Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50815",
            "html_url": "https://github.com/rails/rails/pull/50815",
            "diff_url": "https://github.com/rails/rails/pull/50815.diff",
            "patch_url": "https://github.com/rails/rails/pull/50815.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAs a followup to #50528, which added default pwa manifest and service worker routes and files to the new app generator, I'd like to associate the new routes with the expected mime types.\r\n\r\n### Detail\r\n\r\nWe expect the `pwa#manifest` request to be limited to json, i.e. `manifest.json` and we expect the `pwa#service_worker` request to be limited to js, i.e. `service-worker.js`. This change adds format constraints to the generated routes.\r\n\r\n### Additional information\r\n\r\nI didn't see associated tests with the previous change but would be open to adding some if desired.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50812",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50812/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50812/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50812/events",
        "html_url": "https://github.com/rails/rails/issues/50812",
        "id": 2091410608,
        "node_id": "I_kwDNIULOfKhksA",
        "number": 50812,
        "title": "Redundant JOIN produced when merging relations from STI classes",
        "user": {
            "login": "mintyfresh",
            "id": 7896757,
            "node_id": "MDQ6VXNlcjc4OTY3NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7896757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintyfresh",
            "html_url": "https://github.com/mintyfresh",
            "followers_url": "https://api.github.com/users/mintyfresh/followers",
            "following_url": "https://api.github.com/users/mintyfresh/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintyfresh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintyfresh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintyfresh/subscriptions",
            "organizations_url": "https://api.github.com/users/mintyfresh/orgs",
            "repos_url": "https://api.github.com/users/mintyfresh/repos",
            "events_url": "https://api.github.com/users/mintyfresh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintyfresh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-19T20:59:12Z",
        "updated_at": "2024-01-26T14:10:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nMerging relations with joins to the same association by different classes in an STI tree results in duplicated, redundant JOINs in the emitted SQL.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :type\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n    t.boolean :published\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n\r\n  scope :with_comments, -> { joins(:comments).where(comments: { published: true }) }\r\nend\r\n\r\nclass CustomPost < Post\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_merge_base_case\r\n    posts_with_comments1 = CustomPost.with_comments\r\n    posts_with_comments2 = CustomPost.with_comments\r\n\r\n    assert_equal [:comments], posts_with_comments1.joins_values\r\n    assert_equal [:comments], posts_with_comments2.joins_values\r\n\r\n    combined_scope = posts_with_comments1.merge(posts_with_comments2)\r\n\r\n    puts combined_scope.to_sql\r\n    assert_equal [:comments], combined_scope.joins_values\r\n  end\r\n\r\n  def test_merge_sti_case\r\n    posts_with_comments = Post.with_comments\r\n    custom_posts_with_comments = CustomPost.with_comments\r\n\r\n    assert_equal [:comments], posts_with_comments.joins_values\r\n    assert_equal [:comments], custom_posts_with_comments.joins_values\r\n\r\n    combined_scope = posts_with_comments.merge(custom_posts_with_comments)\r\n\r\n    puts combined_scope.to_sql\r\n    # FAILS! two joins are generated\r\n    assert_equal [:comments], combined_scope.joins_values\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nA query with a single join to the foreign table is produced\r\ne.g.\r\n```sql\r\nSELECT\r\n  \"posts\".*\r\nFROM\r\n  \"posts\"\r\n  INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\"\r\nWHERE\r\n  \"posts\".\"type\" = 'CustomPost'\r\n  AND \"comments\".\"published\" = 1\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nA query with two redundant joins to the foreign table is produced\r\n```sql\r\nSELECT\r\n  \"posts\".*\r\nFROM\r\n  \"posts\"\r\n  INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\"\r\n  INNER JOIN \"comments\" \"comments_posts\" ON \"comments_posts\".\"post_id\" = \"posts\".\"id\"\r\nWHERE\r\n  \"posts\".\"type\" = 'CustomPost'\r\n  AND \"comments\".\"published\" = 1\r\n```\r\nThis duplicated join is not referenced by the rest of the query in any way\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.1.0\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50811",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50811/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50811/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50811/events",
        "html_url": "https://github.com/rails/rails/pull/50811",
        "id": 2090495786,
        "node_id": "PR_kwDNIULOZItj4w",
        "number": 50811,
        "title": "Add multiple databases AR bug template [ci skip]",
        "user": {
            "login": "HeyNonster",
            "id": 47484308,
            "node_id": "MDQ6VXNlcjQ3NDg0MzA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47484308?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HeyNonster",
            "html_url": "https://github.com/HeyNonster",
            "followers_url": "https://api.github.com/users/HeyNonster/followers",
            "following_url": "https://api.github.com/users/HeyNonster/following{/other_user}",
            "gists_url": "https://api.github.com/users/HeyNonster/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HeyNonster/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HeyNonster/subscriptions",
            "organizations_url": "https://api.github.com/users/HeyNonster/orgs",
            "repos_url": "https://api.github.com/users/HeyNonster/repos",
            "events_url": "https://api.github.com/users/HeyNonster/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HeyNonster/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T12:54:28Z",
        "updated_at": "2024-01-19T12:58:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50811",
            "html_url": "https://github.com/rails/rails/pull/50811",
            "diff_url": "https://github.com/rails/rails/pull/50811.diff",
            "patch_url": "https://github.com/rails/rails/pull/50811.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because there are a few PRs we'd like to open that relate to the multiple database code in Rails but there was no existing template for a multiple database setup. \ud83d\ude42 \r\n\r\n### Detail\r\n\r\nThis commit adds a new bug report template that's based off of the existing [Active Record bug report\r\ntemplate](https://github.com/rails/rails/blob/main/guides/bug_report_templates/active_record.rb) but creates a multiple database setup.\r\n\r\nThe template creates an `UnshardedModel` abstract `ActiveRecord` model that connects to a single database (with a replica configured) and a `ShardedModel` abstract `ActiveRecord` model that has two shards configured, each with their own replica.\r\n\r\nEach sqlite3 in-memory database is separate because [opening multiple database connections each with the filename \":memory:\" will create independent in-memory databases](https://www.sqlite.org/inmemorydb.html).\r\n\r\nNote, that while replica databases are configured, sqlite3 does not support database replication and therefore records written to the writer databases will not auto-populate on the replica/reader databases. The replica configurations are included to allow for testing role switching, not for validating replication itself.\r\n\r\n### Additional information\r\n\r\nYou can test that the template works by running:\r\n\r\n `ruby guides/bug_report_templates/active_record_multiple_databases.rb` \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50807",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50807/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50807/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50807/events",
        "html_url": "https://github.com/rails/rails/issues/50807",
        "id": 2090245533,
        "node_id": "I_kwDNIULOfJadnQ",
        "number": 50807,
        "title": "Undocumented - validations enabled by autosave",
        "user": {
            "login": "semaperepelitsa",
            "id": 347921,
            "node_id": "MDQ6VXNlcjM0NzkyMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/347921?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semaperepelitsa",
            "html_url": "https://github.com/semaperepelitsa",
            "followers_url": "https://api.github.com/users/semaperepelitsa/followers",
            "following_url": "https://api.github.com/users/semaperepelitsa/following{/other_user}",
            "gists_url": "https://api.github.com/users/semaperepelitsa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semaperepelitsa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semaperepelitsa/subscriptions",
            "organizations_url": "https://api.github.com/users/semaperepelitsa/orgs",
            "repos_url": "https://api.github.com/users/semaperepelitsa/repos",
            "events_url": "https://api.github.com/users/semaperepelitsa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semaperepelitsa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T10:47:52Z",
        "updated_at": "2024-01-20T17:25:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Validations are enabled by default when autosave is true:\r\n\r\n    belongs_to :foo, autosave: true\r\n    has_one :foo, autosave: true\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/reflection.rb#L653-L658\r\n\r\nHowever, this is not documented in `has_one` or `belongs_to`:\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/associations.rb#L1660-L1669\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/associations.rb#L1830-L1840",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50807/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50793",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50793/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50793/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50793/events",
        "html_url": "https://github.com/rails/rails/pull/50793",
        "id": 2088694143,
        "node_id": "PR_kwDNIULOZHJaNQ",
        "number": 50793,
        "title": "PoC: Add an option to disable connection checkout caching",
        "user": {
            "login": "byroot",
            "id": 44640,
            "node_id": "MDQ6VXNlcjQ0NjQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/byroot",
            "html_url": "https://github.com/byroot",
            "followers_url": "https://api.github.com/users/byroot/followers",
            "following_url": "https://api.github.com/users/byroot/following{/other_user}",
            "gists_url": "https://api.github.com/users/byroot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/byroot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/byroot/subscriptions",
            "organizations_url": "https://api.github.com/users/byroot/orgs",
            "repos_url": "https://api.github.com/users/byroot/repos",
            "events_url": "https://api.github.com/users/byroot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/byroot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-18T16:54:17Z",
        "updated_at": "2024-01-19T22:11:55Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50793",
            "html_url": "https://github.com/rails/rails/pull/50793",
            "diff_url": "https://github.com/rails/rails/pull/50793.diff",
            "patch_url": "https://github.com/rails/rails/pull/50793.patch",
            "merged_at": null
        },
        "body": "### Context\r\n\r\nIn part for performance and simplicity reasons, and in part because of its historical lack of threading support, Active Record rely quite heavily on `ActiveRecord::Base.connection` checking out and holding a connection inside a thread of fiber local variable.\r\n\r\nConcretly, every request or job lazily checkout connections when it needs to perform a database operations, and then holds onto it until the request or job completes, at which point the `Executor` hook automatically check it back in the pool.\r\n\r\nFor the overwhelming majority of Rails application, which don't do enough IOs to benefit from more than a handful of threads, it's a perfectly adequate solution, as it pretty much remove connection management as a concern.\r\n\r\nHowever for applications that spent most of their time on IOs others than the database (e.g. 3rd party APIs), and would benefit from much higher levels of concurrency, this strategy is problematic because it requires about as many database connections as there is threads or fibers, even though most connections are idle but can't be used because they checked out of the pool and held by another thead or fiber.\r\n\r\n### Goal\r\n\r\nI believe the current model is still preferable for the vast majority of Rails users, and changing the way `ActiveRecord::Base.connection` behaves would break a ton of code anyway. So I believe it should remain the default.\r\n\r\nHowever I think we could support an alternative mode, in which `ActiveRecord::Base.connection` doesn't hold onto the connection until the end of the request cycle, but instead immediately check it back in, allowing it to be re-used immediately.\r\n\r\n### Implementation\r\n\r\nFirst, nothing changes unless you disable `ActiveRecord.cache_connection_checkout`.\r\n\r\nThen, since a lot of code in Rails itself, in third party libraries, and in private Rails applications do rely on `Model.connection.something()`, we must make it work without caching the connection.\r\n\r\nTo solve this, when caching is disabled, `Model.connection` returns a proxy object, that delegates the methods it receive to a freshly checked out connection, and then check it back in. See `LazyConnectionProxy` in `connection_pool.rb` for the details.\r\n\r\nThat is the key to permitting this feature while retaining backward compatibility. It's not perfect, as code might assume that subsequent calls to `Model.connection` will return the same connection instance, but in most case it's not necessary.\r\n\r\nAlso, while the proxy holds the connection, it caches in on the thread or fiber, so subsequent calls to `Model.connection` will return the same connection until it's checked back in. This solves most of the statefulness issues, like opening a transaction etc, as long as the APIs are blocked based.\r\n\r\n### Status\r\n\r\nThis is a proof of concept, it's nowhere near ready to merge, it's mostly to explore whether it's doable with some work, or just not possible.\r\n\r\nMost of the Active Record test suite passes against Sqlite3, except for 3 tests that do disconnect and reconnect. In general all the tests had to be opted out of the feature, I still need to dig into why exactly.\r\n\r\nI also had to disable the feature for a few test suites that rely too much on the caching, and would need a bit of refactoring to pass without, but at first glance it doesn't look like a fundamental incompatibility.\r\n\r\n### Concerns\r\n\r\nThere is a number of Active Record methods that currently cause more than one checkout/checkin cycle and would benefit from a strategically placed `with_connection do` call to optimize that. But that is mostly a performance concern, not a fundamental incompatibility.\r\n\r\nOne more major concern is the query cache. As it stand it's pretty much useless when checkout caching is disabled, because when we check the connection back in, we have to clear the cache, so it's pretty much always empty. To make it usable again, we need a substantial refactoring. At first glance it looks possible, just not trivial.\r\n\r\n### Conclusion\r\n\r\nI'm a bit on the fence about this. I think we can make it work, but I already spent most of one day on just the proof of concept, and would need substantially more work to iron out all the issues.\r\n\r\nThe actual code changes needed in Active Record itself are relatively small, it's really all the test suite and 3rd party code that would need to be updated to properly work with this option that is the big can of worm I'm worried about.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50793/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50792",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50792/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50792/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50792/events",
        "html_url": "https://github.com/rails/rails/issues/50792",
        "id": 2088620752,
        "node_id": "I_kwDNIULOfH3S0A",
        "number": 50792,
        "title": "`app:update` from Rails 7.1.2 to 7.1.3 creates `new_framework_defaults_7_1.rb`",
        "user": {
            "login": "GitToTheHub",
            "id": 13721821,
            "node_id": "MDQ6VXNlcjEzNzIxODIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13721821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GitToTheHub",
            "html_url": "https://github.com/GitToTheHub",
            "followers_url": "https://api.github.com/users/GitToTheHub/followers",
            "following_url": "https://api.github.com/users/GitToTheHub/following{/other_user}",
            "gists_url": "https://api.github.com/users/GitToTheHub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GitToTheHub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GitToTheHub/subscriptions",
            "organizations_url": "https://api.github.com/users/GitToTheHub/orgs",
            "repos_url": "https://api.github.com/users/GitToTheHub/repos",
            "events_url": "https://api.github.com/users/GitToTheHub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GitToTheHub/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-18T16:15:11Z",
        "updated_at": "2024-01-19T09:40:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI made an update from Rails 7.1.2 to 7.1.3 by changing the rails version number to 7.1.3 in the gemfile and running `bundle update`. After that i ran `rails app:update` which produced the file `config/initializers/new_framework_defaults_7_1.rb`. I already have `config.load_defaults 7.1` in my `config/application.rb`, so I think, this file shouldn't be generated?\r\n\r\n### Expected behavior\r\nThe file `config/initializers/new_framework_defaults_7_1.rb` should not be created, if `config.load_defaults 7.1` is already present in `config/application.rb`.\r\n\r\n### Actual behavior\r\nThe file `config/initializers/new_framework_defaults_7_1.rb` is created after  `rails app:update`, despite `config.load_defaults 7.1` is already present in `config/application.rb`.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x64-mingw-ucrt]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50785",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50785/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50785/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50785/events",
        "html_url": "https://github.com/rails/rails/pull/50785",
        "id": 2087298785,
        "node_id": "PR_kwDNIULOZF9HWA",
        "number": 50785,
        "title": "Add note about `params` hash in Action Controller Overview [ci skip] ",
        "user": {
            "login": "JunichiIto",
            "id": 1148320,
            "node_id": "MDQ6VXNlcjExNDgzMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1148320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunichiIto",
            "html_url": "https://github.com/JunichiIto",
            "followers_url": "https://api.github.com/users/JunichiIto/followers",
            "following_url": "https://api.github.com/users/JunichiIto/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunichiIto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunichiIto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunichiIto/subscriptions",
            "organizations_url": "https://api.github.com/users/JunichiIto/orgs",
            "repos_url": "https://api.github.com/users/JunichiIto/repos",
            "events_url": "https://api.github.com/users/JunichiIto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunichiIto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-18T01:26:00Z",
        "updated_at": "2024-01-18T17:22:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50785",
            "html_url": "https://github.com/rails/rails/pull/50785",
            "diff_url": "https://github.com/rails/rails/pull/50785.diff",
            "patch_url": "https://github.com/rails/rails/pull/50785.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nNewbies tend to misunderstand `params` hash is a plain old Hash. So I added a note that `params` hash is ActionController::Parameters.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes \"4 Parameters\" in Action Controller Overview.\r\n\r\n![Screenshot 2024-01-18 at 10 31 55](https://github.com/rails/rails/assets/1148320/de0dc860-35d1-4d3b-b209-ab4abbac5a17)\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50785/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50785/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50780",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50780/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50780/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50780/events",
        "html_url": "https://github.com/rails/rails/pull/50780",
        "id": 2086045509,
        "node_id": "PR_kwDNIULOZE41OQ",
        "number": 50780,
        "title": "Preserve `--asset-pipeline propshaft` when running `app:update`",
        "user": {
            "login": "zachasme",
            "id": 986290,
            "node_id": "MDQ6VXNlcjk4NjI5MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/986290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zachasme",
            "html_url": "https://github.com/zachasme",
            "followers_url": "https://api.github.com/users/zachasme/followers",
            "following_url": "https://api.github.com/users/zachasme/following{/other_user}",
            "gists_url": "https://api.github.com/users/zachasme/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zachasme/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zachasme/subscriptions",
            "organizations_url": "https://api.github.com/users/zachasme/orgs",
            "repos_url": "https://api.github.com/users/zachasme/repos",
            "events_url": "https://api.github.com/users/zachasme/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zachasme/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-17T12:02:43Z",
        "updated_at": "2024-01-28T20:30:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50780",
            "html_url": "https://github.com/rails/rails/pull/50780",
            "diff_url": "https://github.com/rails/rails/pull/50780.diff",
            "patch_url": "https://github.com/rails/rails/pull/50780.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because `skip_sprockets?` wasn't being preserved when running `app:update` in a project using `propshaft`. Helpful when #50444 lands.\r\n\r\n### Detail\r\n\r\nThis Pull Request sets `options[:asset_pipeline]` in `AppUpdater` based on whether Sprockets/Propshaft Railtie is defined.\r\n\r\nWithout this change, `app:update` will suggest injecting sprocket configuration in a propshaft project.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50780/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50772",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50772/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50772/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50772/events",
        "html_url": "https://github.com/rails/rails/issues/50772",
        "id": 2084942985,
        "node_id": "I_kwDNIULOfEW0iQ",
        "number": 50772,
        "title": "Tests can't run without yarn",
        "user": {
            "login": "arusa",
            "id": 623008,
            "node_id": "MDQ6VXNlcjYyMzAwOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/623008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arusa",
            "html_url": "https://github.com/arusa",
            "followers_url": "https://api.github.com/users/arusa/followers",
            "following_url": "https://api.github.com/users/arusa/following{/other_user}",
            "gists_url": "https://api.github.com/users/arusa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arusa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arusa/subscriptions",
            "organizations_url": "https://api.github.com/users/arusa/orgs",
            "repos_url": "https://api.github.com/users/arusa/repos",
            "events_url": "https://api.github.com/users/arusa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arusa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-16T21:11:58Z",
        "updated_at": "2024-01-29T19:27:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n1. Create a new rails app that uses yarn\r\n2. `docker build -t testimage:1 .`\r\n3. `docker run -it testimage:1 /bin/bash`\r\n4. `bin/rails test`\r\n\r\n### Expected behavior\r\n\r\nAs the image already contains all precompiled assets I would expect the tests to be able to run successfully even without precompiling first.\r\n\r\n### Actual behavior\r\n\r\n`bin/rails test` now always runs `test:prepare`, which tries to compile the assets and therefore crashes, because the default Dockerfile doesn't keep yarn in the image.\r\n\r\nI want an option to skip running `test:prepare` when running tests.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.1.4",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50772/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50768",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50768/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50768/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50768/events",
        "html_url": "https://github.com/rails/rails/issues/50768",
        "id": 2084328879,
        "node_id": "I_kwDNIULOfDxVrw",
        "number": 50768,
        "title": "The `counter_cache_column?` method is depending of initialisation order.",
        "user": {
            "login": "BuonOmo",
            "id": 11378424,
            "node_id": "MDQ6VXNlcjExMzc4NDI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11378424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BuonOmo",
            "html_url": "https://github.com/BuonOmo",
            "followers_url": "https://api.github.com/users/BuonOmo/followers",
            "following_url": "https://api.github.com/users/BuonOmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/BuonOmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BuonOmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BuonOmo/subscriptions",
            "organizations_url": "https://api.github.com/users/BuonOmo/orgs",
            "repos_url": "https://api.github.com/users/BuonOmo/repos",
            "events_url": "https://api.github.com/users/BuonOmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BuonOmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-16T15:54:58Z",
        "updated_at": "2024-01-20T17:21:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :people, force: true do |t|\r\n    t.integer :cars_count, default: 0\r\n  end\r\n\r\n  create_table :cars, force: true do |t|\r\n    t.belongs_to :person\r\n  end\r\nend\r\n\r\nclass Car < ActiveRecord::Base\r\n  belongs_to :person, counter_cache: true\r\nend\r\n\r\n# If the `Person` class was defined before, the test below would work\r\nclass Person < ActiveRecord::Base\r\n  has_many :cars\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_counter_cache_column?\r\n    assert Person.counter_cache_column?(\"cars_count\")\r\n    assert_not Car.counter_cache_column?(\"cars_count\")\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nthe `Person` class should identify clearly `cars_count` as a counter cache column\r\n\r\n### Actual behavior\r\n\r\nSince `Person` is initialized afterwards, when running `belong_to`, the `cars_count` column is not added to its counter_cache\r\n\r\n### System configuration\r\n**Rails version**: found in `7.1.2`, present in edge as well\r\n\r\n**Ruby version**: 3.2.1\r\n\r\n### Notes\r\n\r\nIn the actual ActiveRecord test suite, this test could fall if in the future a file requiring first `models/car` is loaded before the `counter_cache_test` file.\r\n\r\nAlso I'd be so glad to work on the solution. It seems to me that the issue is that [this expression](https://github.com/rails/rails/blob/0656787be644d7d5550e82450153403853c73014/activerecord/lib/active_record/associations/builder/belongs_to.rb#L39C5-L39C5) can return `nil`. I'm just not sure how it should be solved (by raising, autoloading, warning, ...)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50768/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50763",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50763/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50763/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50763/events",
        "html_url": "https://github.com/rails/rails/pull/50763",
        "id": 2082801297,
        "node_id": "PR_kwDNIULOZCHHNg",
        "number": 50763,
        "title": "Allow custom domain extractor class on ActionDispatch::Http::URL",
        "user": {
            "login": "rainerborene",
            "id": 101501,
            "node_id": "MDQ6VXNlcjEwMTUwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/101501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainerborene",
            "html_url": "https://github.com/rainerborene",
            "followers_url": "https://api.github.com/users/rainerborene/followers",
            "following_url": "https://api.github.com/users/rainerborene/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainerborene/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainerborene/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainerborene/subscriptions",
            "organizations_url": "https://api.github.com/users/rainerborene/orgs",
            "repos_url": "https://api.github.com/users/rainerborene/repos",
            "events_url": "https://api.github.com/users/rainerborene/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainerborene/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-15T23:32:04Z",
        "updated_at": "2024-01-18T20:47:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50763",
            "html_url": "https://github.com/rails/rails/pull/50763",
            "diff_url": "https://github.com/rails/rails/pull/50763.diff",
            "patch_url": "https://github.com/rails/rails/pull/50763.patch",
            "merged_at": null
        },
        "body": "In these last years we have been using a monkey patch at our company that smartly detects domain and subdomains according to the [Public Suffix database](https://publicsuffix.org/). There are a few gems in our ecosystems like [public_suffix](https://github.com/weppos/publicsuffix-ruby) and [mini_suffix](https://github.com/discourse/mini_suffix) that does exactly that. But Rails uses an older and primitive method that splits the domain tld using `config.action_dispatch.tld_length` option. This pull request changes that by allowing developers to specify a custom domain extractor class.\r\n\r\nThis is really useful for any SaaS company that offers custom domain and subdomains.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50763/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50761",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50761/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50761/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50761/events",
        "html_url": "https://github.com/rails/rails/pull/50761",
        "id": 2082689851,
        "node_id": "PR_kwDNIULOZCBEaQ",
        "number": 50761,
        "title": "Improve documentation of ActiveRecord::Core.configurations",
        "user": {
            "login": "p8",
            "id": 28561,
            "node_id": "MDQ6VXNlcjI4NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p8",
            "html_url": "https://github.com/p8",
            "followers_url": "https://api.github.com/users/p8/followers",
            "following_url": "https://api.github.com/users/p8/following{/other_user}",
            "gists_url": "https://api.github.com/users/p8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/p8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/p8/subscriptions",
            "organizations_url": "https://api.github.com/users/p8/orgs",
            "repos_url": "https://api.github.com/users/p8/repos",
            "events_url": "https://api.github.com/users/p8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/p8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-15T21:18:15Z",
        "updated_at": "2024-01-16T12:15:00Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50761",
            "html_url": "https://github.com/rails/rails/pull/50761",
            "diff_url": "https://github.com/rails/rails/pull/50761.diff",
            "patch_url": "https://github.com/rails/rails/pull/50761.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThe documenation of `ActiveRecord::Core.configurations=` [reads](https://edgeapi.rubyonrails.org/classes/ActiveRecord/Core.html#method-c-configurations-3D) like the documentation for the getter instead of the setter.\r\nIt should not describe what is returned, but what arguments are expected.\r\n\r\nThis changes moves the documentation of the setter to the getter and adds a new comment to the setter.\r\n\r\nThis commit has 2 separate commits to make sure the diffs only apply to documentation and not the code.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50761/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50759",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50759/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50759/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50759/events",
        "html_url": "https://github.com/rails/rails/issues/50759",
        "id": 2082675602,
        "node_id": "I_kwDNIULOfCMbkg",
        "number": 50759,
        "title": "Migrate Rails API doc to use Markdown instead of RDoc format",
        "user": {
            "login": "rafaelfranca",
            "id": 47848,
            "node_id": "MDQ6VXNlcjQ3ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rafaelfranca",
            "html_url": "https://github.com/rafaelfranca",
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/87",
            "html_url": "https://github.com/rails/rails/milestone/87",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/87/labels",
            "id": 10350173,
            "node_id": "MI_kwDNIULOAJ3uXQ",
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "node_id": "MDQ6VXNlcjI3NDE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2741?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dhh",
                "html_url": "https://github.com/dhh",
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "gists_url": "https://api.github.com/users/dhh/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "events_url": "https://api.github.com/users/dhh/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 16,
            "closed_issues": 9,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-01-15T21:02:57Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-15T21:02:56Z",
        "updated_at": "2024-01-15T21:02:57Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "### NOTE: We aren't going to accept any PR doing this migration\r\n\r\nFrom time to time, we have to remember that while documenting some method on Rails, using `+foo+` to denote a method name or argument sometimes need to change to be `<tt>foo</tt>` in order to be documented. We also sometimes receive PRs with people accidentally introducing backticks that doesn't have any effect in the documentation.\r\n\r\nOur guides also uses Markdown syntax, so contributors need to know they need to change syntax when writting documentation.\r\n\r\nText editors, like VScode don't know how to highlight RDoc code so often see Rails documentation formatted like this when you hover over a class\r\n\r\n<img width=\"802\" alt=\"Screenshot 2024-01-15 at 4 01 03\u202fPM\" src=\"https://github.com/rails/rails/assets/47848/2e31157d-dd86-487d-83d6-c34e4c013151\">\r\n<img width=\"810\" alt=\"Screenshot 2024-01-15 at 4 02 00\u202fPM\" src=\"https://github.com/rails/rails/assets/47848/435e899b-8cfc-4bf4-9b8c-dfd7383fd867\">\r\n\r\nNowadays, RDoc supports Markdown as syntax. So we can avoid all those problems migrating all our API documentation to use Markdown.\r\n\r\n### NOTE: We aren't going to accept any PR doing this migration",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50759/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 6,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50759/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50755",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50755/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50755/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50755/events",
        "html_url": "https://github.com/rails/rails/issues/50755",
        "id": 2081488829,
        "node_id": "I_kwDNIULOfBD_vQ",
        "number": 50755,
        "title": "Action Mailbox mistakes attachment as body if no body exists",
        "user": {
            "login": "HashNotAdam",
            "id": 902714,
            "node_id": "MDQ6VXNlcjkwMjcxNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/902714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashNotAdam",
            "html_url": "https://github.com/HashNotAdam",
            "followers_url": "https://api.github.com/users/HashNotAdam/followers",
            "following_url": "https://api.github.com/users/HashNotAdam/following{/other_user}",
            "gists_url": "https://api.github.com/users/HashNotAdam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HashNotAdam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HashNotAdam/subscriptions",
            "organizations_url": "https://api.github.com/users/HashNotAdam/orgs",
            "repos_url": "https://api.github.com/users/HashNotAdam/repos",
            "events_url": "https://api.github.com/users/HashNotAdam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HashNotAdam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1174770998,
                "node_id": "MDU6TGFiZWwxMTc0NzcwOTk4",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailbox",
                "name": "actionmailbox",
                "color": "f4a6cb",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-15T08:23:19Z",
        "updated_at": "2024-01-17T18:28:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have set up a mailbox to process DMARC reports. This has been working fine in most cases, but it seems that sometimes Google doesn't include body text in the email\u2014only a zipped XML file as an attachment.\r\n\r\nWhen this happens, Action Mailbox decodes the Base64 encoding of the attachment and assigns the string representation of the binary data to the body of the message without adding the file as an attachment. I have noticed that the email also isn't recognised as being multipart.\r\n\r\n### Steps to reproduce\r\n\r\nI've created [a gist which includes the unedited email source](https://gist.github.com/HashNotAdam/f5d08e370e70e9e39105fa765563c5b3) as copied from the EML file stored by Active Storage\r\n\r\n### Expected behavior\r\nThe body of the message should include the Base64 encoding of the attachment and there should be 1 attachment representing a ZIP file\r\n\r\n### Actual behavior\r\nCalling `body.to_s` on the underlying `Mail::Message` will return a string representation of the binary data which can be unzipped to return the XML. If the EML file were to be opened in an email client, this would be presented as an attachment\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50755/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50754",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50754/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50754/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50754/events",
        "html_url": "https://github.com/rails/rails/pull/50754",
        "id": 2081074654,
        "node_id": "PR_kwDNIULOZAp6FQ",
        "number": 50754,
        "title": "Allow named variants to evaluate dynamic transformation options",
        "user": {
            "login": "xjunior",
            "id": 8156,
            "node_id": "MDQ6VXNlcjgxNTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xjunior",
            "html_url": "https://github.com/xjunior",
            "followers_url": "https://api.github.com/users/xjunior/followers",
            "following_url": "https://api.github.com/users/xjunior/following{/other_user}",
            "gists_url": "https://api.github.com/users/xjunior/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xjunior/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xjunior/subscriptions",
            "organizations_url": "https://api.github.com/users/xjunior/orgs",
            "repos_url": "https://api.github.com/users/xjunior/repos",
            "events_url": "https://api.github.com/users/xjunior/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xjunior/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-15T01:18:24Z",
        "updated_at": "2024-01-18T00:07:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50754",
            "html_url": "https://github.com/rails/rails/pull/50754",
            "diff_url": "https://github.com/rails/rails/pull/50754.diff",
            "patch_url": "https://github.com/rails/rails/pull/50754.patch",
            "merged_at": null
        },
        "body": "<!--\nThanks for contributing to Rails!\n\nPlease do not make *Draft* pull requests, as they still send\nnotifications to everyone watching the Rails repo.\n\nCreate a pull request when it is ready for review and feedback\nfrom the Rails team :).\n\nIf your pull request affects documentation or any non-code\nchanges, guidelines for those changes are [available\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\n\nAbout this template\n\nThe following template aims to help contributors write a good description for their pull requests.\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\n\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\n\n### Motivation / Background\n\n<!--\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\n-->\n\nSometimes you want to build a transformation based on the user input, or information persisted in the database (i.e.: add a watermark to a picture, crop based on user input)\n\n### Detail\n\nThis PR allow the transformations to be built based on user input:\n\n```ruby\nclass User < ApplicationRecord\n  has_one_attached :photo do |attachable|\n    attachable.variant :default, crop: :crop_positions\n    attachable.variant :thumb, crop: :crop_positions,\n                               resize_to_limit: [100, 100]\n  end\n\n  def crop_positions\n    [crop_x1, crop_y1, crop_x2, crop_y2]\n  end\nend\n```\n\n### Checklist\n\nBefore submitting the PR make sure the following are checked:\n\n- [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\n- [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\n- [x] Tests are added or updated if you fix a bug or add a feature.\n- [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50754/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50754/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50744",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50744/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50744/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50744/events",
        "html_url": "https://github.com/rails/rails/pull/50744",
        "id": 2080405528,
        "node_id": "PR_kwDNIULOZAH76A",
        "number": 50744,
        "title": "docs: Update FormHelper comments to use `form_with` instead of `form_for` [ci skip]",
        "user": {
            "login": "takatea",
            "id": 39912547,
            "node_id": "MDQ6VXNlcjM5OTEyNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39912547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/takatea",
            "html_url": "https://github.com/takatea",
            "followers_url": "https://api.github.com/users/takatea/followers",
            "following_url": "https://api.github.com/users/takatea/following{/other_user}",
            "gists_url": "https://api.github.com/users/takatea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/takatea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/takatea/subscriptions",
            "organizations_url": "https://api.github.com/users/takatea/orgs",
            "repos_url": "https://api.github.com/users/takatea/repos",
            "events_url": "https://api.github.com/users/takatea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/takatea/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-13T17:32:39Z",
        "updated_at": "2024-01-13T17:32:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50744",
            "html_url": "https://github.com/rails/rails/pull/50744",
            "diff_url": "https://github.com/rails/rails/pull/50744.diff",
            "patch_url": "https://github.com/rails/rails/pull/50744.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because comments in `ActionView::Helpers::FormHelper` refer to the deprecated `form_for` instead of the recommended `form_with`. This could potentially cause confusion for developers consulting the Rails API documentation, such as [Action View Form Builder page](https://api.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html).\r\n\r\n### Detail\r\n\r\nThis Pull Request changes  the comments in `ActionView::Helpers::FormHelper`, replacing instances of `form_for` with `form_with`.\r\n\r\n### Additional information\r\n\r\nThe Rails guide has already documented the usage of `form_with` on the [form_helpers page](https://guides.rubyonrails.org/form_helpers.html).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50744/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50734",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50734/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50734/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50734/events",
        "html_url": "https://github.com/rails/rails/pull/50734",
        "id": 2079487889,
        "node_id": "PR_kwDNIULOY_XCHQ",
        "number": 50734,
        "title": "docs: Adjust composite primary keys documentation [skip ci]",
        "user": {
            "login": "matsales28",
            "id": 54689845,
            "node_id": "MDQ6VXNlcjU0Njg5ODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/54689845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matsales28",
            "html_url": "https://github.com/matsales28",
            "followers_url": "https://api.github.com/users/matsales28/followers",
            "following_url": "https://api.github.com/users/matsales28/following{/other_user}",
            "gists_url": "https://api.github.com/users/matsales28/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matsales28/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matsales28/subscriptions",
            "organizations_url": "https://api.github.com/users/matsales28/orgs",
            "repos_url": "https://api.github.com/users/matsales28/repos",
            "events_url": "https://api.github.com/users/matsales28/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matsales28/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T18:49:57Z",
        "updated_at": "2024-01-17T18:36:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50734",
            "html_url": "https://github.com/rails/rails/pull/50734",
            "diff_url": "https://github.com/rails/rails/pull/50734.diff",
            "patch_url": "https://github.com/rails/rails/pull/50734.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because the documentation for composite primary keys wasn't correct. \r\n\r\n### Detail\r\n\r\nWhile working on `shoulda-matchers` I noticed that the documentation is not correct. We actually need to declare the `query_constraints` option in the `has_many` association using the same attribute name as the ones in the associated object.\r\n\r\n```ruby\r\nclass Author < ApplicationRecord\r\n  self.primary_key = [:first_name, :last_name]\r\n  # This was incorrect as `first_name` and `last_name` don't exist on the `Book` model.\r\n  has_many :books, query_constraints: [:first_name, :last_name] \r\n  \r\n  # Correct way\r\n  has_many :books, query_constraints: [:author_first_name, :author_last_name]\r\nend\r\n\r\nclass Book < ApplicationRecord\r\n  belongs_to :author, query_constraints: [:author_first_name, :author_last_name]\r\nend\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50734/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50731",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50731/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50731/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50731/events",
        "html_url": "https://github.com/rails/rails/pull/50731",
        "id": 2079331695,
        "node_id": "PR_kwDNIULOY_OS5w",
        "number": 50731,
        "title": "Document passing hash as id option on create_table",
        "user": {
            "login": "javierav",
            "id": 99700,
            "node_id": "MDQ6VXNlcjk5NzAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/99700?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/javierav",
            "html_url": "https://github.com/javierav",
            "followers_url": "https://api.github.com/users/javierav/followers",
            "following_url": "https://api.github.com/users/javierav/following{/other_user}",
            "gists_url": "https://api.github.com/users/javierav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/javierav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/javierav/subscriptions",
            "organizations_url": "https://api.github.com/users/javierav/orgs",
            "repos_url": "https://api.github.com/users/javierav/repos",
            "events_url": "https://api.github.com/users/javierav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/javierav/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T17:21:32Z",
        "updated_at": "2024-01-12T17:21:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50731",
            "html_url": "https://github.com/rails/rails/pull/50731",
            "diff_url": "https://github.com/rails/rails/pull/50731.diff",
            "patch_url": "https://github.com/rails/rails/pull/50731.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThe `id` keyword argument passed to [create_table](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_table) method allow to receive a hash with options for column creation but it's not documented.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50731/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50727",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50727/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50727/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50727/events",
        "html_url": "https://github.com/rails/rails/pull/50727",
        "id": 2078984168,
        "node_id": "PR_kwDNIULOY-65Mw",
        "number": 50727,
        "title": "Action View Tests: Use `#with_routing` helper",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T14:36:26Z",
        "updated_at": "2024-01-29T14:25:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50727",
            "html_url": "https://github.com/rails/rails/pull/50727",
            "diff_url": "https://github.com/rails/rails/pull/50727.diff",
            "patch_url": "https://github.com/rails/rails/pull/50727.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFollow-up to [#49819][]\r\n\r\n### Detail\r\n\r\nSince [#49819][] resolves an issue with\r\n`ActionDispatch::IntegrationTest#with_routing` helper support, Action View's `test/abstract_unit.rb` file can rely on routing being reset within the block argument.\r\n\r\nThis means that the `RoutedRackApp` class and `.build_app` method is can be made unnecessary.\r\n\r\n[#49819]: https://github.com/rails/rails/pull/49819\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50727/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50727/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50722",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50722/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50722/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50722/events",
        "html_url": "https://github.com/rails/rails/pull/50722",
        "id": 2078567396,
        "node_id": "PR_kwDNIULOY-j0Ow",
        "number": 50722,
        "title": "Downcase the model name in the system scaffolds",
        "user": {
            "login": "dwightwatson",
            "id": 1100408,
            "node_id": "MDQ6VXNlcjExMDA0MDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1100408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dwightwatson",
            "html_url": "https://github.com/dwightwatson",
            "followers_url": "https://api.github.com/users/dwightwatson/followers",
            "following_url": "https://api.github.com/users/dwightwatson/following{/other_user}",
            "gists_url": "https://api.github.com/users/dwightwatson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dwightwatson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dwightwatson/subscriptions",
            "organizations_url": "https://api.github.com/users/dwightwatson/orgs",
            "repos_url": "https://api.github.com/users/dwightwatson/repos",
            "events_url": "https://api.github.com/users/dwightwatson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dwightwatson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-12T10:51:23Z",
        "updated_at": "2024-01-15T02:43:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50722",
            "html_url": "https://github.com/rails/rails/pull/50722",
            "diff_url": "https://github.com/rails/rails/pull/50722.diff",
            "patch_url": "https://github.com/rails/rails/pull/50722.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nI noticed there is an inconsistency in the system test scaffold where the model name is sometimes capitalised. This fixes the two instances where the model name is humanised.\r\n\r\n```rb\r\ntest \"should create user\"\r\ntest \"should update User\"\r\ntest \"should destroy User\"\r\n```\r\n\r\nConsidering all the other scaffolds use lowercase text I think it's right these two are downcased in the same way.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50722/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50722/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50721",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50721/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50721/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50721/events",
        "html_url": "https://github.com/rails/rails/pull/50721",
        "id": 2078388014,
        "node_id": "PR_kwDNIULOY-aIsQ",
        "number": 50721,
        "title": "Pool disabled query cache handling",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-12T09:06:56Z",
        "updated_at": "2024-01-30T07:46:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50721",
            "html_url": "https://github.com/rails/rails/pull/50721",
            "diff_url": "https://github.com/rails/rails/pull/50721.diff",
            "patch_url": "https://github.com/rails/rails/pull/50721.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFor [Solid Cache](https://github.com/rails/solid_cache), we want to be able to read and write from the cache database without using the query cache. \r\n\r\nWe also don't want to expire the query cache on other connection pools when we write. Writing to the Rails cache shouldn't invalidate the main query cache.\r\n\r\nThis is an alternative to https://github.com/rails/rails/pull/50695, based on @byroot's [suggestion here](https://github.com/rails/rails/pull/50695#issuecomment-1885312807).\r\n\r\n### Detail\r\n\r\nAfter a database write we clear the query cache on all connection pools. The change here is that we will now only do that if either the connection pool or the connection itself has the query cache enabled.\r\n\r\nThe query cache is [enabled on all connection pools](https://github.com/rails/rails/blob/cff2eb1be11cb729382b3674e3caa2bd198ec55e/activerecord/lib/active_record/query_cache.rb#L28-L42) by the executor hooks, so to take advantage of this we'll need to add another executor hook that disables the query cache on the Solid Cache connection pool (but only when it has a dedicated pool). \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50721/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50717",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50717/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50717/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50717/events",
        "html_url": "https://github.com/rails/rails/pull/50717",
        "id": 2077465816,
        "node_id": "PR_kwDNIULOY9n-Rg",
        "number": 50717,
        "title": "Expand documentation for ActiveRecord::Core #dup and #clone",
        "user": {
            "login": "p8",
            "id": 28561,
            "node_id": "MDQ6VXNlcjI4NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p8",
            "html_url": "https://github.com/p8",
            "followers_url": "https://api.github.com/users/p8/followers",
            "following_url": "https://api.github.com/users/p8/following{/other_user}",
            "gists_url": "https://api.github.com/users/p8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/p8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/p8/subscriptions",
            "organizations_url": "https://api.github.com/users/p8/orgs",
            "repos_url": "https://api.github.com/users/p8/repos",
            "events_url": "https://api.github.com/users/p8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/p8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-11T19:46:53Z",
        "updated_at": "2024-01-17T10:26:04Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50717",
            "html_url": "https://github.com/rails/rails/pull/50717",
            "diff_url": "https://github.com/rails/rails/pull/50717.diff",
            "patch_url": "https://github.com/rails/rails/pull/50717.patch",
            "merged_at": null
        },
        "body": "Splits the examples for `#clone` into separate sections for easier scanability.\r\n\r\nAdds examples to `#dup` to clarify the difference with `#clone`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50717/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50717/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50710",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50710/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50710/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50710/events",
        "html_url": "https://github.com/rails/rails/pull/50710",
        "id": 2077153009,
        "node_id": "PR_kwDNIULOY9Wvpg",
        "number": 50710,
        "title": "Update `ActionDispatch::Routing::Mapper:Scoping#constraints` documentation",
        "user": {
            "login": "stevepolitodesign",
            "id": 5122678,
            "node_id": "MDQ6VXNlcjUxMjI2Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5122678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevepolitodesign",
            "html_url": "https://github.com/stevepolitodesign",
            "followers_url": "https://api.github.com/users/stevepolitodesign/followers",
            "following_url": "https://api.github.com/users/stevepolitodesign/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevepolitodesign/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevepolitodesign/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevepolitodesign/subscriptions",
            "organizations_url": "https://api.github.com/users/stevepolitodesign/orgs",
            "repos_url": "https://api.github.com/users/stevepolitodesign/repos",
            "events_url": "https://api.github.com/users/stevepolitodesign/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevepolitodesign/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-11T16:50:31Z",
        "updated_at": "2024-01-11T16:50:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50710",
            "html_url": "https://github.com/rails/rails/pull/50710",
            "diff_url": "https://github.com/rails/rails/pull/50710.diff",
            "patch_url": "https://github.com/rails/rails/pull/50710.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nThe previous recommendation to place constraints in `lib/constraints` did not work in practice on a default Rails install, as it will raise the following:\r\n\r\n```\r\nuninitialized constant Iphone (NameError)\r\n```\r\n\r\nInstead, recommend placing constraints in `app/constraints` such that they will be eager loaded.\r\n\r\n### Additional information\r\n\r\nAlternatively, we could update the documentation to elaborate that `lib/constraints` would need to be explicitly eager loaded.\r\n\r\n```ruby\r\nconfig.eager_load_paths << Rails.root.join(\"lib/constraints\")\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50710/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50710/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50705",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50705/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50705/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50705/events",
        "html_url": "https://github.com/rails/rails/pull/50705",
        "id": 2076034722,
        "node_id": "PR_kwDNIULOY8YYug",
        "number": 50705,
        "title": "Backport: Define missing attribute methods from `method_missing`",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-11T08:26:24Z",
        "updated_at": "2024-01-11T08:26:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50705",
            "html_url": "https://github.com/rails/rails/pull/50705",
            "diff_url": "https://github.com/rails/rails/pull/50705.diff",
            "patch_url": "https://github.com/rails/rails/pull/50705.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50594\r\n\r\nOpening a PR because the backport is non-trivial, so I want CI coverage. Also @ghiculescu pointed a possible issue in https://github.com/rails/rails/commit/d429bfb3b6fd2794f0d859b68e5dee24578d405f so I'd like to get to the bottom of that before merging the backport.\r\n\r\ncc @rafaelfranca ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50705/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50703",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50703/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50703/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50703/events",
        "html_url": "https://github.com/rails/rails/pull/50703",
        "id": 2075945414,
        "node_id": "PR_kwDNIULOY8ThOg",
        "number": 50703,
        "title": "Add warning for non-existent directories in autoload paths for Zeitwerk",
        "user": {
            "login": "aeroastro",
            "id": 4468155,
            "node_id": "MDQ6VXNlcjQ0NjgxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4468155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aeroastro",
            "html_url": "https://github.com/aeroastro",
            "followers_url": "https://api.github.com/users/aeroastro/followers",
            "following_url": "https://api.github.com/users/aeroastro/following{/other_user}",
            "gists_url": "https://api.github.com/users/aeroastro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aeroastro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aeroastro/subscriptions",
            "organizations_url": "https://api.github.com/users/aeroastro/orgs",
            "repos_url": "https://api.github.com/users/aeroastro/repos",
            "events_url": "https://api.github.com/users/aeroastro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aeroastro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-11T07:28:26Z",
        "updated_at": "2024-01-17T12:05:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50703",
            "html_url": "https://github.com/rails/rails/pull/50703",
            "diff_url": "https://github.com/rails/rails/pull/50703.diff",
            "patch_url": "https://github.com/rails/rails/pull/50703.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I noticed that Rails does not warn the user when they specify a non-existing directory in the `config.autoload_paths` or `config.autoload_once_paths` settings. This can lead to confusion and hard-to-debug errors when the user expects some files to be loaded but they are not.\r\n\r\n### Detail\r\n\r\nThis Pull Request add a warning message when specified paths for `config.autoload_paths` and `config.autoload_once_paths` are not existing directories.\r\nBelow is the example message:\r\n\r\n```\r\nconfig.autoload_paths must be existing directories.\r\n'/wrong/path/to/load' is not an existing directory.\r\n```\r\n\r\n### Additional information\r\n\r\nSince this PR does not change the behavior itself, I believe existing tests cover this PR.\r\n\r\nThe warning message has been inspired by the following code.\r\nhttps://github.com/rails/rails/blob/91968e5a185927b8216b82c860a48b6367285456/railties/lib/rails/application/bootstrap.rb#L23-L30\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50703/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50695",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50695/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50695/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50695/events",
        "html_url": "https://github.com/rails/rails/pull/50695",
        "id": 2074094584,
        "node_id": "PR_kwDNIULOY6t9sA",
        "number": 50695,
        "title": "Ignore the query cache in a block",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-10T10:47:07Z",
        "updated_at": "2024-01-30T04:11:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50695",
            "html_url": "https://github.com/rails/rails/pull/50695",
            "diff_url": "https://github.com/rails/rails/pull/50695.diff",
            "patch_url": "https://github.com/rails/rails/pull/50695.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis PR allow the Query cache to be ignored in a block.\r\n\r\nFor Solid Cache queries we want to be able to completely disable the query cache (see https://github.com/rails/solid_cache/issues/123).\r\n\r\nSolid Cache uses the database as the Rails cache so it gets the automatic query cache behaviour by default. \r\n\r\nWe'd like to avoid this because the local cache already handles caching repeated reads and having Rails cache writes clear the AR query cache is not desirable.\r\n\r\n`uncached` works for disabling reads doesn't disable clearing the cache for writes.\r\n\r\n### Detail\r\n\r\nWe add a `ignore_query_cache` method to the connection. It takes a block and within that block:\r\n- queries will not be cached in the query cache\r\n- queries will not be read from the query cache\r\n- writes will not clear the query cache\r\n- cached/uncached blocks will be ignored\r\n\r\nExample usage:\r\n\r\n```ruby\r\nActiveRecord::Base.connection.ignore_query_cache do\r\n  post = Post.find 1\r\n  post.touch\r\nend\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50695/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50672",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50672/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50672/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50672/events",
        "html_url": "https://github.com/rails/rails/issues/50672",
        "id": 2072396416,
        "node_id": "I_kwDNIULOe4ZCgA",
        "number": 50672,
        "title": "db:schema:load:<name> purges test database",
        "user": {
            "login": "romuloceccon",
            "id": 40032,
            "node_id": "MDQ6VXNlcjQwMDMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/40032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/romuloceccon",
            "html_url": "https://github.com/romuloceccon",
            "followers_url": "https://api.github.com/users/romuloceccon/followers",
            "following_url": "https://api.github.com/users/romuloceccon/following{/other_user}",
            "gists_url": "https://api.github.com/users/romuloceccon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/romuloceccon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/romuloceccon/subscriptions",
            "organizations_url": "https://api.github.com/users/romuloceccon/orgs",
            "repos_url": "https://api.github.com/users/romuloceccon/repos",
            "events_url": "https://api.github.com/users/romuloceccon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/romuloceccon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-09T13:43:19Z",
        "updated_at": "2024-01-10T09:19:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Commit [adb64db43d](https://github.com/rails/rails/commit/adb64db43dba5cad1007ce57e25df67f8b3e91f8#diff-4a42b5efdab725af0936f94b4a84dcf6a8be8738e28ed265e0a3e74f275f5048R491) changed task `db:schema:load:<name>` to invoke `db:test:purge:<name>`.\r\n\r\nBecause of that Rails 7.1 breaks my workflow for initializing a local environment:\r\n\r\n- create database with `db:create`\r\n- run custom SQL to create Postgres extensions, schemas and triggers\r\n- load schema with `db:schema:load:<name>`\r\n\r\nStrangely, `db:schema:load` keeps the old behavior, and I could not find the explanation for the change in the commit message or in related Github issues.\r\n\r\nAlso, it _requires_ a test database to be configured in `database.yml`; otherwise the task fails:\r\n\r\n```\r\n$ RAILS_ENV=development bin/rails db:schema:load:primary\r\nbin/rails aborted!\r\nTypeError: Invalid type for configuration. Expected Symbol, String, or Hash. Got nil (TypeError)\r\n\r\n        raise TypeError, \"Invalid type for configuration. Expected Symbol, String, or Hash. Got #{config.inspect}\"\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nTasks: TOP => db:schema:load:primary => db:test:purge:primary\r\n(See full trace by running task with --trace)\r\n```\r\n\r\nCan someone confirm the change was intentional?\r\n\r\n**Steps to reproduce the failure**\r\n\r\n- `$ rails new rails_bug`\r\n- `$ cd rails_bug`\r\n- use the following `database.yml`:\r\n\r\n```\r\ndevelopment:\r\n  one:\r\n    adapter: sqlite3\r\n    database: storage/development.sqlite3\r\n  two:\r\n    adapter: sqlite3\r\n    database: storage/development_two.sqlite3\r\n    migrations_paths: db/migrate_two\r\n```\r\n- `$ bin/rails db:migrate:one`\r\n- `$ bin/rails db:schema:load:one`\r\n\r\n**Expected behavior**\r\n\r\nNo error.\r\n\r\n**Actual behavior**\r\n\r\nTypeError invoking database task.\r\n\r\n**System configuration**\r\n\r\nRails 7.1.2\r\nRuby 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50666",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50666/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50666/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50666/events",
        "html_url": "https://github.com/rails/rails/issues/50666",
        "id": 2071645014,
        "node_id": "I_kwDNIULOe3rLVg",
        "number": 50666,
        "title": "`rails credentials:edit` lets you pass an unknown editor, without issuing any error report",
        "user": {
            "login": "ArthurPV",
            "id": 42948054,
            "node_id": "MDQ6VXNlcjQyOTQ4MDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/42948054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ArthurPV",
            "html_url": "https://github.com/ArthurPV",
            "followers_url": "https://api.github.com/users/ArthurPV/followers",
            "following_url": "https://api.github.com/users/ArthurPV/following{/other_user}",
            "gists_url": "https://api.github.com/users/ArthurPV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ArthurPV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ArthurPV/subscriptions",
            "organizations_url": "https://api.github.com/users/ArthurPV/orgs",
            "repos_url": "https://api.github.com/users/ArthurPV/repos",
            "events_url": "https://api.github.com/users/ArthurPV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ArthurPV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-09T05:15:43Z",
        "updated_at": "2024-01-09T13:23:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.2\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/object/blank\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_credentials_edit_command\r\n    # test with ed editor\r\n    # assert_equal system(\"VISUAL=ed rails credentials:edit << EOF\\nEOF\"), true\r\n    # test with an unknown editor\r\n    assert_equal system(\"VISUAL=abc rails credentials:edit\"), false\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\n$? = 1, with an error report\r\n\r\n### Actual behavior\r\n\r\noutput:\r\n\r\n```\r\nEditing config/credentials.yml.enc...\r\nFile encrypted and saved.\r\n```\r\n\r\n$? = 0\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.3.0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50666/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50645",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50645/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50645/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50645/events",
        "html_url": "https://github.com/rails/rails/issues/50645",
        "id": 2070625119,
        "node_id": "I_kwDNIULOe2s7Xw",
        "number": 50645,
        "title": "Rails 7.1 Create model with has_many with lambda incorrect default",
        "user": {
            "login": "nikita-railsware",
            "id": 137036598,
            "node_id": "U_kgDOCCsDNg",
            "avatar_url": "https://avatars.githubusercontent.com/u/137036598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikita-railsware",
            "html_url": "https://github.com/nikita-railsware",
            "followers_url": "https://api.github.com/users/nikita-railsware/followers",
            "following_url": "https://api.github.com/users/nikita-railsware/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikita-railsware/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikita-railsware/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikita-railsware/subscriptions",
            "organizations_url": "https://api.github.com/users/nikita-railsware/orgs",
            "repos_url": "https://api.github.com/users/nikita-railsware/repos",
            "events_url": "https://api.github.com/users/nikita-railsware/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikita-railsware/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-08T14:54:30Z",
        "updated_at": "2024-01-24T09:51:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nIn Rails 7.1, when I create new model with lambda in `has_many` association without passing value to the parameter, it puts serialized value of array that passed in `where` in a lambda.\r\nRails 7.0 just put `nil` in this case.\r\n\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.2\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :users, force: true do |t|\r\n  end\r\n\r\n  create_table :post_accesses, force: true do |t|\r\n    t.string :access_type\r\n    t.references :post\r\n    t.references :user\r\n  end\r\nend\r\n\r\nclass PostAccess < ActiveRecord::Base\r\n  ROLES = %w[viewer editor owner]\r\n  STAFF_ROLES = %w[editor owner]\r\n\r\n  belongs_to :user\r\n  belongs_to :post\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :post_accesses\r\n  has_many :staff_post_accesses,\r\n           -> { where(access_type: PostAccess::STAFF_ROLES) },\r\n           class_name: 'PostAccess'\r\n\r\n  has_many :staff_users, through: :staff_post_accesses, class_name: 'User', source: :user\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    user = User.create!\r\n    post = Post.create!(staff_users: [user])\r\n\r\n    assert_equal nil, post.post_accesses.first.access_type\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nIt should put `nil`, or one of the possible value\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nIt put serialized array:\r\n'[\"editor\", \"owner\"]'\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50645/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50645/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50637",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50637/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50637/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50637/events",
        "html_url": "https://github.com/rails/rails/pull/50637",
        "id": 2069551280,
        "node_id": "PR_kwDNIULOY21ZLw",
        "number": 50637,
        "title": "Experiment | [Fix #47809] `load_async` support for collection associations",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-08T03:24:48Z",
        "updated_at": "2024-01-09T03:10:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50637",
            "html_url": "https://github.com/rails/rails/pull/50637",
            "diff_url": "https://github.com/rails/rails/pull/50637.diff",
            "patch_url": "https://github.com/rails/rails/pull/50637.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nMostly an experiment to fix #47809 while trying to avoid a large refactor which [might be the ideal solution](https://github.com/rails/rails/issues/47809#issuecomment-1489832287). This only tackles collection associations.\r\n\r\n### Detail\r\n\r\nTODO\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nTODO\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50637/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50637/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50633",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50633/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50633/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50633/events",
        "html_url": "https://github.com/rails/rails/pull/50633",
        "id": 2069256890,
        "node_id": "PR_kwDNIULOY2laaQ",
        "number": 50633,
        "title": "Make `group`/`regroup` inside `merge` be applied to the merged relation",
        "user": {
            "login": "joaomarcos96",
            "id": 31287923,
            "node_id": "MDQ6VXNlcjMxMjg3OTIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/31287923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joaomarcos96",
            "html_url": "https://github.com/joaomarcos96",
            "followers_url": "https://api.github.com/users/joaomarcos96/followers",
            "following_url": "https://api.github.com/users/joaomarcos96/following{/other_user}",
            "gists_url": "https://api.github.com/users/joaomarcos96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joaomarcos96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joaomarcos96/subscriptions",
            "organizations_url": "https://api.github.com/users/joaomarcos96/orgs",
            "repos_url": "https://api.github.com/users/joaomarcos96/repos",
            "events_url": "https://api.github.com/users/joaomarcos96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joaomarcos96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-07T19:25:39Z",
        "updated_at": "2024-01-17T22:36:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50633",
            "html_url": "https://github.com/rails/rails/pull/50633",
            "diff_url": "https://github.com/rails/rails/pull/50633.diff",
            "patch_url": "https://github.com/rails/rails/pull/50633.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nWhen using `group` inside `merge`, the `group` is applied to the outermost relation instead of the merged relation, which is unexpected. The same is true for `regroup`.\r\n\r\n### Detail\r\n\r\nNow, `group` inside `merge` is applied to the merged relation, as intended. The behavior was changed for `regroup` as well, and documented.\r\n\r\nBefore:\r\n\r\n```rb\r\nProduct.joins(:items).group(:id).merge(Item.group(:title))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"products\".\"title\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id)).regroup(:title)\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"title\"\r\n```\r\n\r\nAfter:\r\n```rb\r\nProduct.joins(:items).group(:id).merge(Item.group(:title))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"items\".\"title\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"items\".\"id\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id)).regroup(:title)\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"title\"\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50633/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50623",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50623/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50623/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50623/events",
        "html_url": "https://github.com/rails/rails/pull/50623",
        "id": 2068829741,
        "node_id": "PR_kwDNIULOY2QLzQ",
        "number": 50623,
        "title": "Pass render options and block to calls to `#render_in`",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-06T20:46:09Z",
        "updated_at": "2024-01-30T03:15:45Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50623",
            "html_url": "https://github.com/rails/rails/pull/50623",
            "diff_url": "https://github.com/rails/rails/pull/50623.diff",
            "patch_url": "https://github.com/rails/rails/pull/50623.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nCloses [#45432][]\r\n\r\nSupport for objects that respond to `#render_in` was introduced in [#36388][] and [#37919][]. Those implementations assume that the instance will all the context it needs to render itself. That assumption doesn't account for call-site arguments like `locals: { ... }` or a block.\r\n\r\n### Detail\r\n\r\nThis commit expands support for rendering with a `:renderable` option to incorporate locals and blocks. For example:\r\n\r\n```ruby\r\nclass Greeting\r\n  def render_in(view_context, **options, &block)\r\n    if block\r\n      view_context.render html: block.call\r\n    else\r\n      view_context.render inline: <<~ERB.strip, **options\r\n        Hello, <%= name %>\r\n      ERB\r\n    end\r\n  end\r\nend\r\n\r\nrender(Greeting.new)                    # => \"Hello, World\"\r\nrender(Greeting.new, name: \"Local\")     # => \"Hello, Local\"\r\nrender(Greeting.new) { \"Hello, Block\" } # => \"Hello, Block\"\r\n```\r\n\r\nSince existing tools depend on the `#render_in(view_context)` signature\r\nwithout options, this commit deprecates that signature in favor of one\r\nthat accepts options and a block.\r\n\r\n[#45432]: https://github.com/rails/rails/pull/45432\r\n[#36388]: https://github.com/rails/rails/pull/36388\r\n[#37919]: https://github.com/rails/rails/pull/37919\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50623/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50610",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50610/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50610/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50610/events",
        "html_url": "https://github.com/rails/rails/pull/50610",
        "id": 2068183148,
        "node_id": "PR_kwDNIULOY1t8TA",
        "number": 50610,
        "title": "Don't fail for uploads with content-type parameters in the ActiveStorage::DiskController",
        "user": {
            "login": "codergeek121",
            "id": 4910785,
            "node_id": "MDQ6VXNlcjQ5MTA3ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4910785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codergeek121",
            "html_url": "https://github.com/codergeek121",
            "followers_url": "https://api.github.com/users/codergeek121/followers",
            "following_url": "https://api.github.com/users/codergeek121/following{/other_user}",
            "gists_url": "https://api.github.com/users/codergeek121/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codergeek121/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codergeek121/subscriptions",
            "organizations_url": "https://api.github.com/users/codergeek121/orgs",
            "repos_url": "https://api.github.com/users/codergeek121/repos",
            "events_url": "https://api.github.com/users/codergeek121/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codergeek121/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-05T23:32:34Z",
        "updated_at": "2024-01-08T20:20:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50610",
            "html_url": "https://github.com/rails/rails/pull/50610",
            "diff_url": "https://github.com/rails/rails/pull/50610.diff",
            "patch_url": "https://github.com/rails/rails/pull/50610.patch",
            "merged_at": null
        },
        "body": "Fixes #50600 by parsing the string content-type before comparing it to the `Mime::Type`. This comparison will ignore the parameters.\r\n\r\n@alexandergitter I added you as co-author for the reproduction test case.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50610/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50610/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50608",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50608/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50608/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50608/events",
        "html_url": "https://github.com/rails/rails/pull/50608",
        "id": 2067907461,
        "node_id": "PR_kwDNIULOY1ewzQ",
        "number": 50608,
        "title": "allow dom_id method to accept an array of records_or_classes",
        "user": {
            "login": "jwilsjustin",
            "id": 820759,
            "node_id": "MDQ6VXNlcjgyMDc1OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/820759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jwilsjustin",
            "html_url": "https://github.com/jwilsjustin",
            "followers_url": "https://api.github.com/users/jwilsjustin/followers",
            "following_url": "https://api.github.com/users/jwilsjustin/following{/other_user}",
            "gists_url": "https://api.github.com/users/jwilsjustin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jwilsjustin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jwilsjustin/subscriptions",
            "organizations_url": "https://api.github.com/users/jwilsjustin/orgs",
            "repos_url": "https://api.github.com/users/jwilsjustin/repos",
            "events_url": "https://api.github.com/users/jwilsjustin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jwilsjustin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-05T19:12:49Z",
        "updated_at": "2024-01-08T14:17:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50608",
            "html_url": "https://github.com/rails/rails/pull/50608",
            "diff_url": "https://github.com/rails/rails/pull/50608.diff",
            "patch_url": "https://github.com/rails/rails/pull/50608.patch",
            "merged_at": null
        },
        "body": "# Context\r\n\r\nSee also: https://github.com/hotwired/turbo-rails/pull/476\r\n\r\n[hotwired/turbo-rails/pull/476](https://github.com/hotwired/turbo-rails/pull/476) removed the ability to pass multiple ids/models to the `turbo_frame_tag` helper method. In that PR it was suggested by @skipkayhil that this ability be passed down to the `dom_id` method (which is a part of rails core) method rather than the `turbo_frame_tag` helper (which is a part of turbo-rails).\r\n\r\nref: https://discuss.rubyonrails.org/t/allow-dom-id-method-to-accept-multiple-ids-models/84408\r\n\r\n# Changes\r\n\r\nIf the first argument of the `dom_id` is an array, this change will loop through each value and form a singular dom ID, then join the parts together. This change will allow turbo frame tags to accept multiple models (similar to the `cache` helper from ActionView).\r\n\r\n```\r\n<%= turbo_frame_tag [customer, field] do %>\r\n  <!-- code -->\r\n<% end %>\r\n```\r\n\r\n***\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50608/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50608/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50606",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50606/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50606/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50606/events",
        "html_url": "https://github.com/rails/rails/pull/50606",
        "id": 2067810728,
        "node_id": "PR_kwDNIULOY1ZYdQ",
        "number": 50606,
        "title": "[Fix #50604] Restore compatibility of Active Record Encryption configs with eager loading mode",
        "user": {
            "login": "maximerety",
            "id": 58582,
            "node_id": "MDQ6VXNlcjU4NTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/58582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maximerety",
            "html_url": "https://github.com/maximerety",
            "followers_url": "https://api.github.com/users/maximerety/followers",
            "following_url": "https://api.github.com/users/maximerety/following{/other_user}",
            "gists_url": "https://api.github.com/users/maximerety/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maximerety/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maximerety/subscriptions",
            "organizations_url": "https://api.github.com/users/maximerety/orgs",
            "repos_url": "https://api.github.com/users/maximerety/repos",
            "events_url": "https://api.github.com/users/maximerety/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maximerety/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-05T18:03:09Z",
        "updated_at": "2024-01-31T12:08:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50606",
            "html_url": "https://github.com/rails/rails/pull/50606",
            "diff_url": "https://github.com/rails/rails/pull/50606.diff",
            "patch_url": "https://github.com/rails/rails/pull/50606.patch",
            "merged_at": null
        },
        "body": "\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes #50604\r\n\r\nThis Pull Request fixes a source of incompatibility between the loading order of Active Record Encryption configs and the loading of AR models in eager loading mode.\r\n\r\n### Detail\r\n\r\nThis Pull Request removes an occurrence of `after_initialize` introduced in https://github.com/rails/rails/pull/48530, which is not fully compatible with the eager loading mode.\r\n\r\nPrevious concerns were raised in [a discussion from the same PR](https://github.com/rails/rails/pull/48530/files#r1237624233).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50606/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50604",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50604/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50604/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50604/events",
        "html_url": "https://github.com/rails/rails/issues/50604",
        "id": 2067789909,
        "node_id": "I_kwDNIULOez_4VQ",
        "number": 50604,
        "title": "Active Record Encryption configs not ready in eager loading mode",
        "user": {
            "login": "maximerety",
            "id": 58582,
            "node_id": "MDQ6VXNlcjU4NTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/58582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maximerety",
            "html_url": "https://github.com/maximerety",
            "followers_url": "https://api.github.com/users/maximerety/followers",
            "following_url": "https://api.github.com/users/maximerety/following{/other_user}",
            "gists_url": "https://api.github.com/users/maximerety/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maximerety/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maximerety/subscriptions",
            "organizations_url": "https://api.github.com/users/maximerety/orgs",
            "repos_url": "https://api.github.com/users/maximerety/repos",
            "events_url": "https://api.github.com/users/maximerety/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maximerety/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-05T17:50:05Z",
        "updated_at": "2024-01-17T12:55:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nThe introduction of `after_initialize` in Active Record Encryption configuration setup in https://github.com/rails/rails/pull/48530 (also see [that discussion in the same PR](https://github.com/rails/rails/pull/48530/files#r1237624233)) is not fully compatible with the eager loading mode: https://github.com/rails/rails/blob/6b446bee63c401364d193920f3426af0bfe75650/activerecord/lib/active_record/railtie.rb#L385\r\n\r\nIn eager loading mode, the models from the application are loaded before the `after_initialize` hook has a chance to run, as visible here (hint: you need to scroll in the code snippet): https://github.com/rails/rails/blob/b0b1eb5a1847c1de5616a55c1d7c78f11eb08cd8/railties/lib/rails/application/finisher.rb#L77-L95\r\n\r\nAs a result, some configurations may not be ready at the time Active Record Encryption's helper `encrypts` needs them during model loading.\r\n\r\nFor example, the following methods are called in order: `encrypts` ->  `encrypt_attribute` -> `scheme_for` -> `global_previous_schemes_for`:\r\n\r\nhttps://github.com/rails/rails/blob/e0a55b038f7f2f50d1467876558be183be6cedaa/activerecord/lib/active_record/encryption/encryptable_record.rb#L78-L82\r\n\r\nIf `ActiveRecord::Encryption.config.previous_schemes` is not defined yet, then the encrypted attribute is not properly configured.\r\n\r\n### Example 1\r\n\r\n#### Steps to reproduce\r\n\r\nIn this example, a previous encryption scheme is provided globally, as described in https://guides.rubyonrails.org/active_record_encryption.html#global-previous-encryption-schemes:\r\n\r\n```ruby\r\n# config/application.rb\r\nconfig.active_record.encryption.previous = [ { key_provider: MyOldKeyProvider.new } ]\r\nconfig.eager_load = true\r\n\r\n# app/models/article.rb\r\nclass Article < ApplicationRecord\r\n  encrypts :title\r\nend\r\n```\r\n\r\n#### Expected behavior\r\n\r\nThe previous encryption scheme should always be taken into account when line `encrypts :title` is reached.\r\n\r\n#### Actual behavior\r\n\r\nWhen lazy loading the application, everything is fine and the `Article` model is lazily loaded after the previous encryption scheme is defined by the `after_initialize` hook and the `:title` attribute can benefit from that previous encryption scheme.\r\n\r\nWhen eager loading the application however, the `Article` model is eager loaded before the previous scheme is defined and that config gets ignored.\r\n\r\n### Example 2\r\n\r\n#### Steps to reproduce\r\n\r\nIn this example, a custom key provider is configured when declaring the attribute, as described in https://guides.rubyonrails.org/active_record_encryption.html#model-specific-key-providers:\r\n\r\n```ruby\r\n# config/application.rb\r\nconfig.eager_load = true\r\n\r\n# app/models/article.rb\r\nclass Article < ApplicationRecord\r\n  encrypts :title, key_provider: CustomKeyProvider.new(ActiveRecord::Encryption.config.primary_key)\r\nend\r\n```\r\n\r\n#### Expected behavior\r\n\r\nThe custom key provider should be able to use the `primary_key` configured  when line `encrypts :title` is reached.\r\n\r\n#### Actual behavior\r\n\r\nWhen lazy loading the application, everything is fine and the `Article` model is lazily loaded after the `primary_key` is defined by the `after_initialize` hook and the `:title` attribute can be set up normally.\r\n\r\nWhen eager loading the application however, the `Article` model is eager loaded before the `primary_key` is defined by the `after_initialize` hook, and the model fails to load with the following exception:\r\n\r\n```\r\nactiverecord-7.1.2/lib/active_record/encryption/config.rb:43:in `block (2 levels) in <class:Config>':\r\n  Missing Active Record encryption credential: active_record_encryption.primary_key (ActiveRecord::Encryption::Errors::Configuration)\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: `7.1.2` / `7.1.3` / `main`\r\n\r\n**Ruby version**: `3.2.2` / `3.3.0`\r\n\r\n### Possible fixes\r\n\r\n1. Get rid of `after_initialize` if not really necessary (see [previous discussions](https://github.com/rails/rails/pull/48530/files#r1237624233))\r\n2. Otherwise, keep `after_initialize` and attempt to patch the eager loading mode (using `config.before_eager_load`?)",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50604/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50600",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50600/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50600/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50600/events",
        "html_url": "https://github.com/rails/rails/issues/50600",
        "id": 2067401862,
        "node_id": "I_kwDNIULOezoMhg",
        "number": 50600,
        "title": "ActiveStorage::DiskController fails for uploads when Content-Type / media type contains a parameter",
        "user": {
            "login": "alexandergitter",
            "id": 816758,
            "node_id": "MDQ6VXNlcjgxNjc1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/816758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexandergitter",
            "html_url": "https://github.com/alexandergitter",
            "followers_url": "https://api.github.com/users/alexandergitter/followers",
            "following_url": "https://api.github.com/users/alexandergitter/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexandergitter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexandergitter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexandergitter/subscriptions",
            "organizations_url": "https://api.github.com/users/alexandergitter/orgs",
            "repos_url": "https://api.github.com/users/alexandergitter/repos",
            "events_url": "https://api.github.com/users/alexandergitter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexandergitter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-01-05T14:01:29Z",
        "updated_at": "2024-01-10T05:24:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`ActiveStorage::DiskController#update` returns a 422 error when the submitted content contains a parameter in its Content-Type / media type, for example `audio/ogg; codecs=opus`.\r\n\r\nThis issue appears to have been introduced in https://github.com/rails/rails/commit/5fb4703471ffb11dab9aa3855daeef9f592f6388\r\n\r\n### Steps to reproduce\r\nHere's a test case that fails in `ActiveStorage::DiskControllerTest`:\r\n\r\n```ruby\r\ntest \"directly uploading blob with content type parameters\" do\r\n  data = \"Something else entirely!\"\r\n  blob = create_blob_before_direct_upload(\r\n    byte_size: data.size, checksum: OpenSSL::Digest::MD5.base64digest(data), content_type: \"audio/ogg; codecs=opus\")\r\n\r\n  put blob.service_url_for_direct_upload, params: data, headers: { \"Content-Type\" => \"audio/ogg; codecs=opus\" }\r\n  assert_response :no_content\r\n  assert_equal data, blob.download\r\nend\r\n```\r\n\r\n(The test passes when the `; codecs=opus` part is omitted.)\r\n\r\n### Expected behavior\r\nThe upload succeeds, since the content type from the uploaded content matches the content type in the direct upload token.\r\n\r\n### Actual behavior\r\nThe request fails with 422 Unprocessable Content.\r\n\r\n### System configuration\r\n**Rails version**: 7.2.0.alpha (1702b6cbfd)\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50598",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50598/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50598/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50598/events",
        "html_url": "https://github.com/rails/rails/pull/50598",
        "id": 2067384052,
        "node_id": "PR_kwDNIULOY1BvYg",
        "number": 50598,
        "title": "Document `upsert`/`upsert_all` `on_duplicate: :skip` option",
        "user": {
            "login": "lucasmazza",
            "id": 80978,
            "node_id": "MDQ6VXNlcjgwOTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/80978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucasmazza",
            "html_url": "https://github.com/lucasmazza",
            "followers_url": "https://api.github.com/users/lucasmazza/followers",
            "following_url": "https://api.github.com/users/lucasmazza/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucasmazza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lucasmazza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucasmazza/subscriptions",
            "organizations_url": "https://api.github.com/users/lucasmazza/orgs",
            "repos_url": "https://api.github.com/users/lucasmazza/repos",
            "events_url": "https://api.github.com/users/lucasmazza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lucasmazza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-05T13:49:07Z",
        "updated_at": "2024-01-09T13:38:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50598",
            "html_url": "https://github.com/rails/rails/pull/50598",
            "diff_url": "https://github.com/rails/rails/pull/50598.diff",
            "patch_url": "https://github.com/rails/rails/pull/50598.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nI've stumbled on this when writing an `upsert` call that must produce a `ON CONFLICT () DO NOTHING` fragment.\r\n\r\nUsing `update_only: []` didn't worked as it does update all columns on the table, but reading `InsertAll` I noticed the use of `:skip` internally that worked for this scenario, but it isn't mentioned on the public docs.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50598/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50598/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50583",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50583/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50583/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50583/events",
        "html_url": "https://github.com/rails/rails/issues/50583",
        "id": 2066163278,
        "node_id": "I_kwDNIULOeycmTg",
        "number": 50583,
        "title": "Active Storage Variant causing Aws::S3::Errors::NoSuchKey error when deleting an attachment",
        "user": {
            "login": "basiszwo",
            "id": 24071,
            "node_id": "MDQ6VXNlcjI0MDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/24071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/basiszwo",
            "html_url": "https://github.com/basiszwo",
            "followers_url": "https://api.github.com/users/basiszwo/followers",
            "following_url": "https://api.github.com/users/basiszwo/following{/other_user}",
            "gists_url": "https://api.github.com/users/basiszwo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/basiszwo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/basiszwo/subscriptions",
            "organizations_url": "https://api.github.com/users/basiszwo/orgs",
            "repos_url": "https://api.github.com/users/basiszwo/repos",
            "events_url": "https://api.github.com/users/basiszwo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/basiszwo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-04T18:44:36Z",
        "updated_at": "2024-01-31T22:09:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am not sure if this is a bug or something is not configured correctly. \r\n\r\n### Steps to reproduce\r\n\r\nUsing Active Storage with a S3-compatible object storage from digital ocean or scaleway configured along the rails guide for active storage.\r\n\r\nActive Storage configuration\r\n\r\n```\r\ndigitalocean:\r\n  service: S3\r\n  access_key_id: <%= ENV.fetch(\"DIGITALOCEAN_S3_ACCESS_KEY_ID\") %>\r\n  secret_access_key: <%= ENV.fetch(\"DIGITALOCEAN_S3_ACCESS_KEY_SECRET\") %>\r\n  bucket: <%= ENV.fetch(\"DIGITALOCEAN_S3_BUCKET_NAME\") %>\r\n  endpoint: <%= ENV.fetch(\"DIGITALOCEAN_S3_ENDPOINT\") %>\r\n```\r\n\r\nenabled with \r\n\r\n```\r\n# config/environments/development.rb\r\nconfig.active_storage.service = :digitalocean\r\n```\r\n\r\nhaving a User model with \r\n\r\n```ruby\r\nhas_one_attached :avatar do |attachable|\r\n  attachable.variant(:thumb, resize_to_fill: [350, 350])\r\nend\r\n```\r\n\r\nAfter uploading a file from the edit form the variant gets created when accessing the show view. \r\n\r\nLogs look like this\r\n\r\n```\r\nActiveStorage::VariantRecord Create (1.8ms)  INSERT INTO \"active_storage_variant_records\" (\"blob_id\", \"variation_digest\") VALUES ($1, $2) RETURNING \"id\"  [[\"blob_id\", 116], [\"variation_digest\", \"cAfAf5iAxm52Ff0Mw7wXY2F9d4A=\"]]\r\nActiveStorage::Blob Load (1.2ms)  SELECT \"active_storage_blobs\".* FROM \"active_storage_blobs\" INNER JOIN \"active_storage_attachments\" ON \"active_storage_blobs\".\"id\" = \"active_storage_attachments\".\"blob_id\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 51], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"name\", \"image\"], [\"LIMIT\", 1]]\r\nActiveStorage::Attachment Load (0.2ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 51], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"name\", \"image\"], [\"LIMIT\", 1]]\r\nActiveStorage::Blob Create (0.3ms)  INSERT INTO \"active_storage_blobs\" (\"key\", \"filename\", \"content_type\", \"metadata\", \"service_name\", \"byte_size\", \"checksum\", \"created_at\") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING \"id\"  [[\"key\", \"1dousqzwcx79wlpkfn0o0f1sjfci\"], [\"filename\", \"sigma-16mm.jpg\"], [\"content_type\", \"image/jpeg\"], [\"metadata\", \"{\\\"identified\\\":true}\"], [\"service_name\", \"digitalocean\"], [\"byte_size\", 52716], [\"checksum\", \"d9vmvbLEGDR2ZLzl7XNgUg==\"], [\"created_at\", \"2024-01-04 17:49:27.381653\"]]\r\nActiveStorage::Attachment Create (0.4ms)  INSERT INTO \"active_storage_attachments\" (\"name\", \"record_type\", \"record_id\", \"blob_id\", \"created_at\") VALUES ($1, $2, $3, $4, $5) RETURNING \"id\"  [[\"name\", \"image\"], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"record_id\", 51], [\"blob_id\", 117], [\"created_at\", \"2024-01-04 17:49:27.382925\"]]\r\nTRANSACTION (0.4ms)  COMMIT\r\nS3 Storage (120.4ms) Uploaded file to key: 1dousqzwcx79wlpkfn0o0f1sjfci (checksum: d9vmvbLEGDR2ZLzl7XNgUg==)\r\n```\r\n\r\nAttachments are being displayed, everything is fine, until deleting an attachment where I get the following exception\r\n\r\n```\r\nDEBUG -- :   TRANSACTION (0.2ms)  BEGIN\r\nDEBUG -- :   ActiveStorage::Attachment Exists? (1.7ms)  SELECT 1 AS one FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"blob_id\" = $1 LIMIT $2  [[\"blob_id\", 119], [\"LIMIT\", 1]]\r\nDEBUG -- :   ActiveStorage::VariantRecord Load (0.5ms)  SELECT \"active_storage_variant_records\".* FROM \"active_storage_variant_records\" WHERE \"active_storage_variant_records\".\"blob_id\" = $1  [[\"blob_id\", 119]]\r\nDEBUG -- :   ActiveStorage::Attachment Load (0.8ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 119], [\"record_type\", \"ActiveStorage::Blob\"], [\"name\", \"preview_image\"], [\"LIMIT\", 1]]\r\nDEBUG -- :   ActiveStorage::Blob Destroy (1.4ms)  DELETE FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = $1  [[\"id\", 119]]\r\nDEBUG -- :   TRANSACTION (6.7ms)  COMMIT\r\n INFO -- :   S3 Storage (100.6ms) Deleted file from key: 5qag8y7y3qqol4wrgo9iapy2z8oy\r\n INFO -- :   S3 Storage (38.1ms) Deleted files by key prefix: variants/5qag8y7y3qqol4wrgo9iapy2z8oy/\r\nERROR -- : Error performing ActiveStorage::PurgeJob (Job ID: 508059d0-a343-4377-ae75-c89195417e61) from Sidekiq(default) in 161.91ms: Aws::S3::Errors::NoSuchKey (Aws::S3::Errors::NoSuchKey):\r\n```\r\n\r\nI see this error twice in my logs. One time for the original and one time for the variant.\r\n\r\nActive Storage uploads the blobs without any prefix. See logs on top. \r\n\r\nAm I doing something wrong? Is my application not configured correctly? What am I missing? Thank you \ud83d\ude4f \r\n\r\n### Expected behavior\r\n\r\nDeleting an attachment should not throw errors\r\n\r\nVariants are being uploaded to a `variants` subfolder \r\n\r\n### Actual behavior\r\n\r\nDeleting an attachment throws an `Aws::S3::Errors::NoSuchKey (Aws::S3::Errors::NoSuchKey)` error as with the used key `variants/5qag8y7y3qqol4wrgo9iapy2z8oy/` no objects can be found.\r\n\r\nThis is where Active Storage tries to delete the prefixed variants which have never been created before: https://github.com/rails/rails/blob/main/activestorage/app/models/active_storage/blob.rb#L325\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50583/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50583/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50580",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50580/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50580/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50580/events",
        "html_url": "https://github.com/rails/rails/pull/50580",
        "id": 2065925947,
        "node_id": "PR_kwDNIULOYzzsDw",
        "number": 50580,
        "title": "Port `ActiveRecord::AttributeMethods::Query` to Active Model",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            },
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-04T16:07:32Z",
        "updated_at": "2024-01-04T17:01:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50580",
            "html_url": "https://github.com/rails/rails/pull/50580",
            "diff_url": "https://github.com/rails/rails/pull/50580.diff",
            "patch_url": "https://github.com/rails/rails/pull/50580.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nRelated to https://github.com/rails/rails/issues/50568\r\n\r\nThe backport of [type_for_attribute][] from Active Record to Active Model enables the backport of `ActiveRecord::AttributeMethods::Query` to define predicate methods for both Active Model and Active Record using the same code paths.\r\n\r\n### Detail\r\n\r\nThis commit renames `Active{Record,Model}::AttributeMethods::Query` then includes it into both into the original\r\n`ActiveRecord::AttributeMethods::Query` and into\r\n`ActiveModel::Attributes` by default.\r\n\r\nThe test coverage was copied directly from the [Active Record test suite][], then modified to work in a database-less environment.\r\n\r\n### Additional information\r\n\r\nThe `_query_attribute` method defined in\r\n`ActiveRecord::AttributeMethods::Query` is specific to Active Record, so do not include it in the migration.\r\n\r\n[type_for_attribute]: https://github.com/rails/rails/commit/83f543b8760308081ab1b58c25804c45c2597844\r\n[Active Record test suite]: https://github.com/rails/rails/blob/a73cbbea6a082cdd320ecc92e3c6f1d46fe6af74/activerecord/test/cases/attribute_methods_test.rb#L494-L596\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50580/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50579",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50579/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50579/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50579/events",
        "html_url": "https://github.com/rails/rails/issues/50579",
        "id": 2065896582,
        "node_id": "I_kwDNIULOeyMUhg",
        "number": 50579,
        "title": "CI: SQLite adapter is running in Trilogy tests",
        "user": {
            "login": "skipkayhil",
            "id": 6014046,
            "node_id": "MDQ6VXNlcjYwMTQwNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6014046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skipkayhil",
            "html_url": "https://github.com/skipkayhil",
            "followers_url": "https://api.github.com/users/skipkayhil/followers",
            "following_url": "https://api.github.com/users/skipkayhil/following{/other_user}",
            "gists_url": "https://api.github.com/users/skipkayhil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skipkayhil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skipkayhil/subscriptions",
            "organizations_url": "https://api.github.com/users/skipkayhil/orgs",
            "repos_url": "https://api.github.com/users/skipkayhil/repos",
            "events_url": "https://api.github.com/users/skipkayhil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skipkayhil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 776781281,
                "node_id": "MDU6TGFiZWw3NzY3ODEyODE=",
                "url": "https://api.github.com/repos/rails/rails/labels/ci%20issues",
                "name": "ci issues",
                "color": "aaafff",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-04T15:49:54Z",
        "updated_at": "2024-01-04T15:56:29Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Ref #49373\r\n\r\nhttps://buildkite.com/rails/rails/builds/103367#018cd514-4e51-4bac-be7c-c8656888c21e\r\n\r\nI'm pretty sure this means that some other test is leaking, but I have not dug in at all.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50579/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50958",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50958/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50958/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50958/events",
        "html_url": "https://github.com/rails/rails/pull/50958",
        "id": 2116092234,
        "node_id": "PR_kwDNIULOZeUV5A",
        "number": 50958,
        "title": "Add missing alias to errors array",
        "user": {
            "login": "laomatt",
            "id": 9632282,
            "node_id": "MDQ6VXNlcjk2MzIyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9632282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laomatt",
            "html_url": "https://github.com/laomatt",
            "followers_url": "https://api.github.com/users/laomatt/followers",
            "following_url": "https://api.github.com/users/laomatt/following{/other_user}",
            "gists_url": "https://api.github.com/users/laomatt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laomatt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laomatt/subscriptions",
            "organizations_url": "https://api.github.com/users/laomatt/orgs",
            "repos_url": "https://api.github.com/users/laomatt/repos",
            "events_url": "https://api.github.com/users/laomatt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laomatt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-03T01:01:09Z",
        "updated_at": "2024-02-03T01:01:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50958",
            "html_url": "https://github.com/rails/rails/pull/50958",
            "diff_url": "https://github.com/rails/rails/pull/50958.diff",
            "patch_url": "https://github.com/rails/rails/pull/50958.patch",
            "merged_at": null
        },
        "body": "it used to be that the << operator was able to add error messages during the validation process, this restores that functionality.\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because errors in active record validations seem to be missing the << functionality it used to have\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the array returned by ar errors\r\n\r\n### Additional information\r\n\r\nJust wanted to restore the alias of >> to 'add'\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50958/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50954",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50954/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50954/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50954/events",
        "html_url": "https://github.com/rails/rails/issues/50954",
        "id": 2115098687,
        "node_id": "I_kwDNIULOfhHYPw",
        "number": 50954,
        "title": "esbuild precompilation error in rails 7.1.3",
        "user": {
            "login": "PhilippGsell",
            "id": 58818799,
            "node_id": "MDQ6VXNlcjU4ODE4Nzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58818799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PhilippGsell",
            "html_url": "https://github.com/PhilippGsell",
            "followers_url": "https://api.github.com/users/PhilippGsell/followers",
            "following_url": "https://api.github.com/users/PhilippGsell/following{/other_user}",
            "gists_url": "https://api.github.com/users/PhilippGsell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PhilippGsell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PhilippGsell/subscriptions",
            "organizations_url": "https://api.github.com/users/PhilippGsell/orgs",
            "repos_url": "https://api.github.com/users/PhilippGsell/repos",
            "events_url": "https://api.github.com/users/PhilippGsell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PhilippGsell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T14:43:34Z",
        "updated_at": "2024-02-02T14:43:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\ncreate a new rails 7.1.3 Project with esbuild.\r\n```bash\r\n rails new app --javascript esbuild\r\n```\r\nand try to build the docker image without doing any changes\r\n```bash\r\ndocker build -f Dockerfile -t app_test . && docker run -p 3000:3000 -v .:/rails app_test --env RAILS_MASTER_KEY=xxx\r\n```\r\n\r\n### Expected behavior\r\nThe image should build\r\n\r\n### Actual behavior\r\nyarn throws an error while precompiling the assets.\r\n\r\nyarn run v1.22.21\r\n$ esbuild app/javascript/*.* --bundle --sourcemap --format=esm --outdir=app/assets/builds --public-path=/assets\r\n\u2718 [ERROR] Could not resolve \"@hotwired/turbo-rails\"\r\n\r\n    app/javascript/application.js:2:7:\r\n      2 \u2502 import \"@hotwired/turbo-rails\"\r\n      The command '/bin/sh -c SECRET_KEY_BASE_DUMMY=1 ./bin/rails assets:precompile' returned a non-zero code: 1\r\n\r\n### System configuration\r\n**Ubuntu version**: 22.04\r\n\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.0.2p107 (2021-07-07 revision 0db68f0233) [x86_64-linux-gnu]\r\n\r\n**gem --version**: 3.3.5\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50953",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50953/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50953/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50953/events",
        "html_url": "https://github.com/rails/rails/pull/50953",
        "id": 2114861781,
        "node_id": "PR_kwDNIULOZdP1vw",
        "number": 50953,
        "title": "Add webp as a default to active_storage.web_image_content_types",
        "user": {
            "login": "lewispb",
            "id": 1773614,
            "node_id": "MDQ6VXNlcjE3NzM2MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1773614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lewispb",
            "html_url": "https://github.com/lewispb",
            "followers_url": "https://api.github.com/users/lewispb/followers",
            "following_url": "https://api.github.com/users/lewispb/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewispb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lewispb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewispb/subscriptions",
            "organizations_url": "https://api.github.com/users/lewispb/orgs",
            "repos_url": "https://api.github.com/users/lewispb/repos",
            "events_url": "https://api.github.com/users/lewispb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lewispb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-02T12:51:26Z",
        "updated_at": "2024-02-02T17:19:56Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50953",
            "html_url": "https://github.com/rails/rails/pull/50953",
            "diff_url": "https://github.com/rails/rails/pull/50953.diff",
            "patch_url": "https://github.com/rails/rails/pull/50953.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nCustomers are uploading webp images to our app, and expect them to be rendered just like other images, instead of being converted to the fallback PNG format.\r\n\r\n### Detail\r\n\r\nFollows https://github.com/rails/rails/pull/38918 and https://github.com/rails/rails/pull/38988. At the time, webp browser support was limited. Now 96% of browsers support webp: https://caniuse.com/?search=webp\r\n\r\nThis PR adds webp as a default image type.\r\n\r\n### Additional information\r\n\r\nI think this is a sensible default in 2024, but alternatively each Rails app may choose:\r\n\r\n```\r\nRails.application.configure do\r\n  config.active_storage.web_image_content_types << \"image/webp\"\r\nend\r\n```\r\n\r\n**Changelog**\r\n\r\nI've not added a changelog entry in line with https://github.com/rails/rails/pull/38918#discussion_r410527726, but I'd be happy to add one if it's felt useful now.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\ncc @jeremy \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50953/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50951",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50951/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50951/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50951/events",
        "html_url": "https://github.com/rails/rails/pull/50951",
        "id": 2114685245,
        "node_id": "PR_kwDNIULOZdGIPQ",
        "number": 50951,
        "title": "set default_enforce_utf8 to false",
        "user": {
            "login": "ironsand",
            "id": 4509402,
            "node_id": "MDQ6VXNlcjQ1MDk0MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4509402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ironsand",
            "html_url": "https://github.com/ironsand",
            "followers_url": "https://api.github.com/users/ironsand/followers",
            "following_url": "https://api.github.com/users/ironsand/following{/other_user}",
            "gists_url": "https://api.github.com/users/ironsand/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ironsand/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ironsand/subscriptions",
            "organizations_url": "https://api.github.com/users/ironsand/orgs",
            "repos_url": "https://api.github.com/users/ironsand/repos",
            "events_url": "https://api.github.com/users/ironsand/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ironsand/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-02T11:11:21Z",
        "updated_at": "2024-02-03T08:41:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50951",
            "html_url": "https://github.com/rails/rails/pull/50951",
            "diff_url": "https://github.com/rails/rails/pull/50951.diff",
            "patch_url": "https://github.com/rails/rails/pull/50951.patch",
            "merged_at": null
        },
        "body": "`enforce_utf8` is false by deault in `form_for` #30852\r\nWe normally don't need to consider old IE anymore.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50951/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50950",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50950/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50950/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50950/events",
        "html_url": "https://github.com/rails/rails/pull/50950",
        "id": 2114677525,
        "node_id": "PR_kwDNIULOZdFtKw",
        "number": 50950,
        "title": "Add class name to enum validation exception message",
        "user": {
            "login": "amkisko",
            "id": 54796266,
            "node_id": "MDQ6VXNlcjU0Nzk2MjY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54796266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amkisko",
            "html_url": "https://github.com/amkisko",
            "followers_url": "https://api.github.com/users/amkisko/followers",
            "following_url": "https://api.github.com/users/amkisko/following{/other_user}",
            "gists_url": "https://api.github.com/users/amkisko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amkisko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amkisko/subscriptions",
            "organizations_url": "https://api.github.com/users/amkisko/orgs",
            "repos_url": "https://api.github.com/users/amkisko/repos",
            "events_url": "https://api.github.com/users/amkisko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amkisko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T11:07:18Z",
        "updated_at": "2024-02-02T11:08:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50950",
            "html_url": "https://github.com/rails/rails/pull/50950",
            "diff_url": "https://github.com/rails/rails/pull/50950.diff",
            "patch_url": "https://github.com/rails/rails/pull/50950.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nIn general validation errors should include more information on where it has happened.\r\n\r\n### Detail\r\n\r\nThis PR updates `activerecord/lib/active_record/enum.rb` validation exception message and just adds class name.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50950/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50949",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50949/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50949/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50949/events",
        "html_url": "https://github.com/rails/rails/pull/50949",
        "id": 2114653503,
        "node_id": "PR_kwDNIULOZdEYOA",
        "number": 50949,
        "title": "Add a Rails Guide for tuning performance for deployment",
        "user": {
            "login": "noahgibbs",
            "id": 82408,
            "node_id": "MDQ6VXNlcjgyNDA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/82408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noahgibbs",
            "html_url": "https://github.com/noahgibbs",
            "followers_url": "https://api.github.com/users/noahgibbs/followers",
            "following_url": "https://api.github.com/users/noahgibbs/following{/other_user}",
            "gists_url": "https://api.github.com/users/noahgibbs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noahgibbs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noahgibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/noahgibbs/orgs",
            "repos_url": "https://api.github.com/users/noahgibbs/repos",
            "events_url": "https://api.github.com/users/noahgibbs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noahgibbs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T10:55:44Z",
        "updated_at": "2024-02-02T15:02:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50949",
            "html_url": "https://github.com/rails/rails/pull/50949",
            "diff_url": "https://github.com/rails/rails/pull/50949.diff",
            "patch_url": "https://github.com/rails/rails/pull/50949.patch",
            "merged_at": null
        },
        "body": "This pull request adds a new Rails Guide called \"Tuning Performance for Deployment\".\r\n\r\n### Motivation / Background\r\n\r\nA few weeks ago there was [an issue to change the default thread count for Puma in Rails](https://github.com/rails/rails/issues/50450) and [a PR to make that change](https://github.com/rails/rails/pull/50669).\r\n\r\nThe PR mentioned that a performance tuning guide would be the right way to document some issues, but no such guide exists. I wrote a basic guide and incorporated a lot of feedback from @byroot (Jean Boussier), who wrote the thread count PR.\r\n\r\nThis pull request adds the suggested Rails Guide.\r\n\r\nCC @nateberkopec - though I know you're very busy right now :-)\r\n\r\n### Detail\r\n\r\nIt's impossible to have a detailed guide for all possible Rails deployment options. This guide focuses on Puma (the default server) and CRuby, and on giving a good start to people who don't already know deployment well. I've tried to mention core performance issues without explaining every possible configuration change.\r\n\r\nNext time there is a deployment configuration change, there will be a place to document the tradeoffs.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50949/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50948",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50948/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50948/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50948/events",
        "html_url": "https://github.com/rails/rails/issues/50948",
        "id": 2114571381,
        "node_id": "I_kwDNIULOfgnMdQ",
        "number": 50948,
        "title": "Destroying bi-directional has_one through association only works from one end",
        "user": {
            "login": "airblade",
            "id": 7265,
            "node_id": "MDQ6VXNlcjcyNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7265?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/airblade",
            "html_url": "https://github.com/airblade",
            "followers_url": "https://api.github.com/users/airblade/followers",
            "following_url": "https://api.github.com/users/airblade/following{/other_user}",
            "gists_url": "https://api.github.com/users/airblade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/airblade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/airblade/subscriptions",
            "organizations_url": "https://api.github.com/users/airblade/orgs",
            "repos_url": "https://api.github.com/users/airblade/repos",
            "events_url": "https://api.github.com/users/airblade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/airblade/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T10:14:36Z",
        "updated_at": "2024-02-02T10:14:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Summary\r\n\r\nGiven a `has_one :through` association with `dependent: :destroy`, destroying the parent destroys the through record and the far end.  However if the association is bi-directional, destroying only works from one end \u2013 and the end which succeeds depends on the order of `belongs_to` declarations in the join model.  I believe it should work from both ends.\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :lefts, force: true do |t|\r\n  end\r\n\r\n  create_table :rights, force: true do |t|\r\n  end\r\n\r\n  create_table :middles, force: true do |t|\r\n    t.references :left, foreign_key: true\r\n    t.references :right, foreign_key: true\r\n  end\r\nend\r\n\r\nclass Left < ActiveRecord::Base\r\n  has_one :middle, dependent: :destroy\r\n  has_one :right, through: :middle\r\nend\r\n\r\nclass Middle < ActiveRecord::Base\r\n  belongs_to :left, dependent: :destroy\r\n  belongs_to :right, dependent: :destroy\r\nend\r\n\r\nclass Right < ActiveRecord::Base\r\n  has_one :middle, dependent: :destroy\r\n  has_one :left, through: :middle\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_destroying_left_destroys_right\r\n    left = Left.create!\r\n    right = Right.create!\r\n    middle = Middle.create! left: left, right: right\r\n\r\n    left.destroy\r\n    assert right.destroyed?\r\n  end\r\n\r\n  def test_destroying_right_destroys_left\r\n    left = Left.create!\r\n    right = Right.create!\r\n    middle = Middle.create! left: left, right: right\r\n\r\n    right.destroy\r\n    assert left.destroyed?\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect:\r\n\r\n- `left.destroy` to also destroy its `middle` and its `right`\r\n- `right.destroy` to also destroy its `middle` and its `left`\r\n\r\n### Actual behavior\r\n\r\n- `right.destroy` destroys its `middle` and its `left`\r\n-  `left.destroy` destroys its `middle` but does not destroy its `right`\r\n\r\nHowever if I reverse the order of `Middle`'s `belongs_to` declarations, `right.destroy` stops working and `left.destroy` starts working.\r\n\r\n### Patch\r\n\r\nThis patch fixes the behaviour and does not break any existing tests (via `bundle exec rake test:sqlite3`):\r\n\r\n```diff\r\ndiff --git i/activerecord/lib/active_record/callbacks.rb w/activerecord/lib/active_record/callbacks.rb\r\nindex 29c72d1024..6e9c68b747 100644\r\n--- i/activerecord/lib/active_record/callbacks.rb\r\n+++ w/activerecord/lib/active_record/callbacks.rb\r\n@@ -418,7 +418,7 @@ module ClassMethods\r\n \r\n     def destroy # :nodoc:\r\n       @_destroy_callback_already_called ||= false\r\n-      return if @_destroy_callback_already_called\r\n+      return true if @_destroy_callback_already_called\r\n       @_destroy_callback_already_called = true\r\n       _run_destroy_callbacks { super }\r\n     rescue RecordNotDestroyed => e\r\n```\r\n\r\nCredit for the patch belongs to [Alex](https://stackoverflow.com/users/207090/alex).\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.3.0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50947",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50947/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50947/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50947/events",
        "html_url": "https://github.com/rails/rails/issues/50947",
        "id": 2114046969,
        "node_id": "I_kwDNIULOfgHL-Q",
        "number": 50947,
        "title": "ActiveStorage::IntegrityError (ActiveStorage::IntegrityError)",
        "user": {
            "login": "raoehtesham03",
            "id": 152256436,
            "node_id": "U_kgDOCRM_tA",
            "avatar_url": "https://avatars.githubusercontent.com/u/152256436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoehtesham03",
            "html_url": "https://github.com/raoehtesham03",
            "followers_url": "https://api.github.com/users/raoehtesham03/followers",
            "following_url": "https://api.github.com/users/raoehtesham03/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoehtesham03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoehtesham03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoehtesham03/subscriptions",
            "organizations_url": "https://api.github.com/users/raoehtesham03/orgs",
            "repos_url": "https://api.github.com/users/raoehtesham03/repos",
            "events_url": "https://api.github.com/users/raoehtesham03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoehtesham03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T04:43:40Z",
        "updated_at": "2024-02-02T04:43:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have upgraded my rails application from 5.2 to 6.0 and then 6.0 to 7.0 . So, I am getting ActiveStorage::IntegrityError (ActiveStorage::IntegrityError) while I am trying to get -\r\n```ruby\r\n attachment.variant(resize_to_limit: resize).processed.url\r\n```\r\n\r\n### Expected behavior\r\nIt should not give this error.\r\n\r\n### Actual behavior\r\nGetting this  ActiveStorage::IntegrityError (ActiveStorage::IntegrityError) Error.\r\n\r\n### System configuration\r\n**Rails version**: 3.0.6\r\n\r\n**Ruby version**:  7.0.8\r\n\r\n\r\nPlease provide me the solution to resolve this problem I am stuck on it since a week.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50947/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50947/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50946",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50946/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50946/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50946/events",
        "html_url": "https://github.com/rails/rails/pull/50946",
        "id": 2113959017,
        "node_id": "PR_kwDNIULOZceF3g",
        "number": 50946,
        "title": "Fix error raised when running `db:schema:load:#{name}` and test DB config is missing",
        "user": {
            "login": "ricardotk002",
            "id": 3733470,
            "node_id": "MDQ6VXNlcjM3MzM0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3733470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ricardotk002",
            "html_url": "https://github.com/ricardotk002",
            "followers_url": "https://api.github.com/users/ricardotk002/followers",
            "following_url": "https://api.github.com/users/ricardotk002/following{/other_user}",
            "gists_url": "https://api.github.com/users/ricardotk002/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ricardotk002/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ricardotk002/subscriptions",
            "organizations_url": "https://api.github.com/users/ricardotk002/orgs",
            "repos_url": "https://api.github.com/users/ricardotk002/repos",
            "events_url": "https://api.github.com/users/ricardotk002/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ricardotk002/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T03:17:31Z",
        "updated_at": "2024-02-02T14:50:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50946",
            "html_url": "https://github.com/rails/rails/pull/50946",
            "diff_url": "https://github.com/rails/rails/pull/50946.diff",
            "patch_url": "https://github.com/rails/rails/pull/50946.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFixes #50672\r\n\r\n### Detail\r\n\r\nThe task `db:schema:load:#{name}` depends on `db:test:purge:#{name}` since adb64db which requires the DB config to be present, otherwise an error is raised.\r\n\r\n```\r\n$ bin/rails db:schema:load:one --trace\r\n** Invoke db:schema:load:one (first_time)\r\n** Invoke db:test:purge:one (first_time)\r\n** Invoke db:load_config (first_time)\r\n** Invoke environment (first_time)\r\n** Execute environment\r\n** Execute db:load_config\r\n** Invoke db:check_protected_environments (first_time) ** Invoke db:load_config\r\n** Execute db:check_protected_environments\r\n** Execute db:test:purge:one\r\n** Execute db:schema:load:one\r\n```\r\n\r\nThis commit fixes the problem by returning early when the DB config is indeed missing.\r\n\r\n### Additional information\r\n\r\nThe task `db:schema:load` may need to be updated to depend on `db:test:purge` too, to keep it consistent with `db:schema:load:#{name}`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50946/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50945",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50945/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50945/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50945/events",
        "html_url": "https://github.com/rails/rails/pull/50945",
        "id": 2113809897,
        "node_id": "PR_kwDNIULOZcV_yg",
        "number": 50945,
        "title": "Introduce today_or_future? method",
        "user": {
            "login": "olimart",
            "id": 547754,
            "node_id": "MDQ6VXNlcjU0Nzc1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/547754?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olimart",
            "html_url": "https://github.com/olimart",
            "followers_url": "https://api.github.com/users/olimart/followers",
            "following_url": "https://api.github.com/users/olimart/following{/other_user}",
            "gists_url": "https://api.github.com/users/olimart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olimart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olimart/subscriptions",
            "organizations_url": "https://api.github.com/users/olimart/orgs",
            "repos_url": "https://api.github.com/users/olimart/repos",
            "events_url": "https://api.github.com/users/olimart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olimart/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T00:44:50Z",
        "updated_at": "2024-02-02T00:44:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50945",
            "html_url": "https://github.com/rails/rails/pull/50945",
            "diff_url": "https://github.com/rails/rails/pull/50945.diff",
            "patch_url": "https://github.com/rails/rails/pull/50945.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request introduces a convenient helper to check if a date/time is either today or in the future.\r\n\r\nDrawing inspiration from https://github.com/rails/rails/pull/46786 which introduces `.local?` helper for environment check.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes:\r\n- `ActiveSupport::TimeWithZone`\r\n-  `DateAndTime::Calculations`\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50944",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50944/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50944/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50944/events",
        "html_url": "https://github.com/rails/rails/pull/50944",
        "id": 2113736717,
        "node_id": "PR_kwDNIULOZcR4oQ",
        "number": 50944,
        "title": "Enable DependencyTracker to evaluate interpolated paths",
        "user": {
            "login": "skipkayhil",
            "id": 6014046,
            "node_id": "MDQ6VXNlcjYwMTQwNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6014046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skipkayhil",
            "html_url": "https://github.com/skipkayhil",
            "followers_url": "https://api.github.com/users/skipkayhil/followers",
            "following_url": "https://api.github.com/users/skipkayhil/following{/other_user}",
            "gists_url": "https://api.github.com/users/skipkayhil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skipkayhil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skipkayhil/subscriptions",
            "organizations_url": "https://api.github.com/users/skipkayhil/orgs",
            "repos_url": "https://api.github.com/users/skipkayhil/repos",
            "events_url": "https://api.github.com/users/skipkayhil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skipkayhil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T23:46:28Z",
        "updated_at": "2024-02-02T19:50:39Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50944",
            "html_url": "https://github.com/rails/rails/pull/50944",
            "diff_url": "https://github.com/rails/rails/pull/50944.diff",
            "patch_url": "https://github.com/rails/rails/pull/50944.patch",
            "merged_at": null
        },
        "body": "Previously, neither the PrismRenderParser nor the RipperRenderParser would consider an interpolated string as a dependency. The RubyTracker even included a line to explcitly filter out interpolated paths returned from the RipperRenderParser since they would end in a \"/\". However, the RubyTracker does include the ability to evaluate explicit \"Template Dependency\" comments with wildcard nodes.\r\n\r\nThis commit extends the RipperRenderParser and PrismRenderParser to convert interpolated strings into wildcard globs. Additionally, it changes the RubyTracker to evaluate wildcards the same for both implicit and explicit dependencies. This enables the RubyTracker to identify potential dependencies for interpolated renders, which it was previously unable to do.\r\n\r\ncc @jhawthorn if you think this is a good idea I can try to apply it to ActionView::Precompiler as well\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50944/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50943",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50943/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50943/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50943/events",
        "html_url": "https://github.com/rails/rails/pull/50943",
        "id": 2113672199,
        "node_id": "PR_kwDNIULOZcOUzA",
        "number": 50943,
        "title": "Setup jemalloc in default Dockerfile to optimize memory allocation",
        "user": {
            "login": "northeastprince",
            "id": 55164724,
            "node_id": "MDQ6VXNlcjU1MTY0NzI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/55164724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/northeastprince",
            "html_url": "https://github.com/northeastprince",
            "followers_url": "https://api.github.com/users/northeastprince/followers",
            "following_url": "https://api.github.com/users/northeastprince/following{/other_user}",
            "gists_url": "https://api.github.com/users/northeastprince/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/northeastprince/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/northeastprince/subscriptions",
            "organizations_url": "https://api.github.com/users/northeastprince/orgs",
            "repos_url": "https://api.github.com/users/northeastprince/repos",
            "events_url": "https://api.github.com/users/northeastprince/events{/privacy}",
            "received_events_url": "https://api.github.com/users/northeastprince/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T22:55:15Z",
        "updated_at": "2024-02-01T22:59:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50943",
            "html_url": "https://github.com/rails/rails/pull/50943",
            "diff_url": "https://github.com/rails/rails/pull/50943.diff",
            "patch_url": "https://github.com/rails/rails/pull/50943.patch",
            "merged_at": null
        },
        "body": "[Ruby's use of `malloc` can create memory fragmentation problems, especially when using multiple threads](https://www.speedshop.co/2017/12/04/malloc-doubles-ruby-memory.html) like Puma does. Switching to an allocator that uses different patterns to avoid fragmentation can decrease memory usage by a substantial margin.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50943/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50941",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50941/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50941/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50941/events",
        "html_url": "https://github.com/rails/rails/pull/50941",
        "id": 2113553144,
        "node_id": "PR_kwDNIULOZcHmFg",
        "number": 50941,
        "title": "Retry `ActionableError`s when running tests",
        "user": {
            "login": "andrewn617",
            "id": 39735028,
            "node_id": "MDQ6VXNlcjM5NzM1MDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/39735028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewn617",
            "html_url": "https://github.com/andrewn617",
            "followers_url": "https://api.github.com/users/andrewn617/followers",
            "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewn617/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewn617/orgs",
            "repos_url": "https://api.github.com/users/andrewn617/repos",
            "events_url": "https://api.github.com/users/andrewn617/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewn617/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T21:50:43Z",
        "updated_at": "2024-02-02T14:23:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50941",
            "html_url": "https://github.com/rails/rails/pull/50941",
            "diff_url": "https://github.com/rails/rails/pull/50941.diff",
            "patch_url": "https://github.com/rails/rails/pull/50941.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I want to make it easier to retry actionable errors that occur when running tests. Rails already knows how to recover these errors, so lets make it possible for the user to recover from them and run their tests without exiting the process.\r\n\r\n### Detail\r\n\r\nAllow Actionable Errors encountered when running tests to be retried. This can be configured by `config.actionable_command_line_errors` and is `true` in the test environment unless the `\"CI\"` env variable is set, and false otherwise.\r\n\r\n    \r\n    Migrations are pending. To resolve this issue, run:\r\n    \r\n            bin/rails db:migrate\r\n    \r\n    You have 1 pending migration:\r\n    \r\n    db/migrate/20240201213806_add_a_to_b.rb\r\n    Run pending migrations? [Yn] Y\r\n    == 20240201213806 AddAToB: migrating =========================================\r\n    == 20240201213806 AddAToB: migrated (0.0000s) ================================\r\n    \r\n    Running 7 tests in a single process (parallelization threshold is 50)\r\n    Run options: --seed 22200\r\n    \r\n    # Running:\r\n    \r\n    .......\r\n    \r\n    Finished in 0.243394s, 28.7600 runs/s, 45.1942 assertions/s.\r\n    7 runs, 11 assertions, 0 failures, 0 errors, 0 skips\r\n    \r\n\r\n### Additional information\r\n\r\nRight now this is only implemented in the Test Runner, but I'd also like to follow up with a similar implementation for `Rails::Command::CorrectableNameError`s.\r\n\r\nAlso we could introduce a new framework default for the configuration if this is the direction in this PR is acceptable.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50941/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50939",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50939/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50939/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50939/events",
        "html_url": "https://github.com/rails/rails/issues/50939",
        "id": 2112729539,
        "node_id": "I_kwDNIULOfe2xww",
        "number": 50939,
        "title": "Should there be a RAILS_MASTER_KEY_DUMMY like SECRET_KEY_BASE_DUMMY?",
        "user": {
            "login": "dorianmariefr",
            "id": 58794487,
            "node_id": "MDQ6VXNlcjU4Nzk0NDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/58794487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dorianmariefr",
            "html_url": "https://github.com/dorianmariefr",
            "followers_url": "https://api.github.com/users/dorianmariefr/followers",
            "following_url": "https://api.github.com/users/dorianmariefr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dorianmariefr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dorianmariefr/subscriptions",
            "organizations_url": "https://api.github.com/users/dorianmariefr/orgs",
            "repos_url": "https://api.github.com/users/dorianmariefr/repos",
            "events_url": "https://api.github.com/users/dorianmariefr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dorianmariefr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T14:57:42Z",
        "updated_at": "2024-02-01T14:57:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nHave a rails app with `config.require_master_key = true`\r\n\r\n```\r\nRAILS_ENV=production SECRET_KEY_BASE_DUMMY=1 bin/rails assets:precompile\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt ignores the master key requirement?\r\n\r\n### Actual behavior\r\n\r\nError:\r\n\r\n```\r\nMissing encryption key to decrypt file with. Ask your team for your master key and write it to /rails/config/master.key or put it in the ENV['RAILS_MASTER_KEY'].\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.1.3\r\n**Ruby version**: ruby 3.2.3 (2024-01-18 revision 52bb2ac0a6) [arm64-darwin23]\r\n\r\n----\r\n\r\nWhat about a RAILS_MASTER_KEY_DUMMY=1?",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50939/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50938",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50938/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50938/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50938/events",
        "html_url": "https://github.com/rails/rails/pull/50938",
        "id": 2112546336,
        "node_id": "PR_kwDNIULOZbPi_A",
        "number": 50938,
        "title": "Refactor QueryCache to be owned by the pool",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T13:40:41Z",
        "updated_at": "2024-02-01T13:40:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50938",
            "html_url": "https://github.com/rails/rails/pull/50938",
            "diff_url": "https://github.com/rails/rails/pull/50938.diff",
            "patch_url": "https://github.com/rails/rails/pull/50938.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50793\r\n\r\nIf we want to stop caching the checked out connections, then we must persist the cache in the pool, and assign it to the connection when it's checked out.\r\n\r\nThe pool become responsible for managing the cache lifecycle.\r\n\r\nThis also open the door to sharing the cache between multiple connections, which is valuable for read replicas, etc.\r\n\r\nThis change only really make sense if we go through with no longer caching checked out connections. Otherwise it's just extra complexity.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50938/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50938/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50935",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50935/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50935/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50935/events",
        "html_url": "https://github.com/rails/rails/issues/50935",
        "id": 2112256299,
        "node_id": "I_kwDNIULOfeZ5Kw",
        "number": 50935,
        "title": "Add ability to see on which shard the migration is being run",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T11:23:15Z",
        "updated_at": "2024-02-01T22:51:30Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, when the app uses sharding and the migration is run, there is not way to tell on which shard it is being run.\r\nThis is a problem, because when the migration adds a unique index and we have some duplicates, the migration blows up (with a `ActiveRecord::RecordNotUnique` error) and there is no way to easily know on which shard exactly. \r\n\r\nThe problem can be solved in at least 2 ways:\r\n1. somehow `puts` shard info when running a migration\r\n2. we have a `connection_pool` object attached to the mentioned `ActiveRecord::RecordNotUnique` error (thanks to https://github.com/rails/rails/pull/48295), but the error message is not include this info (https://github.com/rails/rails/pull/48295#issuecomment-1570702063), so needs to fix that\r\n\r\nI would like to provide a PR, but need a suggestion on which path to choose. \r\n@byroot you helped to implement the linked PR, can you please suggest? ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50935/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50932",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50932/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50932/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50932/events",
        "html_url": "https://github.com/rails/rails/issues/50932",
        "id": 2111605159,
        "node_id": "I_kwDNIULOfdyJpw",
        "number": 50932,
        "title": "Rails 7.1 undefined method purge & same for variant using ruby 3.3.0-dev",
        "user": {
            "login": "kashifcodility",
            "id": 157491032,
            "node_id": "U_kgDOCWMfWA",
            "avatar_url": "https://avatars.githubusercontent.com/u/157491032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kashifcodility",
            "html_url": "https://github.com/kashifcodility",
            "followers_url": "https://api.github.com/users/kashifcodility/followers",
            "following_url": "https://api.github.com/users/kashifcodility/following{/other_user}",
            "gists_url": "https://api.github.com/users/kashifcodility/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kashifcodility/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kashifcodility/subscriptions",
            "organizations_url": "https://api.github.com/users/kashifcodility/orgs",
            "repos_url": "https://api.github.com/users/kashifcodility/repos",
            "events_url": "https://api.github.com/users/kashifcodility/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kashifcodility/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            },
            {
                "id": 1071962662,
                "node_id": "MDU6TGFiZWwxMDcxOTYyNjYy",
                "url": "https://api.github.com/repos/rails/rails/labels/more-information-needed",
                "name": "more-information-needed",
                "color": "bfdadc",
                "default": false,
                "description": "When reporter needs to provide more information"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-01T05:45:14Z",
        "updated_at": "2024-02-01T10:02:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "irb(main):047> image\r\n=> \r\n#<ActiveStorage::Attachment:0x00007ff81133c0a0\r\n id: 4,\r\n name: \"images\",\r\n record_type: \"News\",\r\n record_id: 2,\r\n blob_id: 4,\r\n created_at: Wed, 31 Jan 2024 12:00:01.463996000 UTC +00:00>\r\nirb(main):048> \r\nirb(main):049> \r\nirb(main):050> image.class\r\n=> ActiveStorage::Attachment(id: integer, name: string, record_type: string, record_id: integer, blob_id: integer, created_at: datetime)\r\nirb(main):051> \r\nirb(main):052> \r\nirb(main):053> \r\nirb(main):054> image.purge\r\n/home/lap-053/.rbenv/versions/3.3.0-dev/lib/ruby/gems/3.4.0+0/gems/activemodel-7.1.3/lib/active_model/attribute_methods.rb:489:in `method_missing': undefined method `purge' for an instance of ActiveStorage::Attachment (NoMethodError)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50932/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50930",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50930/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50930/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50930/events",
        "html_url": "https://github.com/rails/rails/issues/50930",
        "id": 2111351021,
        "node_id": "I_kwDNIULOfdio7Q",
        "number": 50930,
        "title": "Rails 7.1 doesn't render Enumerator in view correctly",
        "user": {
            "login": "kuwabarahiroshi",
            "id": 816749,
            "node_id": "MDQ6VXNlcjgxNjc0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/816749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kuwabarahiroshi",
            "html_url": "https://github.com/kuwabarahiroshi",
            "followers_url": "https://api.github.com/users/kuwabarahiroshi/followers",
            "following_url": "https://api.github.com/users/kuwabarahiroshi/following{/other_user}",
            "gists_url": "https://api.github.com/users/kuwabarahiroshi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kuwabarahiroshi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kuwabarahiroshi/subscriptions",
            "organizations_url": "https://api.github.com/users/kuwabarahiroshi/orgs",
            "repos_url": "https://api.github.com/users/kuwabarahiroshi/repos",
            "events_url": "https://api.github.com/users/kuwabarahiroshi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kuwabarahiroshi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T02:21:08Z",
        "updated_at": "2024-02-01T02:22:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Prior to Rails 7.1, returning an Enumerator in a view rendered the content correctly. However, starting from Rails 7.1, it appears to render only the Enumerator's string representation (Enumerator#to_s), resulting in a response like `\"#<Enumerator:0xXXXXXX>\"`.\r\n\r\nSetting `self.response_body = Enumerator.new` in an action works for both 7.0 and 7.1 (fixed in https://github.com/rails/rails/issues/49588).\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # gem \"rails\", \"~> 7.0.0\" # => works\r\n  gem \"rails\", \"~> 7.1.0\" # => fails\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"enumerator_in_action\", controller: :test\r\n    get \"enumerator_in_view\", controller: :test\r\n  end\r\nend\r\n\r\nclass TestController < ActionController::Base\r\n  def enumerator_in_action\r\n    self.response_body = Enumerator.new do |buff|\r\n      10.times { buff << _1.to_s }\r\n    end\r\n  end\r\n\r\n  def enumerator_in_view\r\n    render inline: <<~EOS, layout: false, type: :ruby\r\n      Enumerator.new do |buff|\r\n        10.times { buff << _1.to_s }\r\n      end\r\n    EOS\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def test_enumerator_in_action\r\n    get \"/enumerator_in_action\"\r\n    assert_equal \"0123456789\", last_response.body\r\n  end\r\n\r\n  def test_enumerator_in_view\r\n    get \"/enumerator_in_view\"\r\n    assert_equal \"0123456789\", last_response.body\r\n  end\r\n\r\n  private\r\n\r\n    def app\r\n      Rails.application\r\n    end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe content should be rendered by evaluating the Enumerator.\r\n\r\nI'm not sure whether it is guaranteed behavior in specification when it's returned from view, but I expect it works as was the case until Rails 7.0.\r\n\r\n### Actual behavior\r\n\r\nIt currently renders the Enumerator's string representation, such as \"#<Enumerator:0xXXXXXX>\".\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50930/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50928",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50928/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50928/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50928/events",
        "html_url": "https://github.com/rails/rails/pull/50928",
        "id": 2110751556,
        "node_id": "PR_kwDNIULOZZsk5w",
        "number": 50928,
        "title": "Fixes race condition for multiple preprocessed video variants",
        "user": {
            "login": "searls",
            "id": 79303,
            "node_id": "MDQ6VXNlcjc5MzAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/79303?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/searls",
            "html_url": "https://github.com/searls",
            "followers_url": "https://api.github.com/users/searls/followers",
            "following_url": "https://api.github.com/users/searls/following{/other_user}",
            "gists_url": "https://api.github.com/users/searls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/searls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/searls/subscriptions",
            "organizations_url": "https://api.github.com/users/searls/orgs",
            "repos_url": "https://api.github.com/users/searls/repos",
            "events_url": "https://api.github.com/users/searls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/searls/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-31T18:49:44Z",
        "updated_at": "2024-02-01T02:00:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50928",
            "html_url": "https://github.com/rails/rails/pull/50928",
            "diff_url": "https://github.com/rails/rails/pull/50928.diff",
            "patch_url": "https://github.com/rails/rails/pull/50928.patch",
            "merged_at": null
        },
        "body": "This fixes race condition in Active Storage when multiple preprocessed variants are defined for a `Previewable` file is attached.\r\n\r\n## Background\r\n\r\nWhen a variant is specified for a \"previewable\" file type (e.g. video  or PDF) attachment, a `preview_image` attachment is first created and attached on the original blob and then any user-specified variants are derived from _that_ preview image. When those variants are named and have `preprocessed: true`, the jobs to create those variants are queued simultaneously.\r\n\r\nExample from my case:\r\n\r\n```ruby\r\n  has_one_attached :file, dependent: :purge_later do |attachable|\r\n    attachable.variant :preview, resize_to_fill: [400, 400], preprocessed: true\r\n    attachable.variant :still, format: \"jpg\", saver: {quality: 85}, preprocessed: true\r\n  end\r\n```\r\n\r\n## The issue\r\n\r\nWhen a `Previewable` attachment is created (a video, in my case), `TransformJob.perform_later` is called for each named variant with `preprocessed: true`. Unless your queue adapter is synchronous (e.g. :inline or :test), this results in a race condition in which every such variant's worker will check `processed?`, see that no `preview_image` attachment exists yet on the `ActiveStorage::Blob`, and:\r\n\r\n1. Redundantly download the file from storage\r\n2. Create duplicative ActiveStorage::Attachment and `ActiveStorage::Blob` records for the `preview_image` attachment (all but one of which will be orphaned from the original blob's `has_one_attached :preview_image`)\r\n3. Create variant blobs (and associated `ActiveStorage::VariantRecord`) that are similarly orphaned (by virtue of being a variant of an orphaned `preview_image` blob)\r\n\r\nAs a result, if the video is ever purged, `PurgeJob` will only find the current `has_one_attached :preview_image` and whatever variant demanded it into existence, then leave the rest as orphaned records in the database and in storage.\r\n\r\n## The fix\r\n\r\nPretty simple: wrap the first step of the job in `blob.with_lock {}`. By pessimistically locking on the blob, we can prevent processing the preview image multiple times by multiple `TransformJob` jobs running concurrently.\r\n\r\nAlternate approaches would all be more work:\r\n\r\n* Queuing a `PreviewImage` job instead of N `TransformJob` and have it, only after `preview_image` is attached, enqueue those `TransformJob` jobs\r\n* Batching up all the named variant transformations into a single meta-job\r\n\r\n## Testing caveat \r\n\r\nWriting a test for this inside Rails would be difficult because it would require running the resulting TransformJob jobs concurrently. I [started a test](https://github.com/searls/rails/blob/fix-video-duplicate-preview-variants/activestorage/test/models/variant_with_record_test.rb#L348-L367) but failed to reproduce, in part because the test queue adapter will perform enqueued jobs inline instead of concurrently. In order to write a test that replicated the issue appropriately, we might first need a new option for `perform_enqueued_jobs(async: true) {\u00a0\u2026 }`\r\n\r\nIf you're interested, [this gist](https://gist.github.com/searls/5b8298abe88b3206f670ea3c6d574aab) includes a driver script and output before and after the patch showing it working.\r\n\r\n## Evaluating impact on existing Active Storage users\r\n\r\nI only found this because I'm a total cheapskate and was literally counting records in my S3 bucket to ensure `PurgeJob` worked. Then I wasted the next two days trying to figure out why before landing on this. I strongly suspect that ActiveStorage users who host video and take advantage of `preprocessed: true` named variants will have a lot of orphaned stuff floating around their buckets.\r\n\r\nTo see if you have any such \"zombie\" preview_images (and presumably, associated variants) floating around your application that would survive calls to `purge` on the owning attachment, you could write a query like this:\r\n\r\n```\r\nActiveStorage::Attachment\r\n  .joins(\"INNER JOIN active_storage_attachments as other_attachments ON\r\n          active_storage_attachments.record_id = other_attachments.record_id AND\r\n          active_storage_attachments.id != other_attachments.id\")\r\n  .where(\r\n    :name => \"preview_image\",\r\n    :record_type => \"ActiveStorage::Blob\",\r\n    \"other_attachments.name\" => \"preview_image\",\r\n    \"other_attachments.record_type\" => \"ActiveStorage::Blob\"\r\n  )\r\n  .distinct\r\n```\r\n\r\nClearing out one's production database and backend storage to get this all right-sized should be a fun exercise for the reader.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50928/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50920",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50920/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50920/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50920/events",
        "html_url": "https://github.com/rails/rails/pull/50920",
        "id": 2107533190,
        "node_id": "PR_kwDNIULOZW8w1g",
        "number": 50920,
        "title": "Support encrypting binary columns",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-30T10:53:34Z",
        "updated_at": "2024-02-02T14:07:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50920",
            "html_url": "https://github.com/rails/rails/pull/50920",
            "diff_url": "https://github.com/rails/rails/pull/50920.diff",
            "patch_url": "https://github.com/rails/rails/pull/50920.patch",
            "merged_at": null
        },
        "body": "\r\n### Motivation / Background\r\n\r\nActiveRecord Encryption doesn't prevent you from encrypting binary columns but it doesn't have proper support for it either.\r\n\r\nWhen the data is fed through encrypt/decrypt it is converted to a String. This means that the the encryption layer is not transparent to binary data - which should be passed as Type::Binary::Data.\r\n\r\nAs a result the data is not properly escaped in the SQL queries or deserialized correctly after decryption.\r\n\r\nHowever it just happens to work fine for MySQL and SQLite because the MessageSerializer doesn't use any characters that need to be encoded. However if you try to use a custom serializer that does then it breaks.\r\n\r\nPostgreSQL on the other hand does not work - because the Bytea type is passed a String rather than a Type::Binary::Data to deserialize, it attempts to unescape the data and either mangles it or raises an error if it contains null bytes.\r\n\r\n### Detail\r\n\r\nThe commit fixes the issue, by reserializing the data after encryption and decryption. For text data that's a no-op, but for binary data we'll convert it back to a Type::Binary::Data.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50920/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50919",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50919/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50919/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50919/events",
        "html_url": "https://github.com/rails/rails/pull/50919",
        "id": 2107305664,
        "node_id": "PR_kwDNIULOZWwUOw",
        "number": 50919,
        "title": "Add negative_scopes option to ActiveRecord's enum method",
        "user": {
            "login": "Jay0921",
            "id": 12777550,
            "node_id": "MDQ6VXNlcjEyNzc3NTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/12777550?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jay0921",
            "html_url": "https://github.com/Jay0921",
            "followers_url": "https://api.github.com/users/Jay0921/followers",
            "following_url": "https://api.github.com/users/Jay0921/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jay0921/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jay0921/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jay0921/subscriptions",
            "organizations_url": "https://api.github.com/users/Jay0921/orgs",
            "repos_url": "https://api.github.com/users/Jay0921/repos",
            "events_url": "https://api.github.com/users/Jay0921/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jay0921/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-30T09:11:41Z",
        "updated_at": "2024-01-30T09:40:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50919",
            "html_url": "https://github.com/rails/rails/pull/50919",
            "diff_url": "https://github.com/rails/rails/pull/50919.diff",
            "patch_url": "https://github.com/rails/rails/pull/50919.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nIn certain situation, we might need to store and query `negative` values. Having the option to bypass the auto-generated negative scopes can avoid the conflicts.\r\n\r\n### Detail\r\n\r\nAdd `negative_scopes` option to `ActiveRecord::Enum#enum`, this offers the flexibility to optionally skip the creation of negative scopes.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50919/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50916",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50916/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50916/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50916/events",
        "html_url": "https://github.com/rails/rails/issues/50916",
        "id": 2106914874,
        "node_id": "I_kwDNIULOfZT4Og",
        "number": 50916,
        "title": "Unexpected controller prefix path de-duplication in view partial lookup paths",
        "user": {
            "login": "sfnelson",
            "id": 325974,
            "node_id": "MDQ6VXNlcjMyNTk3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/325974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sfnelson",
            "html_url": "https://github.com/sfnelson",
            "followers_url": "https://api.github.com/users/sfnelson/followers",
            "following_url": "https://api.github.com/users/sfnelson/following{/other_user}",
            "gists_url": "https://api.github.com/users/sfnelson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sfnelson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sfnelson/subscriptions",
            "organizations_url": "https://api.github.com/users/sfnelson/orgs",
            "repos_url": "https://api.github.com/users/sfnelson/repos",
            "events_url": "https://api.github.com/users/sfnelson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sfnelson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-30T04:10:56Z",
        "updated_at": "2024-01-30T04:22:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nCreate nested controller and nested object views where there is overlap between the controller and object namespaces. For example:\r\n\r\n- `Courses::Quiz::Question` and `Courses::Quiz::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Quiz::Extra::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Courses::Quiz::QuestionsController`\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\nrequire \"active_model/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/unrelated\" => \"learning/questions#new\"\r\n    get \"/duplication\" => \"courses/quiz/questions#new\"\r\n    get \"/collision\" => \"learning/quiz/extra/questions#new\"\r\n    get \"/repetition\" => \"learning/courses/quiz/questions#new\"\r\n  end\r\nend\r\n\r\nmodule Courses\r\n  module Quiz\r\n    class Question\r\n      include ActiveModel::Model\r\n\r\n      attr_accessor :name\r\n    end\r\n\r\n    class QuestionsController < ActionController::Base\r\n      def new\r\n        render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nmodule Learning\r\n  class QuestionsController < ActionController::Base\r\n    def new\r\n      render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n    end\r\n  end\r\n\r\n  module Quiz\r\n    module Extra\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\n\r\n  module Courses\r\n    module Quiz\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def setup\r\n    super\r\n    @views = Dir.mktmpdir\r\n    ActionController::Base.prepend_view_path @views\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_unrelated_partial\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/unrelated\"\r\n    assert_equal \"Nested partial\", last_response.body\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_duplication\r\n    view_file \"courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n\r\n    get \"/duplication\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  # \u274c FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path breaks after the first match, skips 'extra'\r\n  def test_collision\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Harmful de-duplication <%= question.name %>\"\r\n    view_file \"learning/courses/extra/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/collision\"\r\n    assert_equal \"Collision partial\", last_response.body\r\n  end\r\n\r\n  # \u274c FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path fails to find overlap because offsets do not align\r\n  def test_repetition\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n    view_file \"learning/courses/quiz/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/repetition\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  private\r\n\r\n  def app\r\n    Rails.application\r\n  end\r\n\r\n  def view_file(name, content)\r\n    path = Pathname.new(@views).join(name)\r\n    path.dirname.tap(&:mkpath)\r\n    path.write(content)\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\n- Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `quiz/extra` suffix on the controller does not match the `quiz` prefix on the model so no de-duplication is performed. Partial should be `learning/courses/extra/courses/quiz/questions/_question.html.erb`\r\n- Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   `courses/quiz` suffix on controller matches `courses/quiz` prefix on model so repetition is removed. Partial should be `learning/courses/quiz/questions/_question.html.erb`\r\n\r\n### Actual behavior\r\n\r\n- \u2705 Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- \u274c Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `Quiz` is detected as overlap and `Extra` is dropped from the partial path, this is confusing and inconsistent\r\n- \u274c Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   no module duplication is detected, so full module path to controller is prefixed on the object path \u2013 deep repetition\r\n\r\n### System configuration\r\n**Rails version**: 7.1.0\r\n\r\n**Ruby version**: 3.2.3\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50916/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50916/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50914",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50914/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50914/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50914/events",
        "html_url": "https://github.com/rails/rails/pull/50914",
        "id": 2106594568,
        "node_id": "PR_kwDNIULOZWKOxQ",
        "number": 50914,
        "title": "Generate devcontainer files by default",
        "user": {
            "login": "andrewn617",
            "id": 39735028,
            "node_id": "MDQ6VXNlcjM5NzM1MDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/39735028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewn617",
            "html_url": "https://github.com/andrewn617",
            "followers_url": "https://api.github.com/users/andrewn617/followers",
            "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewn617/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewn617/orgs",
            "repos_url": "https://api.github.com/users/andrewn617/repos",
            "events_url": "https://api.github.com/users/andrewn617/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewn617/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            },
            {
                "id": 1174770998,
                "node_id": "MDU6TGFiZWwxMTc0NzcwOTk4",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailbox",
                "name": "actionmailbox",
                "color": "f4a6cb",
                "default": false,
                "description": ""
            },
            {
                "id": 1180817762,
                "node_id": "MDU6TGFiZWwxMTgwODE3NzYy",
                "url": "https://api.github.com/repos/rails/rails/labels/actiontext",
                "name": "actiontext",
                "color": "3bc667",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-29T23:03:25Z",
        "updated_at": "2024-02-01T23:57:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50914",
            "html_url": "https://github.com/rails/rails/pull/50914",
            "diff_url": "https://github.com/rails/rails/pull/50914.diff",
            "patch_url": "https://github.com/rails/rails/pull/50914.patch",
            "merged_at": null
        },
        "body": "https://github.com/rails/rails/issues/50566\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created to generate `devcontainer` files for new Rails apps.\r\n\r\n### Detail\r\n\r\nThis Pull Request adds templates for devcontainer files (`devcontainer.json`, `Dockerfile` and `docker-compose.yml`) to be generated on `rails new`.\r\n\r\nBy default the devcontainer contains the following:\r\n- A redis container for Sidekiq and Action Cable\r\n- A database (SQLite, Postgres, MySQL or MariaDB)\r\n- A Headless chrome container for system tests\r\n- Active Storage configured to use the local disk and with preview features working\r\n\r\nIf `rails new` is called with options to skip any of the above they will be removed from the dev container config.\r\n\r\nThe dev container can be skipped entirely with the `--skip_devcontainer` option.\r\n\r\n### Additional information\r\n\r\nA few changes are needed to other files generated by rails new to make sure new Rails apps can be developed both in a container and locally.\r\n\r\n- Differentiate `CABLE_REDIS_URL` and `JOBS_REDIS_URL` instead of just using `REDIS_URL` for both (A PR will need to be opened to turbo-rails to make this change as well)\r\n- For MariaDB and MySQL use the `RAILS_DATABASE_HOST` if it's set (which it will be in a container) and fallback to `localhost`\r\n- For Postgres set the host (`RAILS_DATABASE_HOST`), username and password when in a container\r\n\r\nFor system tests, we need to configure the `Capybara` host and port to the selenium container. Rather than expose the implementation details of `Capybara` to the developer, we created a new `served_by` method on `SystemTestCase` to configure these.\r\n\r\n`db:system:change` re-generates `database.yml`. I added a `skip-devcontainer` option to this generator with a default of `true`. So, any existing apps that use this command will not get devcontainer config in their db yaml. Users can opt in to have devcontainer config added to the new db yml by adding `--skip-devcontainer=false`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50909",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50909/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50909/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50909/events",
        "html_url": "https://github.com/rails/rails/pull/50909",
        "id": 2104413485,
        "node_id": "PR_kwDNIULOZUSoNQ",
        "number": 50909,
        "title": "[ci skip] [docs] make increment requirement explicit",
        "user": {
            "login": "jamiemccarthy",
            "id": 40373,
            "node_id": "MDQ6VXNlcjQwMzcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40373?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamiemccarthy",
            "html_url": "https://github.com/jamiemccarthy",
            "followers_url": "https://api.github.com/users/jamiemccarthy/followers",
            "following_url": "https://api.github.com/users/jamiemccarthy/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamiemccarthy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamiemccarthy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamiemccarthy/subscriptions",
            "organizations_url": "https://api.github.com/users/jamiemccarthy/orgs",
            "repos_url": "https://api.github.com/users/jamiemccarthy/repos",
            "events_url": "https://api.github.com/users/jamiemccarthy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamiemccarthy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-29T00:07:29Z",
        "updated_at": "2024-01-29T00:20:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50909",
            "html_url": "https://github.com/rails/rails/pull/50909",
            "diff_url": "https://github.com/rails/rails/pull/50909.diff",
            "patch_url": "https://github.com/rails/rails/pull/50909.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAs of December, [ActionController::Metal::RateLimiting](https://github.com/rails/rails/blob/main/actionpack/lib/action_controller/metal/rate_limiting.rb) provides rate limiting through the `increment` method of any cache store. RateLimiting relies on a feature of the underlying store. This feature needs to be documented, so that it remains supported, and so alternative stores know to support it.\r\n\r\nThis PR has been created to document this behavior.\r\n\r\n### Detail\r\n\r\nThe feature is that `increment`, when passed `expires_in`, will set expiration time when the key is first created, and ignore that option if the key already exists.\r\n\r\nThat functionality is already tested [here](https://github.com/rails/rails/blob/cf26c5482924babca573e6c01594d77e3321ae58/activesupport/test/cache/behaviors/cache_increment_decrement_behavior.rb#L34), in the `CacheIncrementDecrementBehavior` test module.\r\n\r\nThis Pull Request changes the documentation of `ActiveSupport::Cache::Store.increment` to reflect a now-required feature of existing stores.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50909/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50909/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50901",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50901/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50901/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50901/events",
        "html_url": "https://github.com/rails/rails/pull/50901",
        "id": 2104069423,
        "node_id": "PR_kwDNIULOZUBH_g",
        "number": 50901,
        "title": "[Fix #50897] Autosaving `has_one` sets foreign key attribute when unchanged",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-28T09:30:20Z",
        "updated_at": "2024-01-30T10:42:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50901",
            "html_url": "https://github.com/rails/rails/pull/50901",
            "diff_url": "https://github.com/rails/rails/pull/50901.diff",
            "patch_url": "https://github.com/rails/rails/pull/50901.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes https://github.com/rails/rails/issues/50897\r\nSimilar to https://github.com/rails/rails/pull/46759\r\n\r\n### Detail\r\n\r\nUpdates `ActiveRecord::AutosaveAssociation#save_has_one_association` to only update the foreign key attribute on the child record if it has changed. This makes its behaviour consistent with `belongs_to` associations and ensures that `ActiveRecord::ReadOnlyAttributeError` isn't raised when no changes have been made to the attribute.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nNone.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50901/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50897",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50897/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50897/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50897/events",
        "html_url": "https://github.com/rails/rails/issues/50897",
        "id": 2103568249,
        "node_id": "I_kwDNIULOfWHneQ",
        "number": 50897,
        "title": "Incorrectly raising `ReadonlyAttributeError` when autosaving `has_one` association with readonly foreign key",
        "user": {
            "login": "Earlopain",
            "id": 14981592,
            "node_id": "MDQ6VXNlcjE0OTgxNTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/14981592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Earlopain",
            "html_url": "https://github.com/Earlopain",
            "followers_url": "https://api.github.com/users/Earlopain/followers",
            "following_url": "https://api.github.com/users/Earlopain/following{/other_user}",
            "gists_url": "https://api.github.com/users/Earlopain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Earlopain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Earlopain/subscriptions",
            "organizations_url": "https://api.github.com/users/Earlopain/orgs",
            "repos_url": "https://api.github.com/users/Earlopain/repos",
            "events_url": "https://api.github.com/users/Earlopain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Earlopain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 4,
        "created_at": "2024-01-27T12:29:15Z",
        "updated_at": "2024-01-28T20:15:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Rails 7.1 sets `raise_on_assign_to_attr_readonly` to true. In the following repro I set a column unrelated to `attr_readonly` yet the error is still being set. If I stop setting this column the error goes away.\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord.raise_on_assign_to_attr_readonly = true\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :forum_topics, force: true do |t|\r\n    t.integer :updater_id\r\n    t.text :title\r\n  end\r\n\r\n  create_table :forum_posts, force: true do |t|\r\n    t.integer :updater_id\r\n    t.integer :forum_topic_id\r\n    t.text :body\r\n  end\r\nend\r\n\r\nclass ForumTopic < ActiveRecord::Base\r\n  has_one :original_forum_post, -> { order(\"forum_posts.id asc\") }, class_name: \"ForumPost\", inverse_of: :forum_topic\r\n  validates_associated :original_forum_post\r\n  accepts_nested_attributes_for :original_forum_post\r\nend\r\n\r\nclass ForumPost < ActiveRecord::Base\r\n  attr_readonly :forum_topic_id\r\n  belongs_to :forum_topic\r\n\r\n  before_validation do |rec|\r\n    # next # Skipping setting this column makes the error go away\r\n    if persisted?\r\n      rec.updater_id = 456\r\n    else\r\n      rec.updater_id = 123\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_readonly_attr_exception\r\n    topic = ForumTopic.create!(title: \"Hi!\", original_forum_post_attributes: { body: \"What's up?\" })\r\n    topic.update(title: \"nevermind\") # => ActiveRecord::ReadonlyAttributeError: forum_topic_id\r\n    assert_equal(456, topic.original_forum_post.updater_id)\r\n  end\r\nend\r\n```\r\n\r\n### System configuration\r\n**Rails version**: master\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50895",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50895/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50895/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50895/events",
        "html_url": "https://github.com/rails/rails/pull/50895",
        "id": 2103219381,
        "node_id": "PR_kwDNIULOZTZN2g",
        "number": 50895,
        "title": "Enhanced ActiveStorage variant tracking control",
        "user": {
            "login": "JaceBayless",
            "id": 25781337,
            "node_id": "MDQ6VXNlcjI1NzgxMzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25781337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JaceBayless",
            "html_url": "https://github.com/JaceBayless",
            "followers_url": "https://api.github.com/users/JaceBayless/followers",
            "following_url": "https://api.github.com/users/JaceBayless/following{/other_user}",
            "gists_url": "https://api.github.com/users/JaceBayless/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JaceBayless/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JaceBayless/subscriptions",
            "organizations_url": "https://api.github.com/users/JaceBayless/orgs",
            "repos_url": "https://api.github.com/users/JaceBayless/repos",
            "events_url": "https://api.github.com/users/JaceBayless/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JaceBayless/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-27T04:41:38Z",
        "updated_at": "2024-01-27T04:42:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50895",
            "html_url": "https://github.com/rails/rails/pull/50895",
            "diff_url": "https://github.com/rails/rails/pull/50895.diff",
            "patch_url": "https://github.com/rails/rails/pull/50895.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n#### My Specific Use Case\r\n\r\nIn my project, where `ActiveStorage.track_variants = true`, I needed to generate a variant of an image (a thumbnail for a room on a floorplan) but did not want to create a variant record of the original image record. This is because I intended to save the variant on a child relation, separate from the original image record.\r\n\r\n#### The Challenge\r\nWith `ActiveStorage.track_variants = true` every variant generated through `ActiveStorage` is automatically tracked in the database to the original record. There are cases in this application where we **do** want to track these variant records so I was unable to change the default configuration. This meant to properly generate my variant I had to use `ImageProcessing::Vips` directly to not generate the variant record. This worked but generated two concerns for me:\r\n\r\n1. This specific code is dependent on `ImageProcessing::Vips` and if we were to ever migrate to another image processor we would have to remember to update this code as well instead of just relying on the `ActiveStorage` default processor.\r\n2. It strays enough from the standard pattern when generating `ActiveStorage` variants that without good documentation it can become confusing to maintain.\r\n\r\n### Detail\r\n\r\nThis pull request adds the `track` option to the `variant` method which allows for overriding of the `ActiveStorage.track_variants`. This is useful when in cases where you want to stray from the application's standard configuration.\r\n\r\n```ruby\r\nActiveSupport.track_variants\r\n# => true\r\nuser.avatar.variant(track: false, resize_to_limit: [100, 100])\r\n# => #<ActiveStorage::Variant:0x00007f4e0004ffb0> \r\n```\r\nand\r\n```ruby\r\nActiveSupport.track_variants\r\n# => false\r\nuser.avatar.variant(track: true, resize_to_limit: [100, 100])\r\n# => #<ActiveStorage::VariantWithRecord:0x00007f4e0004ffb0> \r\n```\r\n\r\n### Additional information\r\n\r\nThis is my first time contributing to Rails and I appreciate anyone who takes the time to read all this. I tried my best to follow all conventions and to keep all current functionality, but in the case that I missed something I'd be happy to discuss and fix whatever is needed.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50895/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50895/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50894",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50894/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50894/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50894/events",
        "html_url": "https://github.com/rails/rails/pull/50894",
        "id": 2103022783,
        "node_id": "PR_kwDNIULOZTPMhg",
        "number": 50894,
        "title": "Add cost argument to has_secure_password",
        "user": {
            "login": "t27duck",
            "id": 545604,
            "node_id": "MDQ6VXNlcjU0NTYwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/545604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t27duck",
            "html_url": "https://github.com/t27duck",
            "followers_url": "https://api.github.com/users/t27duck/followers",
            "following_url": "https://api.github.com/users/t27duck/following{/other_user}",
            "gists_url": "https://api.github.com/users/t27duck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t27duck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t27duck/subscriptions",
            "organizations_url": "https://api.github.com/users/t27duck/orgs",
            "repos_url": "https://api.github.com/users/t27duck/repos",
            "events_url": "https://api.github.com/users/t27duck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t27duck/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-26T22:52:13Z",
        "updated_at": "2024-01-27T05:30:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50894",
            "html_url": "https://github.com/rails/rails/pull/50894",
            "diff_url": "https://github.com/rails/rails/pull/50894.diff",
            "patch_url": "https://github.com/rails/rails/pull/50894.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThere may be instances where a developer is working in an environment where a higher cost than the default (12) for BCrypt is required either due to arbitrary security requirements or the recommended minimum changes and the version of bcrypt used isn't updated.\r\n\r\n### Detail\r\n\r\nThis change adds a `cost:` argument to `has_secure_password`. If provided, it will use that value for the password cost. Its value is validated to make sure it's between `BCrypt::Engine::MIN_COST` and `BCrypt::Engine::MAX_COST`.\r\n\r\nAdditionally `[password attribute]_cost` is exposed as a convenience method to determine the cost used for the set password hash. This can be used to review the current costs from a user record and either transparently upgrade the user's password or force a password reset.\r\n\r\n### Additional information\r\n\r\nI'm not 100% married to using `cost` as the argument name as it affects only new passwords created for the record going forward.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50892",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50892/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50892/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50892/events",
        "html_url": "https://github.com/rails/rails/pull/50892",
        "id": 2102819884,
        "node_id": "PR_kwDNIULOZTEC2A",
        "number": 50892,
        "title": "Documentation: Expand documentation on has_one_attached method [ci-skip].",
        "user": {
            "login": "Takahashi-Seiji",
            "id": 140453075,
            "node_id": "U_kgDOCF8k0w",
            "avatar_url": "https://avatars.githubusercontent.com/u/140453075?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Takahashi-Seiji",
            "html_url": "https://github.com/Takahashi-Seiji",
            "followers_url": "https://api.github.com/users/Takahashi-Seiji/followers",
            "following_url": "https://api.github.com/users/Takahashi-Seiji/following{/other_user}",
            "gists_url": "https://api.github.com/users/Takahashi-Seiji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Takahashi-Seiji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Takahashi-Seiji/subscriptions",
            "organizations_url": "https://api.github.com/users/Takahashi-Seiji/orgs",
            "repos_url": "https://api.github.com/users/Takahashi-Seiji/repos",
            "events_url": "https://api.github.com/users/Takahashi-Seiji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Takahashi-Seiji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-26T20:02:30Z",
        "updated_at": "2024-01-30T18:45:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50892",
            "html_url": "https://github.com/rails/rails/pull/50892",
            "diff_url": "https://github.com/rails/rails/pull/50892.diff",
            "patch_url": "https://github.com/rails/rails/pull/50892.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nGive further context about the requirements for using the has_one_attached method. \r\n\r\nI have an application that does not have an ActiveJob::Backend queue adapter. When I tried to destroy a record, it raised an error that I needed a queue adapter. There is a dependency between the has_one_attached method and a queue adapter. \r\n\r\nThat is why adding more context about the functionality and requirements about using the has_one_attached method is important. \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50889",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50889/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50889/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50889/events",
        "html_url": "https://github.com/rails/rails/pull/50889",
        "id": 2102411019,
        "node_id": "PR_kwDNIULOZStxpQ",
        "number": 50889,
        "title": "Introduce `ActiveSupport::TestCase.around`",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2024-01-26T15:29:23Z",
        "updated_at": "2024-01-29T19:58:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50889",
            "html_url": "https://github.com/rails/rails/pull/50889",
            "diff_url": "https://github.com/rails/rails/pull/50889.diff",
            "patch_url": "https://github.com/rails/rails/pull/50889.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nWhen discussing testing frameworks for new projects, the absence of `around` hooks is usually a focal point of the conversation that pushes consensus toward alternative test harnesses.\r\n\r\nMinitest itself [will not support built-in `around` hooks](https://github.com/minitest/minitest/issues/892). While the [minitest-hooks](https://github.com/jeremyevans/minitest-hooks) gem provides support for `around`, Active Support's callback system makes adding `around` hooks fairly trivial, and is guaranteed to be implemented in the same way as all other callbacks (Controller, Jobs, Mailers, etc.).\r\n\r\n\r\n### Detail\r\n\r\nAdd a callback, which runs around `TestCase#setup`, the `test` block, and `TestCase#teardown`. Yields the test class instance and the test case to the block:\r\n\r\n```ruby\r\nclass Test < ActiveSupport::TestCase\r\n  around do |test_case, &block|\r\n    Client.with(stubbed: true, &block)\r\n  end\r\nend\r\n```\r\n\r\n### Additional Information\r\n\r\nTo support this change, rename the `activesupport/test/testing/after_teardown_test.rb` file to `activesupport/test/testing/callbacks_test.rb`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50889/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50889/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50886",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50886/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50886/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50886/events",
        "html_url": "https://github.com/rails/rails/pull/50886",
        "id": 2102255707,
        "node_id": "PR_kwDNIULOZSlTeQ",
        "number": 50886,
        "title": "[Fix #50812] Don't duplicate selects, inner and outer joins when merging with STI",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-26T13:54:50Z",
        "updated_at": "2024-01-30T10:41:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50886",
            "html_url": "https://github.com/rails/rails/pull/50886",
            "diff_url": "https://github.com/rails/rails/pull/50886.diff",
            "patch_url": "https://github.com/rails/rails/pull/50886.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes https://github.com/rails/rails/issues/50812\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `#merge_select_values`, `#merge_joins` and `#merge_outer_joins` in `ActiveRecord::Relation::Merger` to unionise selects, inner and outer joins when the two sources of a `merge` are related via STI.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nThe only similar case left in `ActiveRecord::Relation::Merger` is when [merging preloads](https://github.com/rails/rails/blob/68eade83c87ae309191add6dfa4959d7d7e07464/activerecord/lib/active_record/relation/merger.rb#L101).\r\n\r\nI don't think that is similar to these cases since the preload values are simply used to preload associations. I thought I would just mention it anyway.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50886/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50886/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50885",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50885/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50885/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50885/events",
        "html_url": "https://github.com/rails/rails/pull/50885",
        "id": 2102202900,
        "node_id": "PR_kwDNIULOZSiasw",
        "number": 50885,
        "title": "Document Attached::Model#attachment_changes [ci skip]",
        "user": {
            "login": "tsvallender",
            "id": 122306143,
            "node_id": "U_kgDOB0o-Xw",
            "avatar_url": "https://avatars.githubusercontent.com/u/122306143?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tsvallender",
            "html_url": "https://github.com/tsvallender",
            "followers_url": "https://api.github.com/users/tsvallender/followers",
            "following_url": "https://api.github.com/users/tsvallender/following{/other_user}",
            "gists_url": "https://api.github.com/users/tsvallender/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tsvallender/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tsvallender/subscriptions",
            "organizations_url": "https://api.github.com/users/tsvallender/orgs",
            "repos_url": "https://api.github.com/users/tsvallender/repos",
            "events_url": "https://api.github.com/users/tsvallender/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tsvallender/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-26T13:18:39Z",
        "updated_at": "2024-01-26T14:14:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50885",
            "html_url": "https://github.com/rails/rails/pull/50885",
            "diff_url": "https://github.com/rails/rails/pull/50885.diff",
            "patch_url": "https://github.com/rails/rails/pull/50885.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAdds documentation for the `attachment_changes` method of Active Storage.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50885/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50883",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50883/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50883/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50883/events",
        "html_url": "https://github.com/rails/rails/pull/50883",
        "id": 2101864232,
        "node_id": "PR_kwDNIULOZSQNiA",
        "number": 50883,
        "title": "Put plural inverse association inference behind a configuration flag",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/83",
            "html_url": "https://github.com/rails/rails/milestone/83",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/83/labels",
            "id": 9964242,
            "node_id": "MI_kwDNIULOAJgK0g",
            "number": 83,
            "title": "7.2.0",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 9,
            "closed_issues": 7,
            "state": "open",
            "created_at": "2023-09-25T20:29:14Z",
            "updated_at": "2024-01-26T09:49:33Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 1,
        "created_at": "2024-01-26T09:19:56Z",
        "updated_at": "2024-01-26T17:23:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50883",
            "html_url": "https://github.com/rails/rails/pull/50883",
            "diff_url": "https://github.com/rails/rails/pull/50883.diff",
            "patch_url": "https://github.com/rails/rails/pull/50883.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50284\r\n\r\nWhile having the inverse association configured it generally positive as it avoid some extra queries etc, infering it may break legecy code, as evidenced by how it broke `ActiveStorage::Blob` in https://github.com/rails/rails/pull/50800\r\n\r\nAs such we can't just enable this behavior immediately, we need to provide and upgrade path for users.\r\n\r\nAt this stage this PR is just a quick draft to discuss how exactly we should gate this. We can just make it a regular framework default, but perhaps emitting a deprecation warning when we would have infered the inverse relation would help users upgrade?  cc @rafaelfranca as you generally have great insights on this kind of new framework default.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50883/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50879",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50879/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50879/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50879/events",
        "html_url": "https://github.com/rails/rails/pull/50879",
        "id": 2101071156,
        "node_id": "PR_kwDNIULOZRn03Q",
        "number": 50879,
        "title": "Transform actionpack documentation to Markdown",
        "user": {
            "login": "rafaelfranca",
            "id": 47848,
            "node_id": "MDQ6VXNlcjQ3ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rafaelfranca",
            "html_url": "https://github.com/rafaelfranca",
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-25T19:53:03Z",
        "updated_at": "2024-01-25T22:29:37Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50879",
            "html_url": "https://github.com/rails/rails/pull/50879",
            "diff_url": "https://github.com/rails/rails/pull/50879.diff",
            "patch_url": "https://github.com/rails/rails/pull/50879.patch",
            "merged_at": null
        },
        "body": "Related to #50759\r\n\r\n`./tools/rdoc-to-md -a --only=actionpack` to reproduce the results.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50879/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50873",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50873/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50873/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50873/events",
        "html_url": "https://github.com/rails/rails/pull/50873",
        "id": 2100413008,
        "node_id": "PR_kwDNIULOZREGFA",
        "number": 50873,
        "title": "dump schema: ignore tables from any postgres schema",
        "user": {
            "login": "gagalago",
            "id": 519226,
            "node_id": "MDQ6VXNlcjUxOTIyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/519226?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gagalago",
            "html_url": "https://github.com/gagalago",
            "followers_url": "https://api.github.com/users/gagalago/followers",
            "following_url": "https://api.github.com/users/gagalago/following{/other_user}",
            "gists_url": "https://api.github.com/users/gagalago/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gagalago/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gagalago/subscriptions",
            "organizations_url": "https://api.github.com/users/gagalago/orgs",
            "repos_url": "https://api.github.com/users/gagalago/repos",
            "events_url": "https://api.github.com/users/gagalago/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gagalago/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-25T13:31:52Z",
        "updated_at": "2024-01-25T13:41:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50873",
            "html_url": "https://github.com/rails/rails/pull/50873",
            "diff_url": "https://github.com/rails/rails/pull/50873.diff",
            "patch_url": "https://github.com/rails/rails/pull/50873.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nthis pull request improve the current implementation of ignoring table during the schema dump by allowing to ignore tables from other postgres schema than \"public\".\r\n\r\n### Detail\r\n\r\nThis Pull Request changes [REPLACE ME]\r\n\r\n### Additional information\r\n\r\nthe proposed implementation lack the ability to specify exactly from which schema, the table is ignored but I think that even do, it's better than the current implementation.\r\n\r\n- [pg_dump documentation](https://www.postgresql.org/docs/current/app-pgdump.html)\r\n- [pattern documentation](https://www.postgresql.org/docs/current/app-psql.html#APP-PSQL-PATTERNS\r\n\r\n### Checklist\r\n\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\nI feel that the code change is too small to request updating CHANGELOG or writing new tests",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50868",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50868/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50868/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50868/events",
        "html_url": "https://github.com/rails/rails/issues/50868",
        "id": 2099221011,
        "node_id": "I_kwDNIULOfR-SEw",
        "number": 50868,
        "title": "Comparing `Time` object with an integer doesn't throw an error ",
        "user": {
            "login": "tgxworld",
            "id": 4335742,
            "node_id": "MDQ6VXNlcjQzMzU3NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4335742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgxworld",
            "html_url": "https://github.com/tgxworld",
            "followers_url": "https://api.github.com/users/tgxworld/followers",
            "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
            "organizations_url": "https://api.github.com/users/tgxworld/orgs",
            "repos_url": "https://api.github.com/users/tgxworld/repos",
            "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgxworld/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-24T22:29:19Z",
        "updated_at": "2024-01-30T04:47:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/time\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_stuff\r\n    # This would have raise an argument error in Ruby for trying to compare a Time object with an Integer\r\n    assert Time.now >= Time.now.to_i - 999_999\r\n\r\n    assert Time.now.to_i >= Time.now.to_i - 999_999\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI'm not sure but I would expect one of the following:\r\n\r\n1. Raise an argument error like what Ruby does when trying to compare a `Time` object with an `Integer`\r\n2. Convert the `Time` object to an `Integer` before comparing\r\n3. Convert the `Integer` to a `Time` object before comparing\r\n\r\n### Actual behavior\r\n\r\nNo errors are raised and the code will always evaluate to `false`.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50867",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50867/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50867/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50867/events",
        "html_url": "https://github.com/rails/rails/pull/50867",
        "id": 2098780342,
        "node_id": "PR_kwDNIULOZPrnLA",
        "number": 50867,
        "title": "Initialize ActiveRecord::Migrator.migrations_paths at application initialization",
        "user": {
            "login": "fsateler",
            "id": 1322013,
            "node_id": "MDQ6VXNlcjEzMjIwMTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsateler",
            "html_url": "https://github.com/fsateler",
            "followers_url": "https://api.github.com/users/fsateler/followers",
            "following_url": "https://api.github.com/users/fsateler/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsateler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsateler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsateler/subscriptions",
            "organizations_url": "https://api.github.com/users/fsateler/orgs",
            "repos_url": "https://api.github.com/users/fsateler/repos",
            "events_url": "https://api.github.com/users/fsateler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsateler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-24T17:44:10Z",
        "updated_at": "2024-01-24T17:46:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50867",
            "html_url": "https://github.com/rails/rails/pull/50867",
            "diff_url": "https://github.com/rails/rails/pull/50867.diff",
            "patch_url": "https://github.com/rails/rails/pull/50867.patch",
            "merged_at": null
        },
        "body": "This is already done in rake tasks in the `load_config` task. However, if migrations want to be manipulated/used by a non-rake program this initialization would miss any extra directories configured by the user.\r\n\r\nWe move the initialization to an initializer block. With this we can remove the rake config since it depends on `environment` anyway.\r\n\r\n### Motivation / Background\r\n\r\nIn our app we use schema-based multitenancy which means we need to setup and migrate for each tenant. We have created\r\na few helpers to aid in this task. \r\nRecently, we began modularizing our app, and started moving our migrations into packs. \r\nThen we started facing issues with migrations that tried to run more than once.\r\nWe diagnosed the root cause that our tenant creation command was not invoking `db:load_config` before loading the schema.\r\nThis resulted in \"packed\" migrations not being recorded in the initial seed of the `schema_migrations` table. Then when we attempted to run migrations on that tenant those migrations would try to run and fail. \r\n\r\nThis Pull Request has been created because a fix for this is to ensure whenever the app is loaded, the correct default paths\r\nare loaded.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the initialization from a rake task to the app initialization process.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50867/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 3,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50862",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50862/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50862/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50862/events",
        "html_url": "https://github.com/rails/rails/pull/50862",
        "id": 2097954073,
        "node_id": "PR_kwDNIULOZO-RWg",
        "number": 50862,
        "title": "Accept Tempfile as ActiveStorage attachable",
        "user": {
            "login": "shouichi",
            "id": 99586,
            "node_id": "MDQ6VXNlcjk5NTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/99586?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shouichi",
            "html_url": "https://github.com/shouichi",
            "followers_url": "https://api.github.com/users/shouichi/followers",
            "following_url": "https://api.github.com/users/shouichi/following{/other_user}",
            "gists_url": "https://api.github.com/users/shouichi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shouichi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shouichi/subscriptions",
            "organizations_url": "https://api.github.com/users/shouichi/orgs",
            "repos_url": "https://api.github.com/users/shouichi/repos",
            "events_url": "https://api.github.com/users/shouichi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shouichi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-24T10:31:28Z",
        "updated_at": "2024-01-29T23:50:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50862",
            "html_url": "https://github.com/rails/rails/pull/50862",
            "diff_url": "https://github.com/rails/rails/pull/50862.diff",
            "patch_url": "https://github.com/rails/rails/pull/50862.patch",
            "merged_at": null
        },
        "body": "`File` is already accepted as an attachable, so why not?",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50861",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50861/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50861/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50861/events",
        "html_url": "https://github.com/rails/rails/pull/50861",
        "id": 2097724253,
        "node_id": "PR_kwDNIULOZOxlpw",
        "number": 50861,
        "title": "ActionView: Raise on invalid format",
        "user": {
            "login": "3v0k4",
            "id": 5238698,
            "node_id": "MDQ6VXNlcjUyMzg2OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5238698?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3v0k4",
            "html_url": "https://github.com/3v0k4",
            "followers_url": "https://api.github.com/users/3v0k4/followers",
            "following_url": "https://api.github.com/users/3v0k4/following{/other_user}",
            "gists_url": "https://api.github.com/users/3v0k4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3v0k4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3v0k4/subscriptions",
            "organizations_url": "https://api.github.com/users/3v0k4/orgs",
            "repos_url": "https://api.github.com/users/3v0k4/repos",
            "events_url": "https://api.github.com/users/3v0k4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3v0k4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-24T08:37:24Z",
        "updated_at": "2024-01-24T08:37:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50861",
            "html_url": "https://github.com/rails/rails/pull/50861",
            "diff_url": "https://github.com/rails/rails/pull/50861.diff",
            "patch_url": "https://github.com/rails/rails/pull/50861.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFixes #45636 \r\n\r\n### Detail\r\n\r\nThis Pull Request adds a check in `ActionView::PathSet#find_all` to ensure all passed formats are valid.\r\n\r\nSince `#find_all` is used by `#exists?` and `#find`, the check is extended to all the public methods in the class that search templates.\r\n\r\n### Additional information\r\n\r\n.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50861/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50858",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50858/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50858/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50858/events",
        "html_url": "https://github.com/rails/rails/pull/50858",
        "id": 2097141500,
        "node_id": "PR_kwDNIULOZOSs4A",
        "number": 50858,
        "title": "Support options for ActionMailer delivery callbacks",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107188,
                "node_id": "MDU6TGFiZWwxMDcxODg=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
                "name": "actionmailer",
                "color": "8B00FC",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T23:16:27Z",
        "updated_at": "2024-01-23T23:16:31Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50858",
            "html_url": "https://github.com/rails/rails/pull/50858",
            "diff_url": "https://github.com/rails/rails/pull/50858.diff",
            "patch_url": "https://github.com/rails/rails/pull/50858.patch",
            "merged_at": null
        },
        "body": "Closes https://github.com/rails/rails/issues/50830.\r\n\r\nThe code works, but docs/tests etc are currently missing. I want to validate the approach before proceeding.\r\n\r\nInside action mailer I am reusing private methods from the implementation of callbacks from the action controller, see https://github.com/rails/rails/blob/main/actionpack/lib/abstract_controller/callbacks.rb.\r\n\r\nThe questions to consider are:\r\n1. Should the mailer callbacks really depend on the internals of controller callbacks, considering that it already includes it https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionmailer/lib/action_mailer/base.rb#L493\r\n2. Controllers callbacks have a `raise_on_missing_callbacks_action`, see https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionpack/lib/abstract_controller/callbacks.rb#L36 which can be set via `config.action_controller. raise_on_missing_callbacks_action`. This kinda makes sense for action mailer too, so should we introduce `config.action_mailer.raise_on_missing_callbacks_action` config? \r\n3. Controller callbacks use the word `\"controller\"`, see https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionpack/lib/abstract_controller/callbacks.rb#L54, while for mailer we should use the `\"mailer\"` word or should we make the message text more generic? \r\n\r\ncc @bensheldon ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50856",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50856/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50856/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50856/events",
        "html_url": "https://github.com/rails/rails/pull/50856",
        "id": 2096854463,
        "node_id": "PR_kwDNIULOZODAXw",
        "number": 50856,
        "title": "Document autosave validation behavior for ActiveRecord associations [ci skip]",
        "user": {
            "login": "Dmoment",
            "id": 29010172,
            "node_id": "MDQ6VXNlcjI5MDEwMTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/29010172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dmoment",
            "html_url": "https://github.com/Dmoment",
            "followers_url": "https://api.github.com/users/Dmoment/followers",
            "following_url": "https://api.github.com/users/Dmoment/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dmoment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dmoment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dmoment/subscriptions",
            "organizations_url": "https://api.github.com/users/Dmoment/orgs",
            "repos_url": "https://api.github.com/users/Dmoment/repos",
            "events_url": "https://api.github.com/users/Dmoment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dmoment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-23T19:41:36Z",
        "updated_at": "2024-01-23T21:03:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50856",
            "html_url": "https://github.com/rails/rails/pull/50856",
            "diff_url": "https://github.com/rails/rails/pull/50856.diff",
            "patch_url": "https://github.com/rails/rails/pull/50856.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nThis Pull Request needs to be merged to document the behavior of autosave: true enabling validations for belongs_to and has_one associations in ActiveRecord. Currently, this behavior is implemented in the code but not mentioned in the official documentation. This can lead to confusion for developers who rely on the Rails guides for accurate information on how ActiveRecord associations work. Including this information will improve the clarity and comprehensiveness of the Rails documentation.\r\n-->\r\n\r\n### Detail\r\n\r\nThis Pull Request adds documentation comments to the belongs_to and has_one methods in ActiveRecord::Associations to explain that autosave: true also enables validations by default. This is to reflect the actual behavior of these methods, as described in the source code and observed in application behavior.\r\n\r\n### Additional information\r\n\r\nReference to the issue discussed in Rails: Undocumented - validations enabled by autosave #50807\r\nInline gemfile with bundler example -\r\n``` ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n  gem \"rails\", \"7.1.3\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :authors do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table :books do |t|\r\n    t.belongs_to :author\r\n    t.string :title\r\n  end\r\nend\r\n\r\nclass Author < ActiveRecord::Base\r\n  has_one :book, autosave: true\r\nend\r\n\r\nclass Book < ActiveRecord::Base\r\n  belongs_to :author\r\n  validates :title, presence: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_autosave_with_validations\r\n    author = Author.new(name: \"J.K. Rowling\")\r\n    author.build_book # Not setting a title to trigger validation failure\r\n\r\n    refute author.save, \"Author should not be saved due to book validation failure\"\r\n    assert author.book.errors.full_messages.include?(\"Title can't be blank\"), \"Book should contain error on title\"\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change, specifically the addition of documentation for autosave: true behavior.\r\n* [x] Commit message includes a detailed description of the changes, for example: [Doc #50807] Document autosave validation behavior for associations.\r\n* [x] Tests are not required as this is a documentation update.\r\n* [x] CHANGELOG is not updated since this is a minor documentation change and does not affect library behavior.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50856/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50852",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50852/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50852/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50852/events",
        "html_url": "https://github.com/rails/rails/pull/50852",
        "id": 2096320468,
        "node_id": "PR_kwDNIULOZNlvqQ",
        "number": 50852,
        "title": "Action View: Fallback to existing partial when possible",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T15:19:52Z",
        "updated_at": "2024-01-23T15:27:15Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50852",
            "html_url": "https://github.com/rails/rails/pull/50852",
            "diff_url": "https://github.com/rails/rails/pull/50852.diff",
            "patch_url": "https://github.com/rails/rails/pull/50852.patch",
            "merged_at": null
        },
        "body": "Closes [#50844][]\r\n\r\nMotivation / Background\r\n---\r\n\r\nA controller declared in the top-level module can render a top-level Active Model instance whose partial is declared in the root view directory (like `articles/_article.html.erb`).\r\n\r\nA controller scoped within a module can render an Active Model instance whose partial is similarly scoped within view directory (like `scoped/articles/_article.html.erb`).\r\n\r\nA controller scoped within a module cannot render an Active Model instance whose partial is declared in the root view directory (like `articles/_article.html.erb`), despite the absence of a similarly scoped partial.\r\n\r\nThis is intended behavior that's powered by\r\n[`config.action_view.prefix_partial_path_with_controller_namespace = true`][prefix_partial_path_with_controller_namespace] (`true` by default).\r\n\r\nThis change was introduced in March of 2012 as part of [#5625][].\r\n\r\nDetail\r\n---\r\n\r\nAs a consumer of Action View, my intuition is that the lookup would fallback, in the same way that a controller that inherits from `ApplicationController` could define its own view, then rely on fallback to render an `app/views/application` partial.\r\n\r\nThis commit modifies the behavior to gracefully fall back to the root-level view partial.\r\n\r\nChecklist\r\n---\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n[#59844]: https://github.com/rails/rails/issues/50844\r\n[prefix_partial_path_with_controller_namespace]: https://guides.rubyonrails.org/configuring.html#config-action-view-prefix-partial-path-with-controller-namespace\r\n[#5625]: https://github.com/rails/rails/pull/5625\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50852/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50850",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50850/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50850/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50850/events",
        "html_url": "https://github.com/rails/rails/issues/50850",
        "id": 2095807650,
        "node_id": "I_kwDNIULOfOt8og",
        "number": 50850,
        "title": "belongs_to association doesn't work with composite `primary_key` option",
        "user": {
            "login": "bguban",
            "id": 1564376,
            "node_id": "MDQ6VXNlcjE1NjQzNzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1564376?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bguban",
            "html_url": "https://github.com/bguban",
            "followers_url": "https://api.github.com/users/bguban/followers",
            "following_url": "https://api.github.com/users/bguban/following{/other_user}",
            "gists_url": "https://api.github.com/users/bguban/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bguban/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bguban/subscriptions",
            "organizations_url": "https://api.github.com/users/bguban/orgs",
            "repos_url": "https://api.github.com/users/bguban/repos",
            "events_url": "https://api.github.com/users/bguban/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bguban/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-23T10:56:14Z",
        "updated_at": "2024-01-25T15:00:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have an aggregator model that represents the same entity from different providers. This model has a single primary but some of the providers have a composite key. So I must use 2 columns to be able to build the reflection\r\n\r\n```\r\nclass Ticker < ApplicationRecord\r\n  # this model has gvkey and iid but they are not the primary key. just fields to build the relation\r\n  has_many :co_actions, primary_key: [:gvkey, :iid], query_constraints: [:gvkey, :iid]\r\nend\r\n\r\nclass CoAction\r\n  # this model has gvkey and iid as a foreign key\r\n  belongs_to :ticker, primary_key: [:gvkey, :iid], query_constraints: [:gvkey, :iid]\r\nend\r\n```\r\n\r\nWhen I run\r\n```\r\nCoAction.take.ticker\r\n```\r\nit returns\r\n```\r\n/activerecord-7.1.3/lib/active_record/reflection.rb:576:in `check_validity!': Association CoAction#ticker primary key [:gvkey, :iid] doesn't match with foreign key [\"gvkey\", \"iid\"]. Please specify query_constraints, or primary_key and foreign_key values. (ActiveRecord::CompositePrimaryKeyMismatchError)\r\n```\r\nbut I would expect to receive the ticker model instead. The composite_primary_key gem does what expected but rails 7.1.3 relation builder converts the primary key into a string instead. So what you see in the message is a string `\"[:gvkey, :iid]\"`. (ActiveRecord::Reflection::BelongsToReflection#association_primary_key)\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.1\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50850/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50849",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50849/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50849/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50849/events",
        "html_url": "https://github.com/rails/rails/pull/50849",
        "id": 2095108275,
        "node_id": "PR_kwDNIULOZMkKDg",
        "number": 50849,
        "title": "Fixes ActionView::Template::Error when pasting images via Trix",
        "user": {
            "login": "schristm",
            "id": 24068,
            "node_id": "MDQ6VXNlcjI0MDY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schristm",
            "html_url": "https://github.com/schristm",
            "followers_url": "https://api.github.com/users/schristm/followers",
            "following_url": "https://api.github.com/users/schristm/following{/other_user}",
            "gists_url": "https://api.github.com/users/schristm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schristm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schristm/subscriptions",
            "organizations_url": "https://api.github.com/users/schristm/orgs",
            "repos_url": "https://api.github.com/users/schristm/repos",
            "events_url": "https://api.github.com/users/schristm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schristm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1180817762,
                "node_id": "MDU6TGFiZWwxMTgwODE3NzYy",
                "url": "https://api.github.com/repos/rails/rails/labels/actiontext",
                "name": "actiontext",
                "color": "3bc667",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T02:14:58Z",
        "updated_at": "2024-01-23T02:15:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50849",
            "html_url": "https://github.com/rails/rails/pull/50849",
            "diff_url": "https://github.com/rails/rails/pull/50849.diff",
            "patch_url": "https://github.com/rails/rails/pull/50849.patch",
            "merged_at": null
        },
        "body": "The asset pipeline really shouldn't be checked for remote images regardless, but this also happens to fix an issue with images pasted into Trix that get serialized as action-text-attachments with \"blob:\" urls.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50849/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50848",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50848/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50848/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50848/events",
        "html_url": "https://github.com/rails/rails/issues/50848",
        "id": 2095071717,
        "node_id": "I_kwDNIULOfOBB5Q",
        "number": 50848,
        "title": "O(N^2) operation in `CollectionAssociation#replace_common_records_in_memory` and **another** O(N^2) operation in `ActiveStorage::Attached::Many#attach`",
        "user": {
            "login": "malavbhavsar",
            "id": 1080592,
            "node_id": "MDQ6VXNlcjEwODA1OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1080592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malavbhavsar",
            "html_url": "https://github.com/malavbhavsar",
            "followers_url": "https://api.github.com/users/malavbhavsar/followers",
            "following_url": "https://api.github.com/users/malavbhavsar/following{/other_user}",
            "gists_url": "https://api.github.com/users/malavbhavsar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malavbhavsar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malavbhavsar/subscriptions",
            "organizations_url": "https://api.github.com/users/malavbhavsar/orgs",
            "repos_url": "https://api.github.com/users/malavbhavsar/repos",
            "events_url": "https://api.github.com/users/malavbhavsar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malavbhavsar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T01:29:33Z",
        "updated_at": "2024-01-23T01:39:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nApologies for not following the template. I wasn't sure how to include my half-baked fix with it... I have full repro and additional information here: [malavbhavsar/rails#1](https://github.com/malavbhavsar/rails/pull/1) \r\n\r\n```ruby\r\nuser_1 = User.create!(name: \"Jason\")\r\nuser_1.highlights.attach(\r\n  1000.times.map do |i|\r\n    {\r\n      io: StringIO.new(\"Example string inside text_file_#{i}\"),\r\n      filename: \"text_file_#{i}.txt\",\r\n      content_type: \"text/plain\",\r\n    }\r\n  end\r\n)\r\nuser_1.save!\r\nuser_1.reload\r\n\r\n# Below operation takes 5 seconds\r\nBenchmark.bm(30) do |x|\r\n  x.report(\"attach performance without fix\") do\r\n    user_1.highlights.attach(\r\n      {\r\n        io: StringIO.new(\"another text file. wow.\"),\r\n        filename: \"text_file_another.txt\",\r\n        content_type: \"text/plain\",\r\n      }\r\n    )\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nExecution time of `#attach` should not depend on how big a collection is.\r\n\r\n### Actual behavior\r\nOn a big `has_many_attached` collection, `#attach` takes a long time. If there are 1000 existing attachments, it will take 5 seconds to attach a new one.\r\n\r\n### System configuration\r\n**Rails version**: `main`\r\n\r\n**Ruby version**: `3.1.4`\r\n\r\n### Explanation\r\nWhen we call `#attach` on an already big activestorage collection, it first calls `record.public_send(\"#{name}=\", blobs + attachables.flatten) # e.g. record.highlights=...`. This eventually ends up calling `CollectionAssociation#replace_common_records_in_memory` which has been discovered as a performance problem in #46652. It ends up calling `Array#index` **n** times and `#==` **(n*n1)/2** times. In this case, `499500` times.\r\n\r\nFor ActiveRecord has_many collections, this is not a huge problem because, in my experience, `post.comments = new_comments` is not a common pattern. The general use case is `post.comments << new_comment`, which does pretty well performance-wise.\r\n\r\nUnfortunately for `has_many_attached` collection, calling `#attach` is a common use case and it calls `record.things_attachments=` under the hood. Aside - seems like people are running into this [problem](https://discuss.rubyonrails.org/t/attach-pictures-gets-very-slow/81684).\r\n\r\n### Flamegraph\r\n![flamegraph_1](https://github.com/rails/rails/assets/1080592/0bef4acf-aaa7-44b8-a830-daf4a6717ab5)\r\n\r\n### Possible solutions\r\n- Get #46652 merged\r\n- If we are concerned about the increased complexity of `@target_index_map` in #46652, I tried the [same approach with a local variable](https://github.com/malavbhavsar/rails/pull/1/files#diff-ceff30ddab4e756e3a70ece45076eb17ff2f587a068dae657d2ad3a265a3f0d6) and it helped.\r\n\r\n### ANOTHER problem\r\nAs flamegraph shows, there is another O(N^2) in `#attach`. That one is coming from `Attached::Changes::CreateOneOfMany#find_attachment`. I haven't figured out a possible solution for it... I don't understand the change tracking(?) active storage is doing but if someone can help me understand I can try fixing it. I assume this will probably need a new `Attached::Changes::AttachMany` and `Attached::Changes::AttachOne`?\r\n\r\n### Workaround\r\nI have found that creating blobs and attachments manually gets rid of BOTH problems and doesn't leave `highlights_attachments` and `highlights_blobs` stale.\r\n\r\n```ruby\r\nuser_3 = User.create!(name: \"Lauren\")\r\nuser_3.highlights.attach(\r\n  1000.times.map do |i|\r\n    {\r\n      io: StringIO.new(\"Example string inside text_file_#{i}\"),\r\n      filename: \"text_file_#{i}.txt\",\r\n      content_type: \"text/plain\",\r\n    }\r\n  end\r\n)\r\nuser_3.save!\r\nuser_3.reload\r\n\r\n# Below operation takes 0.02 second\r\nApplicationRecord.transaction do\r\n  blob = ActiveStorage::Blob.create_and_upload!(\r\n    io: StringIO.new(\"another text file. wow.\"),\r\n    filename: \"text_file_another.txt\",\r\n    content_type: \"text/plain\",\r\n  )\r\n  user_3.highlights_attachments.create!(\r\n    blob_id: blob.id,\r\n    name: 'highlights',\r\n  )\r\n  user_3.save!\r\nend\r\n```\r\n\r\n### Final performance stats\r\n\r\n```\r\n                                              user     system      total        real\r\nattach performance without fix            4.711782   0.013564   4.725346 (  4.760098)\r\n                                              user     system      total        real\r\nattach performance with half-ish fix      1.855833   0.009120   1.864953 (  1.901090)\r\n                                              user     system      total        real\r\nattach performance manual                 0.024790   0.002624   0.027414 (  0.030269)\r\n```\r\n\r\ncc: @jonathanhefner, @jeffcarbs, @danny-pflughoeft",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50848/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50846",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50846/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50846/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50846/events",
        "html_url": "https://github.com/rails/rails/pull/50846",
        "id": 2094996849,
        "node_id": "PR_kwDNIULOZMeOHA",
        "number": 50846,
        "title": "Set ActiveRecord::RecordNotFound#id when raised from a call to #reload a deleted record",
        "user": {
            "login": "segiddins",
            "id": 1946610,
            "node_id": "MDQ6VXNlcjE5NDY2MTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1946610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/segiddins",
            "html_url": "https://github.com/segiddins",
            "followers_url": "https://api.github.com/users/segiddins/followers",
            "following_url": "https://api.github.com/users/segiddins/following{/other_user}",
            "gists_url": "https://api.github.com/users/segiddins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/segiddins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/segiddins/subscriptions",
            "organizations_url": "https://api.github.com/users/segiddins/orgs",
            "repos_url": "https://api.github.com/users/segiddins/repos",
            "events_url": "https://api.github.com/users/segiddins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/segiddins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T00:04:37Z",
        "updated_at": "2024-01-23T16:49:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50846",
            "html_url": "https://github.com/rails/rails/pull/50846",
            "diff_url": "https://github.com/rails/rails/pull/50846.diff",
            "patch_url": "https://github.com/rails/rails/pull/50846.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because I am writing some tests for my app around records being deleted by calling `reload`, and there was no easy way to assert that the record raising the `ActiveRecord::RecordNotFound` exception was the record I was expecting\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `raise_record_not_found_exception!` to find IDs based on the primary key from the where condition, if no IDs are explicitly passed\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50846/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50844",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50844/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50844/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50844/events",
        "html_url": "https://github.com/rails/rails/issues/50844",
        "id": 2094843344,
        "node_id": "I_kwDNIULOfNzF0A",
        "number": 50844,
        "title": "`ActionView::Template::Error`: Missing Active Model partial when rendered from Controller declared in module",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-22T22:05:18Z",
        "updated_at": "2024-01-23T15:20:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_model/railtie\"\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/\" => \"test#index\"\r\n    get \"/scoped\" => \"scoped/test#index\"\r\n  end\r\nend\r\n\r\nclass Model\r\n  include ActiveModel::Model\r\nend\r\n\r\nclass TestController < ActionController::Base\r\nend\r\n\r\nmodule Scoped\r\n  class TestController < ActionController::Base\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def setup\r\n    super\r\n    @views = Dir.mktmpdir\r\n    ActionController::Base.prepend_view_path @views\r\n\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"test/index.html.erb\", \"<%= render Model.new %>\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_controller_renders_unscoped_partial\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_scoped_controller_renders_scoped_partial\r\n    view_file \"scoped/models/_model.html.erb\", \"Rendered\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/scoped\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  # \ud83d\udd34 FAILS\r\n  def test_scoped_controller_renders_unscoped_partial\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/scoped\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  private\r\n    def app\r\n      Rails.application\r\n    end\r\n\r\n    def view_file(name, content)\r\n      path = Pathname.new(@views).join(name)\r\n      path.dirname.tap(&:mkpath)\r\n      path.write(content)\r\n    end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nA controller declared in the top-level module (as exercised by `test_controller_renders_unscoped_partial`) can render a top-level Active Model instance whose partial is declared in the root view directory (like `models/_model.html.erb`).\r\n\r\nA controller scoped within a module (as exercised by `test_scoped_controller_renders_scoped_partial`) can render an Active Model instance whose partial is similarly scoped within view directory (like `scoped/models/_model.html.erb`).\r\n\r\nA controller scoped within a module (as exercised by `test_scoped_controller_renders_unscoped_partial`) should be able to render an Active Model instance whose partial is declared in the root view directory (like `models/_model.html.erb`), despite the absence of a similarly scoped partial. **It should gracefully fall back to the root-level view partial).\r\n\r\n### Actual behavior\r\n\r\nThe `test_scoped_controller_renders_unscoped_partial` test raises an Action View error:\r\n\r\n```\r\nActionView::Template::Error (Missing partial scoped/models/_model with {:locale=>[:en], :formats=>[:html], :variants=>[], :handlers=>[:raw, :erb, :html, :builder, :ruby]}.\r\n                                                                                                          \r\nSearched in:                                                                                              \r\n  * \"/var/folders/4q/q308vb3s12x2rzrgppdsz0540000gn/T/d20240122-19453-6bve0b\"\r\n):                                                                                                        \r\n    1: <%= render Model.new %>                                                                            \r\n                                          \r\n```\r\n\r\nIt cannot resolve the `models/_model` partial, since the rendering controller is namespaced within `scoped/`.\r\n\r\n### System configuration\r\n**Rails version**: `7.1.3`\r\n\r\n**Ruby version**: `3.2.0`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50844/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50842",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50842/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50842/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50842/events",
        "html_url": "https://github.com/rails/rails/issues/50842",
        "id": 2094312908,
        "node_id": "I_kwDNIULOfNStzA",
        "number": 50842,
        "title": "How to use Azure Managed Identity for authentication and authorization for Ruby On Rails Active Storage?",
        "user": {
            "login": "avivansh",
            "id": 40461477,
            "node_id": "MDQ6VXNlcjQwNDYxNDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/40461477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/avivansh",
            "html_url": "https://github.com/avivansh",
            "followers_url": "https://api.github.com/users/avivansh/followers",
            "following_url": "https://api.github.com/users/avivansh/following{/other_user}",
            "gists_url": "https://api.github.com/users/avivansh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/avivansh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/avivansh/subscriptions",
            "organizations_url": "https://api.github.com/users/avivansh/orgs",
            "repos_url": "https://api.github.com/users/avivansh/repos",
            "events_url": "https://api.github.com/users/avivansh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/avivansh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-22T16:41:34Z",
        "updated_at": "2024-01-22T16:41:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Current setup\r\n```yaml\r\nazure:\r\n  service: AzureStorage\r\n  storage_account_name: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-NAME\") %>\r\n  storage_access_key: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-ACCESS-KEY\") %>\r\n  container: <%= VaultService.get_secret('AZURE-ATTACHMENTS-BUCKET-NAME') %>\r\n```\r\n\r\nGiven the implementation of accessing Azure Storage using Access Token. [Link](https://github.com/azure/azure-storage-ruby/tree/master/blob#access-token)\r\n \r\n```ruby\r\nrequire \"azure/storage/common\"\r\n\r\naccess_token = <your initial access token>\r\n\r\n# Creating an instance of `Azure::Storage::Common::Core::TokenCredential`\r\ntoken_credential = Azure::Storage::Common::Core::TokenCredential.new access_token\r\ntoken_signer = Azure::Storage::Common::Core::Auth::TokenSigner.new token_credential\r\nblob_token_client = Azure::Storage::Blob::BlobService.new(storage_account_name: <your_account_name>, signer: token_signer)\r\n```\r\n\r\n\r\nGiven the implementation of Active Storage for Ruby on Rails. It uses azure-storage-blob gem under the hood.\r\n[link](https://github.com/rails/rails/blob/61d6eb119fc53678d8f5028bd73ae77e69b91fb6/activestorage/lib/active_storage/service/azure_storage_service.rb#L16)\r\n\r\n```ruby\r\n    def initialize(storage_account_name:, storage_access_key:, container:, public: false, **options)\r\n      @client = Azure::Storage::Blob::BlobService.create(storage_account_name: storage_account_name, storage_access_key: storage_access_key, **options)\r\n      @signer = Azure::Storage::Common::Core::Auth::SharedAccessSignature.new(storage_account_name, storage_access_key)\r\n      @container = container\r\n      @public = public\r\n    end\r\n```\r\n\r\nNew Setup, config/storage.yml\r\n\r\n```yaml\r\nazure:\r\n  service: AzureStorage\r\n  storage_account_name: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-NAME\") %>\r\n  container: <%= VaultService.get_secret('AZURE-ATTACHMENTS-BUCKET-NAME') %>\r\n```\r\n\r\nMonkey patched to use the above information to use active storage using managed identity\r\n\r\n```ruby\r\nmodule ActiveStorage\r\n  class Service::AzureStorageService < Service\r\n    def initialize(storage_account_name:, container:, public: false, **options)\r\n      access_token = AzureAd::ManagedIdentityTokenProvider.new('https://storage.azure.com/', client_id: ENV['AKS_MANAGED_IDENTITY_ID']).get_authentication_header.split(' ').last\r\n      # Creating an instance of `Azure::Storage::Common::Core::TokenCredential`\r\n      token_credential = ::Azure::Storage::Common::Core::TokenCredential.new access_token\r\n      token_signer = ::Azure::Storage::Common::Core::Auth::TokenSigner.new token_credential\r\n      @client = Azure::Storage::Blob::BlobService.create(storage_account_name: storage_account_name, signer: token_signer, **options)\r\n      user_delegation_key = @client.get_user_delegation_key(DateTime.now - 1.minute, DateTime.now + 6.day + 23.hours)\r\n      @signer = Azure::Storage::Common::Core::Auth::SharedAccessSignature.new(storage_account_name: storage_account_name, user_delegation_key: user_delegation_key )\r\n      @container = container\r\n      @public = public\r\n    rescue StandardError => e\r\n      raise e unless Rake.respond_to?(:application) && (!Rake.application.top_level_tasks.exclude?('assets:precompile') || !Rake.application.top_level_tasks.exclude?('source_map:upload_source_map'))\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n\r\nIs this approach correct? (I am yet to test this.). Also, is there any other approach on how to achieve this? I have posted the question on [stackoverflow](https://stackoverflow.com/questions/77846948/can-we-connect-active-storage-in-ruby-on-rails-with-azure-using-managed-identity) as well.\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: Rails 6.1.7.3\r\n\r\n**Ruby version**: ruby 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50842/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50838",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50838/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50838/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50838/events",
        "html_url": "https://github.com/rails/rails/pull/50838",
        "id": 2093903637,
        "node_id": "PR_kwDNIULOZLiUKA",
        "number": 50838,
        "title": "Fix SQLite table definition parsing bug to handle commas in default function definitions",
        "user": {
            "login": "fractaledmind",
            "id": 5077225,
            "node_id": "MDQ6VXNlcjUwNzcyMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5077225?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fractaledmind",
            "html_url": "https://github.com/fractaledmind",
            "followers_url": "https://api.github.com/users/fractaledmind/followers",
            "following_url": "https://api.github.com/users/fractaledmind/following{/other_user}",
            "gists_url": "https://api.github.com/users/fractaledmind/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fractaledmind/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fractaledmind/subscriptions",
            "organizations_url": "https://api.github.com/users/fractaledmind/orgs",
            "repos_url": "https://api.github.com/users/fractaledmind/repos",
            "events_url": "https://api.github.com/users/fractaledmind/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fractaledmind/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-22T13:18:21Z",
        "updated_at": "2024-01-22T13:18:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50838",
            "html_url": "https://github.com/rails/rails/pull/50838",
            "diff_url": "https://github.com/rails/rails/pull/50838.diff",
            "patch_url": "https://github.com/rails/rails/pull/50838.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request fixes a bug in the low-level SQLite adapter introspection logic. I came across the bug when working with virtual columns and JSON, but there are many possible cases where this would cause problems. Here is one reproducible bug script though:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\");\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.json :payload, null: false, default: {}\r\n    t.virtual :external_id, type: :string, as: \"JSON_EXTRACT(payload, '$.id')\", stored: true, null: false, index: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_with_comma_in_definition_is_autopopulated\r\n    post = Post.create!(payload: { id: 'pst_1' })\r\n\r\n    assert_equal 'pst_1', post.external_id\r\n  end\r\nend\r\n```\r\n\r\n### Detail\r\n\r\nThis Pull Request more intelligently parses the SQL string description of the table to ensure that we only split by commas that mark a new column definition. In order to accomplish this, the table parsing method needs the list of column names for the table. When `table_structure_sql` is called by `table_structure_with_collation`, these can be supplied as they are already present; when it is called by `foreign_keys`, however, they are not present and thus must be fetched.\r\n\r\nI also added a simple regression test as a part of the virtual column test case.\r\n\r\n### Additional information\r\n\r\nThis bug has existed for a long time, but I most recently touched the relevant code in https://github.com/rails/rails/pull/49376.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\ncc: @byroot (this is related to #49346), @tenderlove (this is related to https://github.com/rails/rails/pull/49290), @yahonda (this is related to https://github.com/rails/rails/pull/49376)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50838/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50837",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50837/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50837/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50837/events",
        "html_url": "https://github.com/rails/rails/pull/50837",
        "id": 2093866588,
        "node_id": "PR_kwDNIULOZLgRiw",
        "number": 50837,
        "title": "Ensure pre-7.1 migrations use legacy index names when using `rename_table`",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-22T12:59:01Z",
        "updated_at": "2024-01-28T20:19:02Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50837",
            "html_url": "https://github.com/rails/rails/pull/50837",
            "diff_url": "https://github.com/rails/rails/pull/50837.diff",
            "patch_url": "https://github.com/rails/rails/pull/50837.patch",
            "merged_at": null
        },
        "body": "Fixes https://github.com/rails/rails/issues/50833.\r\nFollow up to https://github.com/rails/rails/pull/47753 and https://github.com/rails/rails/pull/47863.\r\n\r\nThe easiest way to preserve the old behavior is to rename indexes back after the `rename_table` was run.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50837/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50835",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50835/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50835/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50835/events",
        "html_url": "https://github.com/rails/rails/issues/50835",
        "id": 2093550361,
        "node_id": "I_kwDNIULOfMkLGQ",
        "number": 50835,
        "title": "ActiveStorage::FileNotFoundError (ActiveStorage::FileNotFoundError)",
        "user": {
            "login": "raoehtesham03",
            "id": 152256436,
            "node_id": "U_kgDOCRM_tA",
            "avatar_url": "https://avatars.githubusercontent.com/u/152256436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoehtesham03",
            "html_url": "https://github.com/raoehtesham03",
            "followers_url": "https://api.github.com/users/raoehtesham03/followers",
            "following_url": "https://api.github.com/users/raoehtesham03/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoehtesham03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoehtesham03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoehtesham03/subscriptions",
            "organizations_url": "https://api.github.com/users/raoehtesham03/orgs",
            "repos_url": "https://api.github.com/users/raoehtesham03/repos",
            "events_url": "https://api.github.com/users/raoehtesham03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoehtesham03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1071962662,
                "node_id": "MDU6TGFiZWwxMDcxOTYyNjYy",
                "url": "https://api.github.com/repos/rails/rails/labels/more-information-needed",
                "name": "more-information-needed",
                "color": "bfdadc",
                "default": false,
                "description": "When reporter needs to provide more information"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-22T10:07:53Z",
        "updated_at": "2024-01-23T13:33:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have upgraded my rails application from 6.0 to 6.1 . Since then when I am  executing below queries\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n d = Document.find(768365)\r\n d.page_image.variant(resize_to_limit: Document::PAGE_IMAGE_STYLES[:small]).processed\r\n\r\n```\r\nI am getting this error\r\n### Actual behavior\r\n  ActiveStorage::FileNotFoundError (ActiveStorage::FileNotFoundError)\r\n\r\n### System configuration\r\n**Rails version**: 7.0.8\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50835/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50833",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50833/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50833/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50833/events",
        "html_url": "https://github.com/rails/rails/issues/50833",
        "id": 2092932851,
        "node_id": "I_kwDNIULOfL-e8w",
        "number": 50833,
        "title": "`ActiveRecord::Migration[7.0]`'s `rename_table` uses 7.1's new truncated index name format",
        "user": {
            "login": "r7kamura",
            "id": 111689,
            "node_id": "MDQ6VXNlcjExMTY4OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/111689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/r7kamura",
            "html_url": "https://github.com/r7kamura",
            "followers_url": "https://api.github.com/users/r7kamura/followers",
            "following_url": "https://api.github.com/users/r7kamura/following{/other_user}",
            "gists_url": "https://api.github.com/users/r7kamura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/r7kamura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/r7kamura/subscriptions",
            "organizations_url": "https://api.github.com/users/r7kamura/orgs",
            "repos_url": "https://api.github.com/users/r7kamura/repos",
            "events_url": "https://api.github.com/users/r7kamura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/r7kamura/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-22T02:09:26Z",
        "updated_at": "2024-01-23T03:17:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.3\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_index_name_after_rename_table_with_long_table_name\r\n    long_table_name = \"a\" * 48\r\n\r\n    migration_class = Class.new(ActiveRecord::Migration[7.0]) do\r\n      define_method :migrate do |x|\r\n        create_table :posts do |t|\r\n          t.string :title\r\n          t.index :title\r\n        end\r\n        rename_table :posts, long_table_name\r\n      end\r\n    end\r\n    migration = migration_class.new\r\n\r\n    ActiveRecord::Migrator.new(\r\n      :up,\r\n      [migration],\r\n      ActiveRecord::Base.connection.schema_migration,\r\n      ActiveRecord::Base.connection.internal_metadata\r\n    ).migrate\r\n\r\n    assert_equal \"index_#{long_table_name}_on_title\", ActiveRecord::Base.connection.indexes(long_table_name).first.name\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe above test should pass.\r\n\r\nThis means that since the index name was renamed to `index_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_on_title` in Rails 7.0 and earlier, if `ActiveRecord::Migration[7.0]` or earlier is specified, the same name should be used even in Rails 7.1 or later.\r\n\r\n### Actual behavior\r\n\r\nThe above test fails with the following output:\r\n\r\n```\r\nF\r\n\r\nFailure:\r\nBugTest#test_index_name_after_rename_table_with_long_table_name [example.rb:53]:\r\n--- expected\r\n+++ actual\r\n@@ -1 +1 @@\r\n-\"index_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_on_title\"\r\n+\"idx_on_title_0b3d36c24b\"\r\n\r\n\r\n\r\nbin/rails test example.rb:32\r\n\r\n\r\n\r\nFinished in 0.026827s, 37.2753 runs/s, 37.2753 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\nAs a result, if db/migrate contains `rename_table`, the index names created between Rails 7.0 and 7.1 may be different.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]\r\n\r\n### Other information\r\n\r\nThis is due to the following change:\r\n\r\n- https://github.com/rails/rails/pull/47753\r\n\r\nI think a similar change to the following is needed for `#rename_table`:\r\n\r\n- https://github.com/rails/rails/pull/47863\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50833/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50830",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50830/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50830/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50830/events",
        "html_url": "https://github.com/rails/rails/issues/50830",
        "id": 2092565763,
        "node_id": "I_kwDNIULOfLoFAw",
        "number": 50830,
        "title": "Add support for `ActionMailer.*_delivery` callback `only` and `except` options",
        "user": {
            "login": "viralpraxis",
            "id": 39729785,
            "node_id": "MDQ6VXNlcjM5NzI5Nzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/39729785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viralpraxis",
            "html_url": "https://github.com/viralpraxis",
            "followers_url": "https://api.github.com/users/viralpraxis/followers",
            "following_url": "https://api.github.com/users/viralpraxis/following{/other_user}",
            "gists_url": "https://api.github.com/users/viralpraxis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viralpraxis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viralpraxis/subscriptions",
            "organizations_url": "https://api.github.com/users/viralpraxis/orgs",
            "repos_url": "https://api.github.com/users/viralpraxis/repos",
            "events_url": "https://api.github.com/users/viralpraxis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viralpraxis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107188,
                "node_id": "MDU6TGFiZWwxMDcxODg=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
                "name": "actionmailer",
                "color": "8B00FC",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-21T12:31:43Z",
        "updated_at": "2024-01-21T18:59:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nCurrently ActionMailer's `*_delivery` callbacks do not support `only` and `except` filters, which are quite useful because some callback actions are required for a subset of mailer methods. Technically, only/except can be emulated via `if` option, but another problem is that's not clear from the documentation which options can be passed (currently `only` and `except` are simply ignored).\r\n\r\nI believe that many developers might except `ActionMailer` to behave just like `ActionController`,  so current API implementation might lead to unexpected bugs.\r\n\r\nNote that documentation on `before_action` (and similar callbacks) explicitly refer to possible options:\r\n\r\n> before_action(names, block)[Link](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-before_action)\r\n> Append a callback before actions. See [_insert_callbacks](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_insert_callbacks) for parameter details.\r\n\r\n### Expected behavior\r\nAt least some explicit info on possible `*_delivery` callback options, or (which would be better) support for `only` and `except` options.\r\n\r\n### Actual behavior\r\nMentioned options are simply ignored, no documentation on possible options.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50829",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50829/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50829/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50829/events",
        "html_url": "https://github.com/rails/rails/pull/50829",
        "id": 2092440404,
        "node_id": "PR_kwDNIULOZKUusw",
        "number": 50829,
        "title": "Fix query references for non-hash association where clause values",
        "user": {
            "login": "ezekg",
            "id": 6979737,
            "node_id": "MDQ6VXNlcjY5Nzk3Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6979737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezekg",
            "html_url": "https://github.com/ezekg",
            "followers_url": "https://api.github.com/users/ezekg/followers",
            "following_url": "https://api.github.com/users/ezekg/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezekg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezekg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezekg/subscriptions",
            "organizations_url": "https://api.github.com/users/ezekg/orgs",
            "repos_url": "https://api.github.com/users/ezekg/repos",
            "events_url": "https://api.github.com/users/ezekg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezekg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-21T06:11:40Z",
        "updated_at": "2024-01-30T22:33:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50829",
            "html_url": "https://github.com/rails/rails/pull/50829",
            "diff_url": "https://github.com/rails/rails/pull/50829.diff",
            "patch_url": "https://github.com/rails/rails/pull/50829.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nThis PR fixes an issue where non-hash where-clause values for associations would not set `references_values`. This could (and often does) end up causing hard-to-debug SQL errors due to association name vs table name mismatch, e.g. querying on a singular association name while the actual join table is plural, or vice-versa due to a prior scope.\r\n\r\nMore detailed reproduction script:  https://gist.github.com/ezekg/5969735eb8c5092fb25198bd8fac4053\r\n\r\n#### Before\r\n\r\n```rb\r\nscope = Comment.where(post: { id: post })\r\nscope.references_values # => [\"post\"]\r\n\r\nscope = Comment.where(post: post)\r\nscope.references_values # => []\r\n```\r\n\r\nI'd expect these to be synonymous since [`#id` is called on `post`](https://github.com/ezekg/rails/blob/c37450b76b24cac7951032c4210db17a9c1b7f51/activerecord/lib/active_record/relation/predicate_builder.rb#L58) for the second case.\r\n\r\n#### After\r\n\r\n```rb\r\nscope = Comment.where(post: { id: post })\r\nscope.references_values # => [\"post\"]\r\n\r\nscope = Comment.where(post: post)\r\nscope.references_values # => [\"post\"]\r\n```\r\n\r\nWith this patch, they're now more or less synonymous, both setting `references_values`.\r\n\r\nSince this is likely a breaking change (it broke a few tests in [keygen-sh/keygen-api](https://github.com/keygen-sh/keygen-api) when testing against the patch), this may require some more thought. But it is worth noting that all broken tests were related to various workarounds for this particular bug.\r\n\r\nLet me know what you guys think is the best course of action here.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50828",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50828/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50828/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50828/events",
        "html_url": "https://github.com/rails/rails/pull/50828",
        "id": 2092434369,
        "node_id": "PR_kwDNIULOZKUcQg",
        "number": 50828,
        "title": "Add examples for form helper tags [ci skip]",
        "user": {
            "login": "akhilgkrishnan",
            "id": 22231095,
            "node_id": "MDQ6VXNlcjIyMjMxMDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22231095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akhilgkrishnan",
            "html_url": "https://github.com/akhilgkrishnan",
            "followers_url": "https://api.github.com/users/akhilgkrishnan/followers",
            "following_url": "https://api.github.com/users/akhilgkrishnan/following{/other_user}",
            "gists_url": "https://api.github.com/users/akhilgkrishnan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akhilgkrishnan/subscriptions",
            "organizations_url": "https://api.github.com/users/akhilgkrishnan/orgs",
            "repos_url": "https://api.github.com/users/akhilgkrishnan/repos",
            "events_url": "https://api.github.com/users/akhilgkrishnan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akhilgkrishnan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-21T05:48:04Z",
        "updated_at": "2024-02-01T04:02:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50828",
            "html_url": "https://github.com/rails/rails/pull/50828",
            "diff_url": "https://github.com/rails/rails/pull/50828.diff",
            "patch_url": "https://github.com/rails/rails/pull/50828.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nThis Pull Request add examples for `FormTagHelper` methods.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50828/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50827",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50827/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50827/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50827/events",
        "html_url": "https://github.com/rails/rails/issues/50827",
        "id": 2092292151,
        "node_id": "I_kwDNIULOfLXYNw",
        "number": 50827,
        "title": "System tests not working on Rails 7.1.3 running on a remote machine/docker container.",
        "user": {
            "login": "srabuini",
            "id": 286604,
            "node_id": "MDQ6VXNlcjI4NjYwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/286604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srabuini",
            "html_url": "https://github.com/srabuini",
            "followers_url": "https://api.github.com/users/srabuini/followers",
            "following_url": "https://api.github.com/users/srabuini/following{/other_user}",
            "gists_url": "https://api.github.com/users/srabuini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srabuini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srabuini/subscriptions",
            "organizations_url": "https://api.github.com/users/srabuini/orgs",
            "repos_url": "https://api.github.com/users/srabuini/repos",
            "events_url": "https://api.github.com/users/srabuini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srabuini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-21T00:44:06Z",
        "updated_at": "2024-01-30T12:48:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nI've been running my system tests using a remote browser (on a docker container) since Rails 7.0 without a problem, with the following set up.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nclass ApplicationSystemTestCase < ActionDispatch::SystemTestCase\r\n  driven_by :selenium,\r\n            using: :chrome,\r\n            screen_size: [1400, 1400],\r\n            options: { browser: :remote,\r\n                       url: 'http://chrome-server:4444' } do |driver_option|\r\n    driver_option.add_argument 'disable-dev-shm-usage'\r\n  end\r\n```\r\n\r\nIt looks like the problem was introduced in #49908 and related issues/fixes.\r\n\r\nI fixed it locally just monkeypatching `Selenium::Webdriver::DriverFinder.path` just to return nil.\r\n\r\nHaving a look at the code, I think that it would be nice to avoid `Browser#preload` when browser is `:remote` in:\r\n\r\nhttps://github.com/rails/rails/blob/3064d4f53a48beb107a549a2249820350e698050/actionpack/lib/action_dispatch/system_testing/driver.rb#L19\r\n\r\nIf you think it's the right way to tackle it, I could post a fix.\r\n\r\n### Actual behavior\r\nAfter a while, an exception is raised:\r\n\r\n```\r\nSelenium::WebDriver::Error::SessionNotCreatedError: Could not start a new session. Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: unknown error: no chrome binary at /root/.cache/selenium/chrome/linux64/120.0.6099.109/chrome \r\nHost info: host: 'c3260b1b08ce', ip: '192.168.16.3'\r\nBuild info: version: '4.10.0', revision: 'c14d967899'\r\nSystem info: os.name: 'Linux', os.arch: 'aarch64', os.version: '6.5.11-linuxkit', java.version: '11.0.18'\r\nDriver info: driver.version: unknown\r\nBuild info: version: '4.10.0', revision: 'c14d967899'\r\nSystem info: os.name: 'Linux', os.arch: 'aarch64', os.version: '6.5.11-linuxkit', java.version: '11.0.18'\r\nDriver info: driver.version: unknown\r\n    [remote server] org.openqa.selenium.grid.node.config.DriverServiceSessionFactory(DriverServiceSessionFactory.java):210:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.config.DriverServiceSessionFactory(DriverServiceSessionFactory.java):69:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.local.SessionSlot(SessionSlot.java):147:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.local.LocalNode(LocalNode.java):467:in `newSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor(LocalDistributor.java):643:in `startSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor(LocalDistributor.java):560:in `newSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable(LocalDistributor.java):814:in `handleNewSessionRequest'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable(LocalDistributor.java):773:in `lambda$run$1'\r\n    [remote server] java.util.concurrent.ThreadPoolExecutor(ThreadPoolExecutor.java):1128:in `runWorker'\r\n    [remote server] java.util.concurrent.ThreadPoolExecutor$Worker(ThreadPoolExecutor.java):628:in `run'\r\n    [remote server] java.lang.Thread(Thread.java):829:in `run'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:55:in `assert_ok'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:34:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `create_response'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/default.rb:103:in `request'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:601:in `execute'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:53:in `create_session'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:317:in `block in create_bridge'\r\n    <internal:kernel>:90:in `tap'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:316:in `create_bridge'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:74:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/driver.rb:38:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:57:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:57:in `for'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver.rb:89:in `for'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/selenium/driver.rb:83:in `browser'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:55:in `block in register_selenium'\r\n    <internal:kernel>:90:in `tap'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:54:in `register_selenium'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:41:in `block in register'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/session.rb:105:in `driver'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/session.rb:91:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:421:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:421:in `block in session_pool'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:317:in `current_session'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/dsl.rb:46:in `page'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:106:in `save_image'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:36:in `take_screenshot'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:47:in `take_failed_screenshot'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/setup_and_teardown.rb:8:in `before_teardown'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.1..3\r\n\r\n**Ruby version**: 3.2.2 (2023-03-30 revision e51014f9c0) [aarch64-linux]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50826",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50826/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50826/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50826/events",
        "html_url": "https://github.com/rails/rails/pull/50826",
        "id": 2092286908,
        "node_id": "PR_kwDNIULOZKMR9Q",
        "number": 50826,
        "title": "[docs] Add more examples to `#in_order_of` [ci-skip]",
        "user": {
            "login": "thdaraujo",
            "id": 707418,
            "node_id": "MDQ6VXNlcjcwNzQxOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thdaraujo",
            "html_url": "https://github.com/thdaraujo",
            "followers_url": "https://api.github.com/users/thdaraujo/followers",
            "following_url": "https://api.github.com/users/thdaraujo/following{/other_user}",
            "gists_url": "https://api.github.com/users/thdaraujo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thdaraujo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thdaraujo/subscriptions",
            "organizations_url": "https://api.github.com/users/thdaraujo/orgs",
            "repos_url": "https://api.github.com/users/thdaraujo/repos",
            "events_url": "https://api.github.com/users/thdaraujo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thdaraujo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-21T00:21:26Z",
        "updated_at": "2024-01-31T16:16:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50826",
            "html_url": "https://github.com/rails/rails/pull/50826",
            "diff_url": "https://github.com/rails/rails/pull/50826.diff",
            "patch_url": "https://github.com/rails/rails/pull/50826.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n`#in_order_of` is an excellent method and makes ordering enum columns easier, and many complex order case/when queries can be refactored to use it.\r\n\r\nThis PR was created because I believe having more examples would help people understand this method a bit better.\r\n\r\nAlso, I think it's useful to document that this method will order results, but also FILTER them, excluding rows in which the column doesn't match any of the given values.\r\n\r\nSo I expanded the description and added these examples:\r\n- what happens when dealing with `enum` +columns+\r\n- what happens when passing `nil` as a +value+ for nullable columns\r\n\r\nHere's a gist with some tests: https://gist.github.com/thdaraujo/7d9aa5ffd1b61bf57604ded14535e357\r\n\r\nI'd be happy to add other examples for other usecases you think are relevant, just let me know!\r\n\r\n### Detail\r\n\r\nThis Pull Request expands the documentation for [in_order_of](https://api.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-in_order_of)\r\n\r\n### Additional information\r\n\r\nn/a\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* ~[ ] Tests are added or updated if you fix a bug or add a feature.~ not applicable\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50826/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50823",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50823/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50823/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50823/events",
        "html_url": "https://github.com/rails/rails/pull/50823",
        "id": 2092154145,
        "node_id": "PR_kwDNIULOZKF0tA",
        "number": 50823,
        "title": "Add methods to `ActiveRecord::Relation::FinderMethods` to determine if it contains exactly/more than/less than N records",
        "user": {
            "login": "jordinl",
            "id": 16135423,
            "node_id": "MDQ6VXNlcjE2MTM1NDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16135423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordinl",
            "html_url": "https://github.com/jordinl",
            "followers_url": "https://api.github.com/users/jordinl/followers",
            "following_url": "https://api.github.com/users/jordinl/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordinl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordinl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordinl/subscriptions",
            "organizations_url": "https://api.github.com/users/jordinl/orgs",
            "repos_url": "https://api.github.com/users/jordinl/repos",
            "events_url": "https://api.github.com/users/jordinl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordinl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2024-01-20T16:56:20Z",
        "updated_at": "2024-02-01T14:30:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50823",
            "html_url": "https://github.com/rails/rails/pull/50823",
            "diff_url": "https://github.com/rails/rails/pull/50823.diff",
            "patch_url": "https://github.com/rails/rails/pull/50823.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nI've had to check in a few places if a relation had exactly or less than or more than N records. On top of that, if the collection contains a lot of records, counting on the entire collection not only is slower but also unnecessary and limiting the count the first N or N+1 records is sufficient and faster.\r\n\r\n### Detail\r\n\r\nAdds the following methods to `ActiveRecord::Relation::FinderMethods`:\r\n  * `exactly?` returns true if the relation contains exactly N records, false otherwise.\r\n  * `at_least?` returns true if the relation contains at least N records, false otherwise.\r\n  * `at_most?` returns true if the relation contains at most N records, false otherwise.\r\n  * `less_than?` returns true if the relation contains less than N records, false otherwise.\r\n  * `more_than?` returns true if the relation contains more than N records, false otherwise.\r\n\r\nThese methods perform a `limit(M).count` (where M = N or N + 1) under the hood.\r\n\r\n### Additional information\r\n\r\nI think the naming of these methods is fine as is. Don't know if others would prefer to prefix these with `has_` or `contains_`, ie `has_exactly?` or `contains_exactly?`.\r\n\r\nWith regards to performance of doing the count with and without the limit. Without the limit when there are 8M records I get:\r\n\r\n```sql\r\n  Referral Count (135.2ms)  SELECT COUNT(*) FROM \"referrals\" WHERE \"referrals\".\"company_id\" = $1  [[\"company_id\", \"29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535\"]]\r\n=> 8467786\r\n```\r\n\r\nWith a limit of a 100:\r\n\r\n```sql\r\n  Referral Count (0.4ms)  SELECT COUNT(*) FROM (SELECT 1 AS one FROM \"referrals\" WHERE \"referrals\".\"company_id\" = $1 LIMIT $2) subquery_for_count  [[\"company_id\",\"29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535\", [\"LIMIT\", 100]]\r\n=> 100\r\n```\r\n\r\nSo it's 300x faster even when doing an index only scan:\r\n\r\n```sql\r\nexplain SELECT COUNT(*) FROM \"referrals\" WHERE \"referrals\".\"company_id\" ='29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535';\r\n\r\n                                                                          QUERY PLAN                                                                           \r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n Finalize Aggregate  (cost=136744.58..136744.59 rows=1 width=8)\r\n   ->  Gather  (cost=136744.36..136744.57 rows=2 width=8)\r\n         Workers Planned: 2\r\n         ->  Partial Aggregate  (cost=135744.36..135744.37 rows=1 width=8)\r\n               ->  Parallel Index Only Scan using index_referrals_on_company_id_and_conversion_state on referrals  (cost=0.56..127008.31 rows=3494420 width=0)\r\n                     Index Cond: (company_id = '29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535'::uuid)\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50823/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50820",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50820/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50820/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50820/events",
        "html_url": "https://github.com/rails/rails/pull/50820",
        "id": 2091981384,
        "node_id": "PR_kwDNIULOZJ9GIg",
        "number": 50820,
        "title": "docs: Update validation status based on autosave status",
        "user": {
            "login": "MONSURU-rgb",
            "id": 78952006,
            "node_id": "MDQ6VXNlcjc4OTUyMDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78952006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MONSURU-rgb",
            "html_url": "https://github.com/MONSURU-rgb",
            "followers_url": "https://api.github.com/users/MONSURU-rgb/followers",
            "following_url": "https://api.github.com/users/MONSURU-rgb/following{/other_user}",
            "gists_url": "https://api.github.com/users/MONSURU-rgb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MONSURU-rgb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MONSURU-rgb/subscriptions",
            "organizations_url": "https://api.github.com/users/MONSURU-rgb/orgs",
            "repos_url": "https://api.github.com/users/MONSURU-rgb/repos",
            "events_url": "https://api.github.com/users/MONSURU-rgb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MONSURU-rgb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-20T09:24:46Z",
        "updated_at": "2024-01-22T07:16:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50820",
            "html_url": "https://github.com/rails/rails/pull/50820",
            "diff_url": "https://github.com/rails/rails/pull/50820.diff",
            "patch_url": "https://github.com/rails/rails/pull/50820.patch",
            "merged_at": null
        },
        "body": "This Pull Request has been created to enlighten users that validations are enabled by default when autosave is True for the  `has_one` and `belongs_to`.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50815",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50815/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50815/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50815/events",
        "html_url": "https://github.com/rails/rails/pull/50815",
        "id": 2091630145,
        "node_id": "PR_kwDNIULOZJpzBQ",
        "number": 50815,
        "title": "Add format constraints for generated pwa routes",
        "user": {
            "login": "rossta",
            "id": 11673,
            "node_id": "MDQ6VXNlcjExNjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11673?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rossta",
            "html_url": "https://github.com/rossta",
            "followers_url": "https://api.github.com/users/rossta/followers",
            "following_url": "https://api.github.com/users/rossta/following{/other_user}",
            "gists_url": "https://api.github.com/users/rossta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rossta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rossta/subscriptions",
            "organizations_url": "https://api.github.com/users/rossta/orgs",
            "repos_url": "https://api.github.com/users/rossta/repos",
            "events_url": "https://api.github.com/users/rossta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rossta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T23:10:41Z",
        "updated_at": "2024-01-22T12:00:23Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50815",
            "html_url": "https://github.com/rails/rails/pull/50815",
            "diff_url": "https://github.com/rails/rails/pull/50815.diff",
            "patch_url": "https://github.com/rails/rails/pull/50815.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAs a followup to #50528, which added default pwa manifest and service worker routes and files to the new app generator, I'd like to associate the new routes with the expected mime types.\r\n\r\n### Detail\r\n\r\nWe expect the `pwa#manifest` request to be limited to json, i.e. `manifest.json` and we expect the `pwa#service_worker` request to be limited to js, i.e. `service-worker.js`. This change adds format constraints to the generated routes.\r\n\r\n### Additional information\r\n\r\nI didn't see associated tests with the previous change but would be open to adding some if desired.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50812",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50812/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50812/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50812/events",
        "html_url": "https://github.com/rails/rails/issues/50812",
        "id": 2091410608,
        "node_id": "I_kwDNIULOfKhksA",
        "number": 50812,
        "title": "Redundant JOIN produced when merging relations from STI classes",
        "user": {
            "login": "mintyfresh",
            "id": 7896757,
            "node_id": "MDQ6VXNlcjc4OTY3NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7896757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintyfresh",
            "html_url": "https://github.com/mintyfresh",
            "followers_url": "https://api.github.com/users/mintyfresh/followers",
            "following_url": "https://api.github.com/users/mintyfresh/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintyfresh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintyfresh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintyfresh/subscriptions",
            "organizations_url": "https://api.github.com/users/mintyfresh/orgs",
            "repos_url": "https://api.github.com/users/mintyfresh/repos",
            "events_url": "https://api.github.com/users/mintyfresh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintyfresh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-19T20:59:12Z",
        "updated_at": "2024-01-26T14:10:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nMerging relations with joins to the same association by different classes in an STI tree results in duplicated, redundant JOINs in the emitted SQL.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :type\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n    t.boolean :published\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n\r\n  scope :with_comments, -> { joins(:comments).where(comments: { published: true }) }\r\nend\r\n\r\nclass CustomPost < Post\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_merge_base_case\r\n    posts_with_comments1 = CustomPost.with_comments\r\n    posts_with_comments2 = CustomPost.with_comments\r\n\r\n    assert_equal [:comments], posts_with_comments1.joins_values\r\n    assert_equal [:comments], posts_with_comments2.joins_values\r\n\r\n    combined_scope = posts_with_comments1.merge(posts_with_comments2)\r\n\r\n    puts combined_scope.to_sql\r\n    assert_equal [:comments], combined_scope.joins_values\r\n  end\r\n\r\n  def test_merge_sti_case\r\n    posts_with_comments = Post.with_comments\r\n    custom_posts_with_comments = CustomPost.with_comments\r\n\r\n    assert_equal [:comments], posts_with_comments.joins_values\r\n    assert_equal [:comments], custom_posts_with_comments.joins_values\r\n\r\n    combined_scope = posts_with_comments.merge(custom_posts_with_comments)\r\n\r\n    puts combined_scope.to_sql\r\n    # FAILS! two joins are generated\r\n    assert_equal [:comments], combined_scope.joins_values\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nA query with a single join to the foreign table is produced\r\ne.g.\r\n```sql\r\nSELECT\r\n  \"posts\".*\r\nFROM\r\n  \"posts\"\r\n  INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\"\r\nWHERE\r\n  \"posts\".\"type\" = 'CustomPost'\r\n  AND \"comments\".\"published\" = 1\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nA query with two redundant joins to the foreign table is produced\r\n```sql\r\nSELECT\r\n  \"posts\".*\r\nFROM\r\n  \"posts\"\r\n  INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\"\r\n  INNER JOIN \"comments\" \"comments_posts\" ON \"comments_posts\".\"post_id\" = \"posts\".\"id\"\r\nWHERE\r\n  \"posts\".\"type\" = 'CustomPost'\r\n  AND \"comments\".\"published\" = 1\r\n```\r\nThis duplicated join is not referenced by the rest of the query in any way\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.1.0\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50811",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50811/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50811/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50811/events",
        "html_url": "https://github.com/rails/rails/pull/50811",
        "id": 2090495786,
        "node_id": "PR_kwDNIULOZItj4w",
        "number": 50811,
        "title": "Add multiple databases AR bug template [ci skip]",
        "user": {
            "login": "HeyNonster",
            "id": 47484308,
            "node_id": "MDQ6VXNlcjQ3NDg0MzA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47484308?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HeyNonster",
            "html_url": "https://github.com/HeyNonster",
            "followers_url": "https://api.github.com/users/HeyNonster/followers",
            "following_url": "https://api.github.com/users/HeyNonster/following{/other_user}",
            "gists_url": "https://api.github.com/users/HeyNonster/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HeyNonster/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HeyNonster/subscriptions",
            "organizations_url": "https://api.github.com/users/HeyNonster/orgs",
            "repos_url": "https://api.github.com/users/HeyNonster/repos",
            "events_url": "https://api.github.com/users/HeyNonster/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HeyNonster/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T12:54:28Z",
        "updated_at": "2024-01-19T12:58:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50811",
            "html_url": "https://github.com/rails/rails/pull/50811",
            "diff_url": "https://github.com/rails/rails/pull/50811.diff",
            "patch_url": "https://github.com/rails/rails/pull/50811.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because there are a few PRs we'd like to open that relate to the multiple database code in Rails but there was no existing template for a multiple database setup. \ud83d\ude42 \r\n\r\n### Detail\r\n\r\nThis commit adds a new bug report template that's based off of the existing [Active Record bug report\r\ntemplate](https://github.com/rails/rails/blob/main/guides/bug_report_templates/active_record.rb) but creates a multiple database setup.\r\n\r\nThe template creates an `UnshardedModel` abstract `ActiveRecord` model that connects to a single database (with a replica configured) and a `ShardedModel` abstract `ActiveRecord` model that has two shards configured, each with their own replica.\r\n\r\nEach sqlite3 in-memory database is separate because [opening multiple database connections each with the filename \":memory:\" will create independent in-memory databases](https://www.sqlite.org/inmemorydb.html).\r\n\r\nNote, that while replica databases are configured, sqlite3 does not support database replication and therefore records written to the writer databases will not auto-populate on the replica/reader databases. The replica configurations are included to allow for testing role switching, not for validating replication itself.\r\n\r\n### Additional information\r\n\r\nYou can test that the template works by running:\r\n\r\n `ruby guides/bug_report_templates/active_record_multiple_databases.rb` \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50807",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50807/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50807/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50807/events",
        "html_url": "https://github.com/rails/rails/issues/50807",
        "id": 2090245533,
        "node_id": "I_kwDNIULOfJadnQ",
        "number": 50807,
        "title": "Undocumented - validations enabled by autosave",
        "user": {
            "login": "semaperepelitsa",
            "id": 347921,
            "node_id": "MDQ6VXNlcjM0NzkyMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/347921?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semaperepelitsa",
            "html_url": "https://github.com/semaperepelitsa",
            "followers_url": "https://api.github.com/users/semaperepelitsa/followers",
            "following_url": "https://api.github.com/users/semaperepelitsa/following{/other_user}",
            "gists_url": "https://api.github.com/users/semaperepelitsa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semaperepelitsa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semaperepelitsa/subscriptions",
            "organizations_url": "https://api.github.com/users/semaperepelitsa/orgs",
            "repos_url": "https://api.github.com/users/semaperepelitsa/repos",
            "events_url": "https://api.github.com/users/semaperepelitsa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semaperepelitsa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T10:47:52Z",
        "updated_at": "2024-01-20T17:25:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Validations are enabled by default when autosave is true:\r\n\r\n    belongs_to :foo, autosave: true\r\n    has_one :foo, autosave: true\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/reflection.rb#L653-L658\r\n\r\nHowever, this is not documented in `has_one` or `belongs_to`:\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/associations.rb#L1660-L1669\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/associations.rb#L1830-L1840",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50807/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50793",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50793/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50793/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50793/events",
        "html_url": "https://github.com/rails/rails/pull/50793",
        "id": 2088694143,
        "node_id": "PR_kwDNIULOZHJaNQ",
        "number": 50793,
        "title": "PoC: Add an option to disable connection checkout caching",
        "user": {
            "login": "byroot",
            "id": 44640,
            "node_id": "MDQ6VXNlcjQ0NjQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/byroot",
            "html_url": "https://github.com/byroot",
            "followers_url": "https://api.github.com/users/byroot/followers",
            "following_url": "https://api.github.com/users/byroot/following{/other_user}",
            "gists_url": "https://api.github.com/users/byroot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/byroot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/byroot/subscriptions",
            "organizations_url": "https://api.github.com/users/byroot/orgs",
            "repos_url": "https://api.github.com/users/byroot/repos",
            "events_url": "https://api.github.com/users/byroot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/byroot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-18T16:54:17Z",
        "updated_at": "2024-01-19T22:11:55Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50793",
            "html_url": "https://github.com/rails/rails/pull/50793",
            "diff_url": "https://github.com/rails/rails/pull/50793.diff",
            "patch_url": "https://github.com/rails/rails/pull/50793.patch",
            "merged_at": null
        },
        "body": "### Context\r\n\r\nIn part for performance and simplicity reasons, and in part because of its historical lack of threading support, Active Record rely quite heavily on `ActiveRecord::Base.connection` checking out and holding a connection inside a thread of fiber local variable.\r\n\r\nConcretly, every request or job lazily checkout connections when it needs to perform a database operations, and then holds onto it until the request or job completes, at which point the `Executor` hook automatically check it back in the pool.\r\n\r\nFor the overwhelming majority of Rails application, which don't do enough IOs to benefit from more than a handful of threads, it's a perfectly adequate solution, as it pretty much remove connection management as a concern.\r\n\r\nHowever for applications that spent most of their time on IOs others than the database (e.g. 3rd party APIs), and would benefit from much higher levels of concurrency, this strategy is problematic because it requires about as many database connections as there is threads or fibers, even though most connections are idle but can't be used because they checked out of the pool and held by another thead or fiber.\r\n\r\n### Goal\r\n\r\nI believe the current model is still preferable for the vast majority of Rails users, and changing the way `ActiveRecord::Base.connection` behaves would break a ton of code anyway. So I believe it should remain the default.\r\n\r\nHowever I think we could support an alternative mode, in which `ActiveRecord::Base.connection` doesn't hold onto the connection until the end of the request cycle, but instead immediately check it back in, allowing it to be re-used immediately.\r\n\r\n### Implementation\r\n\r\nFirst, nothing changes unless you disable `ActiveRecord.cache_connection_checkout`.\r\n\r\nThen, since a lot of code in Rails itself, in third party libraries, and in private Rails applications do rely on `Model.connection.something()`, we must make it work without caching the connection.\r\n\r\nTo solve this, when caching is disabled, `Model.connection` returns a proxy object, that delegates the methods it receive to a freshly checked out connection, and then check it back in. See `LazyConnectionProxy` in `connection_pool.rb` for the details.\r\n\r\nThat is the key to permitting this feature while retaining backward compatibility. It's not perfect, as code might assume that subsequent calls to `Model.connection` will return the same connection instance, but in most case it's not necessary.\r\n\r\nAlso, while the proxy holds the connection, it caches in on the thread or fiber, so subsequent calls to `Model.connection` will return the same connection until it's checked back in. This solves most of the statefulness issues, like opening a transaction etc, as long as the APIs are blocked based.\r\n\r\n### Status\r\n\r\nThis is a proof of concept, it's nowhere near ready to merge, it's mostly to explore whether it's doable with some work, or just not possible.\r\n\r\nMost of the Active Record test suite passes against Sqlite3, except for 3 tests that do disconnect and reconnect. In general all the tests had to be opted out of the feature, I still need to dig into why exactly.\r\n\r\nI also had to disable the feature for a few test suites that rely too much on the caching, and would need a bit of refactoring to pass without, but at first glance it doesn't look like a fundamental incompatibility.\r\n\r\n### Concerns\r\n\r\nThere is a number of Active Record methods that currently cause more than one checkout/checkin cycle and would benefit from a strategically placed `with_connection do` call to optimize that. But that is mostly a performance concern, not a fundamental incompatibility.\r\n\r\nOne more major concern is the query cache. As it stand it's pretty much useless when checkout caching is disabled, because when we check the connection back in, we have to clear the cache, so it's pretty much always empty. To make it usable again, we need a substantial refactoring. At first glance it looks possible, just not trivial.\r\n\r\n### Conclusion\r\n\r\nI'm a bit on the fence about this. I think we can make it work, but I already spent most of one day on just the proof of concept, and would need substantially more work to iron out all the issues.\r\n\r\nThe actual code changes needed in Active Record itself are relatively small, it's really all the test suite and 3rd party code that would need to be updated to properly work with this option that is the big can of worm I'm worried about.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50793/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50792",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50792/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50792/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50792/events",
        "html_url": "https://github.com/rails/rails/issues/50792",
        "id": 2088620752,
        "node_id": "I_kwDNIULOfH3S0A",
        "number": 50792,
        "title": "`app:update` from Rails 7.1.2 to 7.1.3 creates `new_framework_defaults_7_1.rb`",
        "user": {
            "login": "GitToTheHub",
            "id": 13721821,
            "node_id": "MDQ6VXNlcjEzNzIxODIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13721821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GitToTheHub",
            "html_url": "https://github.com/GitToTheHub",
            "followers_url": "https://api.github.com/users/GitToTheHub/followers",
            "following_url": "https://api.github.com/users/GitToTheHub/following{/other_user}",
            "gists_url": "https://api.github.com/users/GitToTheHub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GitToTheHub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GitToTheHub/subscriptions",
            "organizations_url": "https://api.github.com/users/GitToTheHub/orgs",
            "repos_url": "https://api.github.com/users/GitToTheHub/repos",
            "events_url": "https://api.github.com/users/GitToTheHub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GitToTheHub/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-18T16:15:11Z",
        "updated_at": "2024-01-19T09:40:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI made an update from Rails 7.1.2 to 7.1.3 by changing the rails version number to 7.1.3 in the gemfile and running `bundle update`. After that i ran `rails app:update` which produced the file `config/initializers/new_framework_defaults_7_1.rb`. I already have `config.load_defaults 7.1` in my `config/application.rb`, so I think, this file shouldn't be generated?\r\n\r\n### Expected behavior\r\nThe file `config/initializers/new_framework_defaults_7_1.rb` should not be created, if `config.load_defaults 7.1` is already present in `config/application.rb`.\r\n\r\n### Actual behavior\r\nThe file `config/initializers/new_framework_defaults_7_1.rb` is created after  `rails app:update`, despite `config.load_defaults 7.1` is already present in `config/application.rb`.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x64-mingw-ucrt]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50785",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50785/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50785/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50785/events",
        "html_url": "https://github.com/rails/rails/pull/50785",
        "id": 2087298785,
        "node_id": "PR_kwDNIULOZF9HWA",
        "number": 50785,
        "title": "Add note about `params` hash in Action Controller Overview [ci skip] ",
        "user": {
            "login": "JunichiIto",
            "id": 1148320,
            "node_id": "MDQ6VXNlcjExNDgzMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1148320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunichiIto",
            "html_url": "https://github.com/JunichiIto",
            "followers_url": "https://api.github.com/users/JunichiIto/followers",
            "following_url": "https://api.github.com/users/JunichiIto/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunichiIto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunichiIto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunichiIto/subscriptions",
            "organizations_url": "https://api.github.com/users/JunichiIto/orgs",
            "repos_url": "https://api.github.com/users/JunichiIto/repos",
            "events_url": "https://api.github.com/users/JunichiIto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunichiIto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-18T01:26:00Z",
        "updated_at": "2024-01-18T17:22:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50785",
            "html_url": "https://github.com/rails/rails/pull/50785",
            "diff_url": "https://github.com/rails/rails/pull/50785.diff",
            "patch_url": "https://github.com/rails/rails/pull/50785.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nNewbies tend to misunderstand `params` hash is a plain old Hash. So I added a note that `params` hash is ActionController::Parameters.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes \"4 Parameters\" in Action Controller Overview.\r\n\r\n![Screenshot 2024-01-18 at 10 31 55](https://github.com/rails/rails/assets/1148320/de0dc860-35d1-4d3b-b209-ab4abbac5a17)\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50785/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50785/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50780",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50780/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50780/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50780/events",
        "html_url": "https://github.com/rails/rails/pull/50780",
        "id": 2086045509,
        "node_id": "PR_kwDNIULOZE41OQ",
        "number": 50780,
        "title": "Preserve `--asset-pipeline propshaft` when running `app:update`",
        "user": {
            "login": "zachasme",
            "id": 986290,
            "node_id": "MDQ6VXNlcjk4NjI5MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/986290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zachasme",
            "html_url": "https://github.com/zachasme",
            "followers_url": "https://api.github.com/users/zachasme/followers",
            "following_url": "https://api.github.com/users/zachasme/following{/other_user}",
            "gists_url": "https://api.github.com/users/zachasme/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zachasme/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zachasme/subscriptions",
            "organizations_url": "https://api.github.com/users/zachasme/orgs",
            "repos_url": "https://api.github.com/users/zachasme/repos",
            "events_url": "https://api.github.com/users/zachasme/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zachasme/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-17T12:02:43Z",
        "updated_at": "2024-01-28T20:30:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50780",
            "html_url": "https://github.com/rails/rails/pull/50780",
            "diff_url": "https://github.com/rails/rails/pull/50780.diff",
            "patch_url": "https://github.com/rails/rails/pull/50780.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because `skip_sprockets?` wasn't being preserved when running `app:update` in a project using `propshaft`. Helpful when #50444 lands.\r\n\r\n### Detail\r\n\r\nThis Pull Request sets `options[:asset_pipeline]` in `AppUpdater` based on whether Sprockets/Propshaft Railtie is defined.\r\n\r\nWithout this change, `app:update` will suggest injecting sprocket configuration in a propshaft project.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50780/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50772",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50772/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50772/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50772/events",
        "html_url": "https://github.com/rails/rails/issues/50772",
        "id": 2084942985,
        "node_id": "I_kwDNIULOfEW0iQ",
        "number": 50772,
        "title": "Tests can't run without yarn",
        "user": {
            "login": "arusa",
            "id": 623008,
            "node_id": "MDQ6VXNlcjYyMzAwOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/623008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arusa",
            "html_url": "https://github.com/arusa",
            "followers_url": "https://api.github.com/users/arusa/followers",
            "following_url": "https://api.github.com/users/arusa/following{/other_user}",
            "gists_url": "https://api.github.com/users/arusa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arusa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arusa/subscriptions",
            "organizations_url": "https://api.github.com/users/arusa/orgs",
            "repos_url": "https://api.github.com/users/arusa/repos",
            "events_url": "https://api.github.com/users/arusa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arusa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-16T21:11:58Z",
        "updated_at": "2024-01-29T19:27:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n1. Create a new rails app that uses yarn\r\n2. `docker build -t testimage:1 .`\r\n3. `docker run -it testimage:1 /bin/bash`\r\n4. `bin/rails test`\r\n\r\n### Expected behavior\r\n\r\nAs the image already contains all precompiled assets I would expect the tests to be able to run successfully even without precompiling first.\r\n\r\n### Actual behavior\r\n\r\n`bin/rails test` now always runs `test:prepare`, which tries to compile the assets and therefore crashes, because the default Dockerfile doesn't keep yarn in the image.\r\n\r\nI want an option to skip running `test:prepare` when running tests.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.1.4",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50772/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50768",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50768/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50768/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50768/events",
        "html_url": "https://github.com/rails/rails/issues/50768",
        "id": 2084328879,
        "node_id": "I_kwDNIULOfDxVrw",
        "number": 50768,
        "title": "The `counter_cache_column?` method is depending of initialisation order.",
        "user": {
            "login": "BuonOmo",
            "id": 11378424,
            "node_id": "MDQ6VXNlcjExMzc4NDI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11378424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BuonOmo",
            "html_url": "https://github.com/BuonOmo",
            "followers_url": "https://api.github.com/users/BuonOmo/followers",
            "following_url": "https://api.github.com/users/BuonOmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/BuonOmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BuonOmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BuonOmo/subscriptions",
            "organizations_url": "https://api.github.com/users/BuonOmo/orgs",
            "repos_url": "https://api.github.com/users/BuonOmo/repos",
            "events_url": "https://api.github.com/users/BuonOmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BuonOmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-16T15:54:58Z",
        "updated_at": "2024-01-20T17:21:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :people, force: true do |t|\r\n    t.integer :cars_count, default: 0\r\n  end\r\n\r\n  create_table :cars, force: true do |t|\r\n    t.belongs_to :person\r\n  end\r\nend\r\n\r\nclass Car < ActiveRecord::Base\r\n  belongs_to :person, counter_cache: true\r\nend\r\n\r\n# If the `Person` class was defined before, the test below would work\r\nclass Person < ActiveRecord::Base\r\n  has_many :cars\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_counter_cache_column?\r\n    assert Person.counter_cache_column?(\"cars_count\")\r\n    assert_not Car.counter_cache_column?(\"cars_count\")\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nthe `Person` class should identify clearly `cars_count` as a counter cache column\r\n\r\n### Actual behavior\r\n\r\nSince `Person` is initialized afterwards, when running `belong_to`, the `cars_count` column is not added to its counter_cache\r\n\r\n### System configuration\r\n**Rails version**: found in `7.1.2`, present in edge as well\r\n\r\n**Ruby version**: 3.2.1\r\n\r\n### Notes\r\n\r\nIn the actual ActiveRecord test suite, this test could fall if in the future a file requiring first `models/car` is loaded before the `counter_cache_test` file.\r\n\r\nAlso I'd be so glad to work on the solution. It seems to me that the issue is that [this expression](https://github.com/rails/rails/blob/0656787be644d7d5550e82450153403853c73014/activerecord/lib/active_record/associations/builder/belongs_to.rb#L39C5-L39C5) can return `nil`. I'm just not sure how it should be solved (by raising, autoloading, warning, ...)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50768/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50763",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50763/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50763/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50763/events",
        "html_url": "https://github.com/rails/rails/pull/50763",
        "id": 2082801297,
        "node_id": "PR_kwDNIULOZCHHNg",
        "number": 50763,
        "title": "Allow custom domain extractor class on ActionDispatch::Http::URL",
        "user": {
            "login": "rainerborene",
            "id": 101501,
            "node_id": "MDQ6VXNlcjEwMTUwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/101501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainerborene",
            "html_url": "https://github.com/rainerborene",
            "followers_url": "https://api.github.com/users/rainerborene/followers",
            "following_url": "https://api.github.com/users/rainerborene/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainerborene/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainerborene/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainerborene/subscriptions",
            "organizations_url": "https://api.github.com/users/rainerborene/orgs",
            "repos_url": "https://api.github.com/users/rainerborene/repos",
            "events_url": "https://api.github.com/users/rainerborene/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainerborene/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-15T23:32:04Z",
        "updated_at": "2024-01-18T20:47:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50763",
            "html_url": "https://github.com/rails/rails/pull/50763",
            "diff_url": "https://github.com/rails/rails/pull/50763.diff",
            "patch_url": "https://github.com/rails/rails/pull/50763.patch",
            "merged_at": null
        },
        "body": "In these last years we have been using a monkey patch at our company that smartly detects domain and subdomains according to the [Public Suffix database](https://publicsuffix.org/). There are a few gems in our ecosystems like [public_suffix](https://github.com/weppos/publicsuffix-ruby) and [mini_suffix](https://github.com/discourse/mini_suffix) that does exactly that. But Rails uses an older and primitive method that splits the domain tld using `config.action_dispatch.tld_length` option. This pull request changes that by allowing developers to specify a custom domain extractor class.\r\n\r\nThis is really useful for any SaaS company that offers custom domain and subdomains.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50763/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50761",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50761/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50761/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50761/events",
        "html_url": "https://github.com/rails/rails/pull/50761",
        "id": 2082689851,
        "node_id": "PR_kwDNIULOZCBEaQ",
        "number": 50761,
        "title": "Improve documentation of ActiveRecord::Core.configurations",
        "user": {
            "login": "p8",
            "id": 28561,
            "node_id": "MDQ6VXNlcjI4NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p8",
            "html_url": "https://github.com/p8",
            "followers_url": "https://api.github.com/users/p8/followers",
            "following_url": "https://api.github.com/users/p8/following{/other_user}",
            "gists_url": "https://api.github.com/users/p8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/p8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/p8/subscriptions",
            "organizations_url": "https://api.github.com/users/p8/orgs",
            "repos_url": "https://api.github.com/users/p8/repos",
            "events_url": "https://api.github.com/users/p8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/p8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-15T21:18:15Z",
        "updated_at": "2024-01-16T12:15:00Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50761",
            "html_url": "https://github.com/rails/rails/pull/50761",
            "diff_url": "https://github.com/rails/rails/pull/50761.diff",
            "patch_url": "https://github.com/rails/rails/pull/50761.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThe documenation of `ActiveRecord::Core.configurations=` [reads](https://edgeapi.rubyonrails.org/classes/ActiveRecord/Core.html#method-c-configurations-3D) like the documentation for the getter instead of the setter.\r\nIt should not describe what is returned, but what arguments are expected.\r\n\r\nThis changes moves the documentation of the setter to the getter and adds a new comment to the setter.\r\n\r\nThis commit has 2 separate commits to make sure the diffs only apply to documentation and not the code.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50761/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50759",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50759/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50759/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50759/events",
        "html_url": "https://github.com/rails/rails/issues/50759",
        "id": 2082675602,
        "node_id": "I_kwDNIULOfCMbkg",
        "number": 50759,
        "title": "Migrate Rails API doc to use Markdown instead of RDoc format",
        "user": {
            "login": "rafaelfranca",
            "id": 47848,
            "node_id": "MDQ6VXNlcjQ3ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rafaelfranca",
            "html_url": "https://github.com/rafaelfranca",
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/87",
            "html_url": "https://github.com/rails/rails/milestone/87",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/87/labels",
            "id": 10350173,
            "node_id": "MI_kwDNIULOAJ3uXQ",
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "node_id": "MDQ6VXNlcjI3NDE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2741?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dhh",
                "html_url": "https://github.com/dhh",
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "gists_url": "https://api.github.com/users/dhh/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "events_url": "https://api.github.com/users/dhh/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 16,
            "closed_issues": 9,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-01-15T21:02:57Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-15T21:02:56Z",
        "updated_at": "2024-01-15T21:02:57Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "### NOTE: We aren't going to accept any PR doing this migration\r\n\r\nFrom time to time, we have to remember that while documenting some method on Rails, using `+foo+` to denote a method name or argument sometimes need to change to be `<tt>foo</tt>` in order to be documented. We also sometimes receive PRs with people accidentally introducing backticks that doesn't have any effect in the documentation.\r\n\r\nOur guides also uses Markdown syntax, so contributors need to know they need to change syntax when writting documentation.\r\n\r\nText editors, like VScode don't know how to highlight RDoc code so often see Rails documentation formatted like this when you hover over a class\r\n\r\n<img width=\"802\" alt=\"Screenshot 2024-01-15 at 4 01 03\u202fPM\" src=\"https://github.com/rails/rails/assets/47848/2e31157d-dd86-487d-83d6-c34e4c013151\">\r\n<img width=\"810\" alt=\"Screenshot 2024-01-15 at 4 02 00\u202fPM\" src=\"https://github.com/rails/rails/assets/47848/435e899b-8cfc-4bf4-9b8c-dfd7383fd867\">\r\n\r\nNowadays, RDoc supports Markdown as syntax. So we can avoid all those problems migrating all our API documentation to use Markdown.\r\n\r\n### NOTE: We aren't going to accept any PR doing this migration",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50759/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 6,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50759/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50755",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50755/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50755/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50755/events",
        "html_url": "https://github.com/rails/rails/issues/50755",
        "id": 2081488829,
        "node_id": "I_kwDNIULOfBD_vQ",
        "number": 50755,
        "title": "Action Mailbox mistakes attachment as body if no body exists",
        "user": {
            "login": "HashNotAdam",
            "id": 902714,
            "node_id": "MDQ6VXNlcjkwMjcxNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/902714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashNotAdam",
            "html_url": "https://github.com/HashNotAdam",
            "followers_url": "https://api.github.com/users/HashNotAdam/followers",
            "following_url": "https://api.github.com/users/HashNotAdam/following{/other_user}",
            "gists_url": "https://api.github.com/users/HashNotAdam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HashNotAdam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HashNotAdam/subscriptions",
            "organizations_url": "https://api.github.com/users/HashNotAdam/orgs",
            "repos_url": "https://api.github.com/users/HashNotAdam/repos",
            "events_url": "https://api.github.com/users/HashNotAdam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HashNotAdam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1174770998,
                "node_id": "MDU6TGFiZWwxMTc0NzcwOTk4",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailbox",
                "name": "actionmailbox",
                "color": "f4a6cb",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-15T08:23:19Z",
        "updated_at": "2024-01-17T18:28:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have set up a mailbox to process DMARC reports. This has been working fine in most cases, but it seems that sometimes Google doesn't include body text in the email\u2014only a zipped XML file as an attachment.\r\n\r\nWhen this happens, Action Mailbox decodes the Base64 encoding of the attachment and assigns the string representation of the binary data to the body of the message without adding the file as an attachment. I have noticed that the email also isn't recognised as being multipart.\r\n\r\n### Steps to reproduce\r\n\r\nI've created [a gist which includes the unedited email source](https://gist.github.com/HashNotAdam/f5d08e370e70e9e39105fa765563c5b3) as copied from the EML file stored by Active Storage\r\n\r\n### Expected behavior\r\nThe body of the message should include the Base64 encoding of the attachment and there should be 1 attachment representing a ZIP file\r\n\r\n### Actual behavior\r\nCalling `body.to_s` on the underlying `Mail::Message` will return a string representation of the binary data which can be unzipped to return the XML. If the EML file were to be opened in an email client, this would be presented as an attachment\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50755/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50754",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50754/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50754/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50754/events",
        "html_url": "https://github.com/rails/rails/pull/50754",
        "id": 2081074654,
        "node_id": "PR_kwDNIULOZAp6FQ",
        "number": 50754,
        "title": "Allow named variants to evaluate dynamic transformation options",
        "user": {
            "login": "xjunior",
            "id": 8156,
            "node_id": "MDQ6VXNlcjgxNTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xjunior",
            "html_url": "https://github.com/xjunior",
            "followers_url": "https://api.github.com/users/xjunior/followers",
            "following_url": "https://api.github.com/users/xjunior/following{/other_user}",
            "gists_url": "https://api.github.com/users/xjunior/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xjunior/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xjunior/subscriptions",
            "organizations_url": "https://api.github.com/users/xjunior/orgs",
            "repos_url": "https://api.github.com/users/xjunior/repos",
            "events_url": "https://api.github.com/users/xjunior/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xjunior/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-15T01:18:24Z",
        "updated_at": "2024-01-18T00:07:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50754",
            "html_url": "https://github.com/rails/rails/pull/50754",
            "diff_url": "https://github.com/rails/rails/pull/50754.diff",
            "patch_url": "https://github.com/rails/rails/pull/50754.patch",
            "merged_at": null
        },
        "body": "<!--\nThanks for contributing to Rails!\n\nPlease do not make *Draft* pull requests, as they still send\nnotifications to everyone watching the Rails repo.\n\nCreate a pull request when it is ready for review and feedback\nfrom the Rails team :).\n\nIf your pull request affects documentation or any non-code\nchanges, guidelines for those changes are [available\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\n\nAbout this template\n\nThe following template aims to help contributors write a good description for their pull requests.\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\n\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\n\n### Motivation / Background\n\n<!--\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\n-->\n\nSometimes you want to build a transformation based on the user input, or information persisted in the database (i.e.: add a watermark to a picture, crop based on user input)\n\n### Detail\n\nThis PR allow the transformations to be built based on user input:\n\n```ruby\nclass User < ApplicationRecord\n  has_one_attached :photo do |attachable|\n    attachable.variant :default, crop: :crop_positions\n    attachable.variant :thumb, crop: :crop_positions,\n                               resize_to_limit: [100, 100]\n  end\n\n  def crop_positions\n    [crop_x1, crop_y1, crop_x2, crop_y2]\n  end\nend\n```\n\n### Checklist\n\nBefore submitting the PR make sure the following are checked:\n\n- [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\n- [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\n- [x] Tests are added or updated if you fix a bug or add a feature.\n- [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50754/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50754/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50744",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50744/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50744/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50744/events",
        "html_url": "https://github.com/rails/rails/pull/50744",
        "id": 2080405528,
        "node_id": "PR_kwDNIULOZAH76A",
        "number": 50744,
        "title": "docs: Update FormHelper comments to use `form_with` instead of `form_for` [ci skip]",
        "user": {
            "login": "takatea",
            "id": 39912547,
            "node_id": "MDQ6VXNlcjM5OTEyNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39912547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/takatea",
            "html_url": "https://github.com/takatea",
            "followers_url": "https://api.github.com/users/takatea/followers",
            "following_url": "https://api.github.com/users/takatea/following{/other_user}",
            "gists_url": "https://api.github.com/users/takatea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/takatea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/takatea/subscriptions",
            "organizations_url": "https://api.github.com/users/takatea/orgs",
            "repos_url": "https://api.github.com/users/takatea/repos",
            "events_url": "https://api.github.com/users/takatea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/takatea/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-13T17:32:39Z",
        "updated_at": "2024-01-13T17:32:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50744",
            "html_url": "https://github.com/rails/rails/pull/50744",
            "diff_url": "https://github.com/rails/rails/pull/50744.diff",
            "patch_url": "https://github.com/rails/rails/pull/50744.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because comments in `ActionView::Helpers::FormHelper` refer to the deprecated `form_for` instead of the recommended `form_with`. This could potentially cause confusion for developers consulting the Rails API documentation, such as [Action View Form Builder page](https://api.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html).\r\n\r\n### Detail\r\n\r\nThis Pull Request changes  the comments in `ActionView::Helpers::FormHelper`, replacing instances of `form_for` with `form_with`.\r\n\r\n### Additional information\r\n\r\nThe Rails guide has already documented the usage of `form_with` on the [form_helpers page](https://guides.rubyonrails.org/form_helpers.html).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50744/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50734",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50734/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50734/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50734/events",
        "html_url": "https://github.com/rails/rails/pull/50734",
        "id": 2079487889,
        "node_id": "PR_kwDNIULOY_XCHQ",
        "number": 50734,
        "title": "docs: Adjust composite primary keys documentation [skip ci]",
        "user": {
            "login": "matsales28",
            "id": 54689845,
            "node_id": "MDQ6VXNlcjU0Njg5ODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/54689845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matsales28",
            "html_url": "https://github.com/matsales28",
            "followers_url": "https://api.github.com/users/matsales28/followers",
            "following_url": "https://api.github.com/users/matsales28/following{/other_user}",
            "gists_url": "https://api.github.com/users/matsales28/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matsales28/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matsales28/subscriptions",
            "organizations_url": "https://api.github.com/users/matsales28/orgs",
            "repos_url": "https://api.github.com/users/matsales28/repos",
            "events_url": "https://api.github.com/users/matsales28/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matsales28/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T18:49:57Z",
        "updated_at": "2024-01-17T18:36:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50734",
            "html_url": "https://github.com/rails/rails/pull/50734",
            "diff_url": "https://github.com/rails/rails/pull/50734.diff",
            "patch_url": "https://github.com/rails/rails/pull/50734.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because the documentation for composite primary keys wasn't correct. \r\n\r\n### Detail\r\n\r\nWhile working on `shoulda-matchers` I noticed that the documentation is not correct. We actually need to declare the `query_constraints` option in the `has_many` association using the same attribute name as the ones in the associated object.\r\n\r\n```ruby\r\nclass Author < ApplicationRecord\r\n  self.primary_key = [:first_name, :last_name]\r\n  # This was incorrect as `first_name` and `last_name` don't exist on the `Book` model.\r\n  has_many :books, query_constraints: [:first_name, :last_name] \r\n  \r\n  # Correct way\r\n  has_many :books, query_constraints: [:author_first_name, :author_last_name]\r\nend\r\n\r\nclass Book < ApplicationRecord\r\n  belongs_to :author, query_constraints: [:author_first_name, :author_last_name]\r\nend\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50734/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50731",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50731/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50731/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50731/events",
        "html_url": "https://github.com/rails/rails/pull/50731",
        "id": 2079331695,
        "node_id": "PR_kwDNIULOY_OS5w",
        "number": 50731,
        "title": "Document passing hash as id option on create_table",
        "user": {
            "login": "javierav",
            "id": 99700,
            "node_id": "MDQ6VXNlcjk5NzAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/99700?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/javierav",
            "html_url": "https://github.com/javierav",
            "followers_url": "https://api.github.com/users/javierav/followers",
            "following_url": "https://api.github.com/users/javierav/following{/other_user}",
            "gists_url": "https://api.github.com/users/javierav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/javierav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/javierav/subscriptions",
            "organizations_url": "https://api.github.com/users/javierav/orgs",
            "repos_url": "https://api.github.com/users/javierav/repos",
            "events_url": "https://api.github.com/users/javierav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/javierav/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T17:21:32Z",
        "updated_at": "2024-01-12T17:21:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50731",
            "html_url": "https://github.com/rails/rails/pull/50731",
            "diff_url": "https://github.com/rails/rails/pull/50731.diff",
            "patch_url": "https://github.com/rails/rails/pull/50731.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThe `id` keyword argument passed to [create_table](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_table) method allow to receive a hash with options for column creation but it's not documented.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50731/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50727",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50727/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50727/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50727/events",
        "html_url": "https://github.com/rails/rails/pull/50727",
        "id": 2078984168,
        "node_id": "PR_kwDNIULOY-65Mw",
        "number": 50727,
        "title": "Action View Tests: Use `#with_routing` helper",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T14:36:26Z",
        "updated_at": "2024-01-29T14:25:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50727",
            "html_url": "https://github.com/rails/rails/pull/50727",
            "diff_url": "https://github.com/rails/rails/pull/50727.diff",
            "patch_url": "https://github.com/rails/rails/pull/50727.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFollow-up to [#49819][]\r\n\r\n### Detail\r\n\r\nSince [#49819][] resolves an issue with\r\n`ActionDispatch::IntegrationTest#with_routing` helper support, Action View's `test/abstract_unit.rb` file can rely on routing being reset within the block argument.\r\n\r\nThis means that the `RoutedRackApp` class and `.build_app` method is can be made unnecessary.\r\n\r\n[#49819]: https://github.com/rails/rails/pull/49819\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50727/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50727/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50722",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50722/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50722/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50722/events",
        "html_url": "https://github.com/rails/rails/pull/50722",
        "id": 2078567396,
        "node_id": "PR_kwDNIULOY-j0Ow",
        "number": 50722,
        "title": "Downcase the model name in the system scaffolds",
        "user": {
            "login": "dwightwatson",
            "id": 1100408,
            "node_id": "MDQ6VXNlcjExMDA0MDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1100408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dwightwatson",
            "html_url": "https://github.com/dwightwatson",
            "followers_url": "https://api.github.com/users/dwightwatson/followers",
            "following_url": "https://api.github.com/users/dwightwatson/following{/other_user}",
            "gists_url": "https://api.github.com/users/dwightwatson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dwightwatson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dwightwatson/subscriptions",
            "organizations_url": "https://api.github.com/users/dwightwatson/orgs",
            "repos_url": "https://api.github.com/users/dwightwatson/repos",
            "events_url": "https://api.github.com/users/dwightwatson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dwightwatson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-12T10:51:23Z",
        "updated_at": "2024-01-15T02:43:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50722",
            "html_url": "https://github.com/rails/rails/pull/50722",
            "diff_url": "https://github.com/rails/rails/pull/50722.diff",
            "patch_url": "https://github.com/rails/rails/pull/50722.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nI noticed there is an inconsistency in the system test scaffold where the model name is sometimes capitalised. This fixes the two instances where the model name is humanised.\r\n\r\n```rb\r\ntest \"should create user\"\r\ntest \"should update User\"\r\ntest \"should destroy User\"\r\n```\r\n\r\nConsidering all the other scaffolds use lowercase text I think it's right these two are downcased in the same way.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50722/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50722/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50721",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50721/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50721/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50721/events",
        "html_url": "https://github.com/rails/rails/pull/50721",
        "id": 2078388014,
        "node_id": "PR_kwDNIULOY-aIsQ",
        "number": 50721,
        "title": "Pool disabled query cache handling",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-12T09:06:56Z",
        "updated_at": "2024-01-30T07:46:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50721",
            "html_url": "https://github.com/rails/rails/pull/50721",
            "diff_url": "https://github.com/rails/rails/pull/50721.diff",
            "patch_url": "https://github.com/rails/rails/pull/50721.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFor [Solid Cache](https://github.com/rails/solid_cache), we want to be able to read and write from the cache database without using the query cache. \r\n\r\nWe also don't want to expire the query cache on other connection pools when we write. Writing to the Rails cache shouldn't invalidate the main query cache.\r\n\r\nThis is an alternative to https://github.com/rails/rails/pull/50695, based on @byroot's [suggestion here](https://github.com/rails/rails/pull/50695#issuecomment-1885312807).\r\n\r\n### Detail\r\n\r\nAfter a database write we clear the query cache on all connection pools. The change here is that we will now only do that if either the connection pool or the connection itself has the query cache enabled.\r\n\r\nThe query cache is [enabled on all connection pools](https://github.com/rails/rails/blob/cff2eb1be11cb729382b3674e3caa2bd198ec55e/activerecord/lib/active_record/query_cache.rb#L28-L42) by the executor hooks, so to take advantage of this we'll need to add another executor hook that disables the query cache on the Solid Cache connection pool (but only when it has a dedicated pool). \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50721/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50717",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50717/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50717/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50717/events",
        "html_url": "https://github.com/rails/rails/pull/50717",
        "id": 2077465816,
        "node_id": "PR_kwDNIULOY9n-Rg",
        "number": 50717,
        "title": "Expand documentation for ActiveRecord::Core #dup and #clone",
        "user": {
            "login": "p8",
            "id": 28561,
            "node_id": "MDQ6VXNlcjI4NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p8",
            "html_url": "https://github.com/p8",
            "followers_url": "https://api.github.com/users/p8/followers",
            "following_url": "https://api.github.com/users/p8/following{/other_user}",
            "gists_url": "https://api.github.com/users/p8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/p8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/p8/subscriptions",
            "organizations_url": "https://api.github.com/users/p8/orgs",
            "repos_url": "https://api.github.com/users/p8/repos",
            "events_url": "https://api.github.com/users/p8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/p8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-11T19:46:53Z",
        "updated_at": "2024-01-17T10:26:04Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50717",
            "html_url": "https://github.com/rails/rails/pull/50717",
            "diff_url": "https://github.com/rails/rails/pull/50717.diff",
            "patch_url": "https://github.com/rails/rails/pull/50717.patch",
            "merged_at": null
        },
        "body": "Splits the examples for `#clone` into separate sections for easier scanability.\r\n\r\nAdds examples to `#dup` to clarify the difference with `#clone`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50717/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50717/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50710",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50710/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50710/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50710/events",
        "html_url": "https://github.com/rails/rails/pull/50710",
        "id": 2077153009,
        "node_id": "PR_kwDNIULOY9Wvpg",
        "number": 50710,
        "title": "Update `ActionDispatch::Routing::Mapper:Scoping#constraints` documentation",
        "user": {
            "login": "stevepolitodesign",
            "id": 5122678,
            "node_id": "MDQ6VXNlcjUxMjI2Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5122678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevepolitodesign",
            "html_url": "https://github.com/stevepolitodesign",
            "followers_url": "https://api.github.com/users/stevepolitodesign/followers",
            "following_url": "https://api.github.com/users/stevepolitodesign/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevepolitodesign/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevepolitodesign/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevepolitodesign/subscriptions",
            "organizations_url": "https://api.github.com/users/stevepolitodesign/orgs",
            "repos_url": "https://api.github.com/users/stevepolitodesign/repos",
            "events_url": "https://api.github.com/users/stevepolitodesign/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevepolitodesign/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-11T16:50:31Z",
        "updated_at": "2024-01-11T16:50:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50710",
            "html_url": "https://github.com/rails/rails/pull/50710",
            "diff_url": "https://github.com/rails/rails/pull/50710.diff",
            "patch_url": "https://github.com/rails/rails/pull/50710.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nThe previous recommendation to place constraints in `lib/constraints` did not work in practice on a default Rails install, as it will raise the following:\r\n\r\n```\r\nuninitialized constant Iphone (NameError)\r\n```\r\n\r\nInstead, recommend placing constraints in `app/constraints` such that they will be eager loaded.\r\n\r\n### Additional information\r\n\r\nAlternatively, we could update the documentation to elaborate that `lib/constraints` would need to be explicitly eager loaded.\r\n\r\n```ruby\r\nconfig.eager_load_paths << Rails.root.join(\"lib/constraints\")\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50710/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50710/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50705",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50705/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50705/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50705/events",
        "html_url": "https://github.com/rails/rails/pull/50705",
        "id": 2076034722,
        "node_id": "PR_kwDNIULOY8YYug",
        "number": 50705,
        "title": "Backport: Define missing attribute methods from `method_missing`",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-11T08:26:24Z",
        "updated_at": "2024-01-11T08:26:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50705",
            "html_url": "https://github.com/rails/rails/pull/50705",
            "diff_url": "https://github.com/rails/rails/pull/50705.diff",
            "patch_url": "https://github.com/rails/rails/pull/50705.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50594\r\n\r\nOpening a PR because the backport is non-trivial, so I want CI coverage. Also @ghiculescu pointed a possible issue in https://github.com/rails/rails/commit/d429bfb3b6fd2794f0d859b68e5dee24578d405f so I'd like to get to the bottom of that before merging the backport.\r\n\r\ncc @rafaelfranca ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50705/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50703",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50703/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50703/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50703/events",
        "html_url": "https://github.com/rails/rails/pull/50703",
        "id": 2075945414,
        "node_id": "PR_kwDNIULOY8ThOg",
        "number": 50703,
        "title": "Add warning for non-existent directories in autoload paths for Zeitwerk",
        "user": {
            "login": "aeroastro",
            "id": 4468155,
            "node_id": "MDQ6VXNlcjQ0NjgxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4468155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aeroastro",
            "html_url": "https://github.com/aeroastro",
            "followers_url": "https://api.github.com/users/aeroastro/followers",
            "following_url": "https://api.github.com/users/aeroastro/following{/other_user}",
            "gists_url": "https://api.github.com/users/aeroastro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aeroastro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aeroastro/subscriptions",
            "organizations_url": "https://api.github.com/users/aeroastro/orgs",
            "repos_url": "https://api.github.com/users/aeroastro/repos",
            "events_url": "https://api.github.com/users/aeroastro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aeroastro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-11T07:28:26Z",
        "updated_at": "2024-01-17T12:05:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50703",
            "html_url": "https://github.com/rails/rails/pull/50703",
            "diff_url": "https://github.com/rails/rails/pull/50703.diff",
            "patch_url": "https://github.com/rails/rails/pull/50703.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I noticed that Rails does not warn the user when they specify a non-existing directory in the `config.autoload_paths` or `config.autoload_once_paths` settings. This can lead to confusion and hard-to-debug errors when the user expects some files to be loaded but they are not.\r\n\r\n### Detail\r\n\r\nThis Pull Request add a warning message when specified paths for `config.autoload_paths` and `config.autoload_once_paths` are not existing directories.\r\nBelow is the example message:\r\n\r\n```\r\nconfig.autoload_paths must be existing directories.\r\n'/wrong/path/to/load' is not an existing directory.\r\n```\r\n\r\n### Additional information\r\n\r\nSince this PR does not change the behavior itself, I believe existing tests cover this PR.\r\n\r\nThe warning message has been inspired by the following code.\r\nhttps://github.com/rails/rails/blob/91968e5a185927b8216b82c860a48b6367285456/railties/lib/rails/application/bootstrap.rb#L23-L30\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50703/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50695",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50695/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50695/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50695/events",
        "html_url": "https://github.com/rails/rails/pull/50695",
        "id": 2074094584,
        "node_id": "PR_kwDNIULOY6t9sA",
        "number": 50695,
        "title": "Ignore the query cache in a block",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-10T10:47:07Z",
        "updated_at": "2024-01-30T04:11:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50695",
            "html_url": "https://github.com/rails/rails/pull/50695",
            "diff_url": "https://github.com/rails/rails/pull/50695.diff",
            "patch_url": "https://github.com/rails/rails/pull/50695.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis PR allow the Query cache to be ignored in a block.\r\n\r\nFor Solid Cache queries we want to be able to completely disable the query cache (see https://github.com/rails/solid_cache/issues/123).\r\n\r\nSolid Cache uses the database as the Rails cache so it gets the automatic query cache behaviour by default. \r\n\r\nWe'd like to avoid this because the local cache already handles caching repeated reads and having Rails cache writes clear the AR query cache is not desirable.\r\n\r\n`uncached` works for disabling reads doesn't disable clearing the cache for writes.\r\n\r\n### Detail\r\n\r\nWe add a `ignore_query_cache` method to the connection. It takes a block and within that block:\r\n- queries will not be cached in the query cache\r\n- queries will not be read from the query cache\r\n- writes will not clear the query cache\r\n- cached/uncached blocks will be ignored\r\n\r\nExample usage:\r\n\r\n```ruby\r\nActiveRecord::Base.connection.ignore_query_cache do\r\n  post = Post.find 1\r\n  post.touch\r\nend\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50695/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50672",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50672/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50672/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50672/events",
        "html_url": "https://github.com/rails/rails/issues/50672",
        "id": 2072396416,
        "node_id": "I_kwDNIULOe4ZCgA",
        "number": 50672,
        "title": "db:schema:load:<name> purges test database",
        "user": {
            "login": "romuloceccon",
            "id": 40032,
            "node_id": "MDQ6VXNlcjQwMDMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/40032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/romuloceccon",
            "html_url": "https://github.com/romuloceccon",
            "followers_url": "https://api.github.com/users/romuloceccon/followers",
            "following_url": "https://api.github.com/users/romuloceccon/following{/other_user}",
            "gists_url": "https://api.github.com/users/romuloceccon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/romuloceccon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/romuloceccon/subscriptions",
            "organizations_url": "https://api.github.com/users/romuloceccon/orgs",
            "repos_url": "https://api.github.com/users/romuloceccon/repos",
            "events_url": "https://api.github.com/users/romuloceccon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/romuloceccon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-09T13:43:19Z",
        "updated_at": "2024-01-10T09:19:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Commit [adb64db43d](https://github.com/rails/rails/commit/adb64db43dba5cad1007ce57e25df67f8b3e91f8#diff-4a42b5efdab725af0936f94b4a84dcf6a8be8738e28ed265e0a3e74f275f5048R491) changed task `db:schema:load:<name>` to invoke `db:test:purge:<name>`.\r\n\r\nBecause of that Rails 7.1 breaks my workflow for initializing a local environment:\r\n\r\n- create database with `db:create`\r\n- run custom SQL to create Postgres extensions, schemas and triggers\r\n- load schema with `db:schema:load:<name>`\r\n\r\nStrangely, `db:schema:load` keeps the old behavior, and I could not find the explanation for the change in the commit message or in related Github issues.\r\n\r\nAlso, it _requires_ a test database to be configured in `database.yml`; otherwise the task fails:\r\n\r\n```\r\n$ RAILS_ENV=development bin/rails db:schema:load:primary\r\nbin/rails aborted!\r\nTypeError: Invalid type for configuration. Expected Symbol, String, or Hash. Got nil (TypeError)\r\n\r\n        raise TypeError, \"Invalid type for configuration. Expected Symbol, String, or Hash. Got #{config.inspect}\"\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nTasks: TOP => db:schema:load:primary => db:test:purge:primary\r\n(See full trace by running task with --trace)\r\n```\r\n\r\nCan someone confirm the change was intentional?\r\n\r\n**Steps to reproduce the failure**\r\n\r\n- `$ rails new rails_bug`\r\n- `$ cd rails_bug`\r\n- use the following `database.yml`:\r\n\r\n```\r\ndevelopment:\r\n  one:\r\n    adapter: sqlite3\r\n    database: storage/development.sqlite3\r\n  two:\r\n    adapter: sqlite3\r\n    database: storage/development_two.sqlite3\r\n    migrations_paths: db/migrate_two\r\n```\r\n- `$ bin/rails db:migrate:one`\r\n- `$ bin/rails db:schema:load:one`\r\n\r\n**Expected behavior**\r\n\r\nNo error.\r\n\r\n**Actual behavior**\r\n\r\nTypeError invoking database task.\r\n\r\n**System configuration**\r\n\r\nRails 7.1.2\r\nRuby 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50666",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50666/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50666/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50666/events",
        "html_url": "https://github.com/rails/rails/issues/50666",
        "id": 2071645014,
        "node_id": "I_kwDNIULOe3rLVg",
        "number": 50666,
        "title": "`rails credentials:edit` lets you pass an unknown editor, without issuing any error report",
        "user": {
            "login": "ArthurPV",
            "id": 42948054,
            "node_id": "MDQ6VXNlcjQyOTQ4MDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/42948054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ArthurPV",
            "html_url": "https://github.com/ArthurPV",
            "followers_url": "https://api.github.com/users/ArthurPV/followers",
            "following_url": "https://api.github.com/users/ArthurPV/following{/other_user}",
            "gists_url": "https://api.github.com/users/ArthurPV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ArthurPV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ArthurPV/subscriptions",
            "organizations_url": "https://api.github.com/users/ArthurPV/orgs",
            "repos_url": "https://api.github.com/users/ArthurPV/repos",
            "events_url": "https://api.github.com/users/ArthurPV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ArthurPV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-09T05:15:43Z",
        "updated_at": "2024-01-09T13:23:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.2\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/object/blank\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_credentials_edit_command\r\n    # test with ed editor\r\n    # assert_equal system(\"VISUAL=ed rails credentials:edit << EOF\\nEOF\"), true\r\n    # test with an unknown editor\r\n    assert_equal system(\"VISUAL=abc rails credentials:edit\"), false\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\n$? = 1, with an error report\r\n\r\n### Actual behavior\r\n\r\noutput:\r\n\r\n```\r\nEditing config/credentials.yml.enc...\r\nFile encrypted and saved.\r\n```\r\n\r\n$? = 0\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.3.0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50666/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50645",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50645/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50645/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50645/events",
        "html_url": "https://github.com/rails/rails/issues/50645",
        "id": 2070625119,
        "node_id": "I_kwDNIULOe2s7Xw",
        "number": 50645,
        "title": "Rails 7.1 Create model with has_many with lambda incorrect default",
        "user": {
            "login": "nikita-railsware",
            "id": 137036598,
            "node_id": "U_kgDOCCsDNg",
            "avatar_url": "https://avatars.githubusercontent.com/u/137036598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikita-railsware",
            "html_url": "https://github.com/nikita-railsware",
            "followers_url": "https://api.github.com/users/nikita-railsware/followers",
            "following_url": "https://api.github.com/users/nikita-railsware/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikita-railsware/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikita-railsware/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikita-railsware/subscriptions",
            "organizations_url": "https://api.github.com/users/nikita-railsware/orgs",
            "repos_url": "https://api.github.com/users/nikita-railsware/repos",
            "events_url": "https://api.github.com/users/nikita-railsware/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikita-railsware/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-08T14:54:30Z",
        "updated_at": "2024-01-24T09:51:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nIn Rails 7.1, when I create new model with lambda in `has_many` association without passing value to the parameter, it puts serialized value of array that passed in `where` in a lambda.\r\nRails 7.0 just put `nil` in this case.\r\n\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.2\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :users, force: true do |t|\r\n  end\r\n\r\n  create_table :post_accesses, force: true do |t|\r\n    t.string :access_type\r\n    t.references :post\r\n    t.references :user\r\n  end\r\nend\r\n\r\nclass PostAccess < ActiveRecord::Base\r\n  ROLES = %w[viewer editor owner]\r\n  STAFF_ROLES = %w[editor owner]\r\n\r\n  belongs_to :user\r\n  belongs_to :post\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :post_accesses\r\n  has_many :staff_post_accesses,\r\n           -> { where(access_type: PostAccess::STAFF_ROLES) },\r\n           class_name: 'PostAccess'\r\n\r\n  has_many :staff_users, through: :staff_post_accesses, class_name: 'User', source: :user\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    user = User.create!\r\n    post = Post.create!(staff_users: [user])\r\n\r\n    assert_equal nil, post.post_accesses.first.access_type\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nIt should put `nil`, or one of the possible value\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nIt put serialized array:\r\n'[\"editor\", \"owner\"]'\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50645/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50645/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50637",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50637/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50637/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50637/events",
        "html_url": "https://github.com/rails/rails/pull/50637",
        "id": 2069551280,
        "node_id": "PR_kwDNIULOY21ZLw",
        "number": 50637,
        "title": "Experiment | [Fix #47809] `load_async` support for collection associations",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-08T03:24:48Z",
        "updated_at": "2024-01-09T03:10:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50637",
            "html_url": "https://github.com/rails/rails/pull/50637",
            "diff_url": "https://github.com/rails/rails/pull/50637.diff",
            "patch_url": "https://github.com/rails/rails/pull/50637.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nMostly an experiment to fix #47809 while trying to avoid a large refactor which [might be the ideal solution](https://github.com/rails/rails/issues/47809#issuecomment-1489832287). This only tackles collection associations.\r\n\r\n### Detail\r\n\r\nTODO\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nTODO\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50637/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50637/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50633",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50633/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50633/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50633/events",
        "html_url": "https://github.com/rails/rails/pull/50633",
        "id": 2069256890,
        "node_id": "PR_kwDNIULOY2laaQ",
        "number": 50633,
        "title": "Make `group`/`regroup` inside `merge` be applied to the merged relation",
        "user": {
            "login": "joaomarcos96",
            "id": 31287923,
            "node_id": "MDQ6VXNlcjMxMjg3OTIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/31287923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joaomarcos96",
            "html_url": "https://github.com/joaomarcos96",
            "followers_url": "https://api.github.com/users/joaomarcos96/followers",
            "following_url": "https://api.github.com/users/joaomarcos96/following{/other_user}",
            "gists_url": "https://api.github.com/users/joaomarcos96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joaomarcos96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joaomarcos96/subscriptions",
            "organizations_url": "https://api.github.com/users/joaomarcos96/orgs",
            "repos_url": "https://api.github.com/users/joaomarcos96/repos",
            "events_url": "https://api.github.com/users/joaomarcos96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joaomarcos96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-07T19:25:39Z",
        "updated_at": "2024-01-17T22:36:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50633",
            "html_url": "https://github.com/rails/rails/pull/50633",
            "diff_url": "https://github.com/rails/rails/pull/50633.diff",
            "patch_url": "https://github.com/rails/rails/pull/50633.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nWhen using `group` inside `merge`, the `group` is applied to the outermost relation instead of the merged relation, which is unexpected. The same is true for `regroup`.\r\n\r\n### Detail\r\n\r\nNow, `group` inside `merge` is applied to the merged relation, as intended. The behavior was changed for `regroup` as well, and documented.\r\n\r\nBefore:\r\n\r\n```rb\r\nProduct.joins(:items).group(:id).merge(Item.group(:title))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"products\".\"title\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id)).regroup(:title)\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"title\"\r\n```\r\n\r\nAfter:\r\n```rb\r\nProduct.joins(:items).group(:id).merge(Item.group(:title))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"items\".\"title\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"items\".\"id\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id)).regroup(:title)\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"title\"\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50633/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50623",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50623/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50623/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50623/events",
        "html_url": "https://github.com/rails/rails/pull/50623",
        "id": 2068829741,
        "node_id": "PR_kwDNIULOY2QLzQ",
        "number": 50623,
        "title": "Pass render options and block to calls to `#render_in`",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-06T20:46:09Z",
        "updated_at": "2024-01-30T03:15:45Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50623",
            "html_url": "https://github.com/rails/rails/pull/50623",
            "diff_url": "https://github.com/rails/rails/pull/50623.diff",
            "patch_url": "https://github.com/rails/rails/pull/50623.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nCloses [#45432][]\r\n\r\nSupport for objects that respond to `#render_in` was introduced in [#36388][] and [#37919][]. Those implementations assume that the instance will all the context it needs to render itself. That assumption doesn't account for call-site arguments like `locals: { ... }` or a block.\r\n\r\n### Detail\r\n\r\nThis commit expands support for rendering with a `:renderable` option to incorporate locals and blocks. For example:\r\n\r\n```ruby\r\nclass Greeting\r\n  def render_in(view_context, **options, &block)\r\n    if block\r\n      view_context.render html: block.call\r\n    else\r\n      view_context.render inline: <<~ERB.strip, **options\r\n        Hello, <%= name %>\r\n      ERB\r\n    end\r\n  end\r\nend\r\n\r\nrender(Greeting.new)                    # => \"Hello, World\"\r\nrender(Greeting.new, name: \"Local\")     # => \"Hello, Local\"\r\nrender(Greeting.new) { \"Hello, Block\" } # => \"Hello, Block\"\r\n```\r\n\r\nSince existing tools depend on the `#render_in(view_context)` signature\r\nwithout options, this commit deprecates that signature in favor of one\r\nthat accepts options and a block.\r\n\r\n[#45432]: https://github.com/rails/rails/pull/45432\r\n[#36388]: https://github.com/rails/rails/pull/36388\r\n[#37919]: https://github.com/rails/rails/pull/37919\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50623/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50610",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50610/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50610/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50610/events",
        "html_url": "https://github.com/rails/rails/pull/50610",
        "id": 2068183148,
        "node_id": "PR_kwDNIULOY1t8TA",
        "number": 50610,
        "title": "Don't fail for uploads with content-type parameters in the ActiveStorage::DiskController",
        "user": {
            "login": "codergeek121",
            "id": 4910785,
            "node_id": "MDQ6VXNlcjQ5MTA3ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4910785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codergeek121",
            "html_url": "https://github.com/codergeek121",
            "followers_url": "https://api.github.com/users/codergeek121/followers",
            "following_url": "https://api.github.com/users/codergeek121/following{/other_user}",
            "gists_url": "https://api.github.com/users/codergeek121/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codergeek121/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codergeek121/subscriptions",
            "organizations_url": "https://api.github.com/users/codergeek121/orgs",
            "repos_url": "https://api.github.com/users/codergeek121/repos",
            "events_url": "https://api.github.com/users/codergeek121/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codergeek121/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-05T23:32:34Z",
        "updated_at": "2024-01-08T20:20:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50610",
            "html_url": "https://github.com/rails/rails/pull/50610",
            "diff_url": "https://github.com/rails/rails/pull/50610.diff",
            "patch_url": "https://github.com/rails/rails/pull/50610.patch",
            "merged_at": null
        },
        "body": "Fixes #50600 by parsing the string content-type before comparing it to the `Mime::Type`. This comparison will ignore the parameters.\r\n\r\n@alexandergitter I added you as co-author for the reproduction test case.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50610/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50610/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50608",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50608/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50608/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50608/events",
        "html_url": "https://github.com/rails/rails/pull/50608",
        "id": 2067907461,
        "node_id": "PR_kwDNIULOY1ewzQ",
        "number": 50608,
        "title": "allow dom_id method to accept an array of records_or_classes",
        "user": {
            "login": "jwilsjustin",
            "id": 820759,
            "node_id": "MDQ6VXNlcjgyMDc1OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/820759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jwilsjustin",
            "html_url": "https://github.com/jwilsjustin",
            "followers_url": "https://api.github.com/users/jwilsjustin/followers",
            "following_url": "https://api.github.com/users/jwilsjustin/following{/other_user}",
            "gists_url": "https://api.github.com/users/jwilsjustin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jwilsjustin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jwilsjustin/subscriptions",
            "organizations_url": "https://api.github.com/users/jwilsjustin/orgs",
            "repos_url": "https://api.github.com/users/jwilsjustin/repos",
            "events_url": "https://api.github.com/users/jwilsjustin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jwilsjustin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-05T19:12:49Z",
        "updated_at": "2024-01-08T14:17:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50608",
            "html_url": "https://github.com/rails/rails/pull/50608",
            "diff_url": "https://github.com/rails/rails/pull/50608.diff",
            "patch_url": "https://github.com/rails/rails/pull/50608.patch",
            "merged_at": null
        },
        "body": "# Context\r\n\r\nSee also: https://github.com/hotwired/turbo-rails/pull/476\r\n\r\n[hotwired/turbo-rails/pull/476](https://github.com/hotwired/turbo-rails/pull/476) removed the ability to pass multiple ids/models to the `turbo_frame_tag` helper method. In that PR it was suggested by @skipkayhil that this ability be passed down to the `dom_id` method (which is a part of rails core) method rather than the `turbo_frame_tag` helper (which is a part of turbo-rails).\r\n\r\nref: https://discuss.rubyonrails.org/t/allow-dom-id-method-to-accept-multiple-ids-models/84408\r\n\r\n# Changes\r\n\r\nIf the first argument of the `dom_id` is an array, this change will loop through each value and form a singular dom ID, then join the parts together. This change will allow turbo frame tags to accept multiple models (similar to the `cache` helper from ActionView).\r\n\r\n```\r\n<%= turbo_frame_tag [customer, field] do %>\r\n  <!-- code -->\r\n<% end %>\r\n```\r\n\r\n***\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50608/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50608/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50606",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50606/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50606/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50606/events",
        "html_url": "https://github.com/rails/rails/pull/50606",
        "id": 2067810728,
        "node_id": "PR_kwDNIULOY1ZYdQ",
        "number": 50606,
        "title": "[Fix #50604] Restore compatibility of Active Record Encryption configs with eager loading mode",
        "user": {
            "login": "maximerety",
            "id": 58582,
            "node_id": "MDQ6VXNlcjU4NTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/58582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maximerety",
            "html_url": "https://github.com/maximerety",
            "followers_url": "https://api.github.com/users/maximerety/followers",
            "following_url": "https://api.github.com/users/maximerety/following{/other_user}",
            "gists_url": "https://api.github.com/users/maximerety/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maximerety/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maximerety/subscriptions",
            "organizations_url": "https://api.github.com/users/maximerety/orgs",
            "repos_url": "https://api.github.com/users/maximerety/repos",
            "events_url": "https://api.github.com/users/maximerety/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maximerety/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-05T18:03:09Z",
        "updated_at": "2024-01-31T12:08:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50606",
            "html_url": "https://github.com/rails/rails/pull/50606",
            "diff_url": "https://github.com/rails/rails/pull/50606.diff",
            "patch_url": "https://github.com/rails/rails/pull/50606.patch",
            "merged_at": null
        },
        "body": "\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes #50604\r\n\r\nThis Pull Request fixes a source of incompatibility between the loading order of Active Record Encryption configs and the loading of AR models in eager loading mode.\r\n\r\n### Detail\r\n\r\nThis Pull Request removes an occurrence of `after_initialize` introduced in https://github.com/rails/rails/pull/48530, which is not fully compatible with the eager loading mode.\r\n\r\nPrevious concerns were raised in [a discussion from the same PR](https://github.com/rails/rails/pull/48530/files#r1237624233).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50606/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50604",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50604/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50604/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50604/events",
        "html_url": "https://github.com/rails/rails/issues/50604",
        "id": 2067789909,
        "node_id": "I_kwDNIULOez_4VQ",
        "number": 50604,
        "title": "Active Record Encryption configs not ready in eager loading mode",
        "user": {
            "login": "maximerety",
            "id": 58582,
            "node_id": "MDQ6VXNlcjU4NTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/58582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maximerety",
            "html_url": "https://github.com/maximerety",
            "followers_url": "https://api.github.com/users/maximerety/followers",
            "following_url": "https://api.github.com/users/maximerety/following{/other_user}",
            "gists_url": "https://api.github.com/users/maximerety/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maximerety/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maximerety/subscriptions",
            "organizations_url": "https://api.github.com/users/maximerety/orgs",
            "repos_url": "https://api.github.com/users/maximerety/repos",
            "events_url": "https://api.github.com/users/maximerety/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maximerety/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-05T17:50:05Z",
        "updated_at": "2024-01-17T12:55:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nThe introduction of `after_initialize` in Active Record Encryption configuration setup in https://github.com/rails/rails/pull/48530 (also see [that discussion in the same PR](https://github.com/rails/rails/pull/48530/files#r1237624233)) is not fully compatible with the eager loading mode: https://github.com/rails/rails/blob/6b446bee63c401364d193920f3426af0bfe75650/activerecord/lib/active_record/railtie.rb#L385\r\n\r\nIn eager loading mode, the models from the application are loaded before the `after_initialize` hook has a chance to run, as visible here (hint: you need to scroll in the code snippet): https://github.com/rails/rails/blob/b0b1eb5a1847c1de5616a55c1d7c78f11eb08cd8/railties/lib/rails/application/finisher.rb#L77-L95\r\n\r\nAs a result, some configurations may not be ready at the time Active Record Encryption's helper `encrypts` needs them during model loading.\r\n\r\nFor example, the following methods are called in order: `encrypts` ->  `encrypt_attribute` -> `scheme_for` -> `global_previous_schemes_for`:\r\n\r\nhttps://github.com/rails/rails/blob/e0a55b038f7f2f50d1467876558be183be6cedaa/activerecord/lib/active_record/encryption/encryptable_record.rb#L78-L82\r\n\r\nIf `ActiveRecord::Encryption.config.previous_schemes` is not defined yet, then the encrypted attribute is not properly configured.\r\n\r\n### Example 1\r\n\r\n#### Steps to reproduce\r\n\r\nIn this example, a previous encryption scheme is provided globally, as described in https://guides.rubyonrails.org/active_record_encryption.html#global-previous-encryption-schemes:\r\n\r\n```ruby\r\n# config/application.rb\r\nconfig.active_record.encryption.previous = [ { key_provider: MyOldKeyProvider.new } ]\r\nconfig.eager_load = true\r\n\r\n# app/models/article.rb\r\nclass Article < ApplicationRecord\r\n  encrypts :title\r\nend\r\n```\r\n\r\n#### Expected behavior\r\n\r\nThe previous encryption scheme should always be taken into account when line `encrypts :title` is reached.\r\n\r\n#### Actual behavior\r\n\r\nWhen lazy loading the application, everything is fine and the `Article` model is lazily loaded after the previous encryption scheme is defined by the `after_initialize` hook and the `:title` attribute can benefit from that previous encryption scheme.\r\n\r\nWhen eager loading the application however, the `Article` model is eager loaded before the previous scheme is defined and that config gets ignored.\r\n\r\n### Example 2\r\n\r\n#### Steps to reproduce\r\n\r\nIn this example, a custom key provider is configured when declaring the attribute, as described in https://guides.rubyonrails.org/active_record_encryption.html#model-specific-key-providers:\r\n\r\n```ruby\r\n# config/application.rb\r\nconfig.eager_load = true\r\n\r\n# app/models/article.rb\r\nclass Article < ApplicationRecord\r\n  encrypts :title, key_provider: CustomKeyProvider.new(ActiveRecord::Encryption.config.primary_key)\r\nend\r\n```\r\n\r\n#### Expected behavior\r\n\r\nThe custom key provider should be able to use the `primary_key` configured  when line `encrypts :title` is reached.\r\n\r\n#### Actual behavior\r\n\r\nWhen lazy loading the application, everything is fine and the `Article` model is lazily loaded after the `primary_key` is defined by the `after_initialize` hook and the `:title` attribute can be set up normally.\r\n\r\nWhen eager loading the application however, the `Article` model is eager loaded before the `primary_key` is defined by the `after_initialize` hook, and the model fails to load with the following exception:\r\n\r\n```\r\nactiverecord-7.1.2/lib/active_record/encryption/config.rb:43:in `block (2 levels) in <class:Config>':\r\n  Missing Active Record encryption credential: active_record_encryption.primary_key (ActiveRecord::Encryption::Errors::Configuration)\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: `7.1.2` / `7.1.3` / `main`\r\n\r\n**Ruby version**: `3.2.2` / `3.3.0`\r\n\r\n### Possible fixes\r\n\r\n1. Get rid of `after_initialize` if not really necessary (see [previous discussions](https://github.com/rails/rails/pull/48530/files#r1237624233))\r\n2. Otherwise, keep `after_initialize` and attempt to patch the eager loading mode (using `config.before_eager_load`?)",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50604/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50600",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50600/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50600/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50600/events",
        "html_url": "https://github.com/rails/rails/issues/50600",
        "id": 2067401862,
        "node_id": "I_kwDNIULOezoMhg",
        "number": 50600,
        "title": "ActiveStorage::DiskController fails for uploads when Content-Type / media type contains a parameter",
        "user": {
            "login": "alexandergitter",
            "id": 816758,
            "node_id": "MDQ6VXNlcjgxNjc1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/816758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexandergitter",
            "html_url": "https://github.com/alexandergitter",
            "followers_url": "https://api.github.com/users/alexandergitter/followers",
            "following_url": "https://api.github.com/users/alexandergitter/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexandergitter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexandergitter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexandergitter/subscriptions",
            "organizations_url": "https://api.github.com/users/alexandergitter/orgs",
            "repos_url": "https://api.github.com/users/alexandergitter/repos",
            "events_url": "https://api.github.com/users/alexandergitter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexandergitter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-01-05T14:01:29Z",
        "updated_at": "2024-01-10T05:24:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`ActiveStorage::DiskController#update` returns a 422 error when the submitted content contains a parameter in its Content-Type / media type, for example `audio/ogg; codecs=opus`.\r\n\r\nThis issue appears to have been introduced in https://github.com/rails/rails/commit/5fb4703471ffb11dab9aa3855daeef9f592f6388\r\n\r\n### Steps to reproduce\r\nHere's a test case that fails in `ActiveStorage::DiskControllerTest`:\r\n\r\n```ruby\r\ntest \"directly uploading blob with content type parameters\" do\r\n  data = \"Something else entirely!\"\r\n  blob = create_blob_before_direct_upload(\r\n    byte_size: data.size, checksum: OpenSSL::Digest::MD5.base64digest(data), content_type: \"audio/ogg; codecs=opus\")\r\n\r\n  put blob.service_url_for_direct_upload, params: data, headers: { \"Content-Type\" => \"audio/ogg; codecs=opus\" }\r\n  assert_response :no_content\r\n  assert_equal data, blob.download\r\nend\r\n```\r\n\r\n(The test passes when the `; codecs=opus` part is omitted.)\r\n\r\n### Expected behavior\r\nThe upload succeeds, since the content type from the uploaded content matches the content type in the direct upload token.\r\n\r\n### Actual behavior\r\nThe request fails with 422 Unprocessable Content.\r\n\r\n### System configuration\r\n**Rails version**: 7.2.0.alpha (1702b6cbfd)\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50598",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50598/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50598/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50598/events",
        "html_url": "https://github.com/rails/rails/pull/50598",
        "id": 2067384052,
        "node_id": "PR_kwDNIULOY1BvYg",
        "number": 50598,
        "title": "Document `upsert`/`upsert_all` `on_duplicate: :skip` option",
        "user": {
            "login": "lucasmazza",
            "id": 80978,
            "node_id": "MDQ6VXNlcjgwOTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/80978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucasmazza",
            "html_url": "https://github.com/lucasmazza",
            "followers_url": "https://api.github.com/users/lucasmazza/followers",
            "following_url": "https://api.github.com/users/lucasmazza/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucasmazza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lucasmazza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucasmazza/subscriptions",
            "organizations_url": "https://api.github.com/users/lucasmazza/orgs",
            "repos_url": "https://api.github.com/users/lucasmazza/repos",
            "events_url": "https://api.github.com/users/lucasmazza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lucasmazza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-05T13:49:07Z",
        "updated_at": "2024-01-09T13:38:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50598",
            "html_url": "https://github.com/rails/rails/pull/50598",
            "diff_url": "https://github.com/rails/rails/pull/50598.diff",
            "patch_url": "https://github.com/rails/rails/pull/50598.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nI've stumbled on this when writing an `upsert` call that must produce a `ON CONFLICT () DO NOTHING` fragment.\r\n\r\nUsing `update_only: []` didn't worked as it does update all columns on the table, but reading `InsertAll` I noticed the use of `:skip` internally that worked for this scenario, but it isn't mentioned on the public docs.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50598/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50598/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50583",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50583/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50583/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50583/events",
        "html_url": "https://github.com/rails/rails/issues/50583",
        "id": 2066163278,
        "node_id": "I_kwDNIULOeycmTg",
        "number": 50583,
        "title": "Active Storage Variant causing Aws::S3::Errors::NoSuchKey error when deleting an attachment",
        "user": {
            "login": "basiszwo",
            "id": 24071,
            "node_id": "MDQ6VXNlcjI0MDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/24071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/basiszwo",
            "html_url": "https://github.com/basiszwo",
            "followers_url": "https://api.github.com/users/basiszwo/followers",
            "following_url": "https://api.github.com/users/basiszwo/following{/other_user}",
            "gists_url": "https://api.github.com/users/basiszwo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/basiszwo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/basiszwo/subscriptions",
            "organizations_url": "https://api.github.com/users/basiszwo/orgs",
            "repos_url": "https://api.github.com/users/basiszwo/repos",
            "events_url": "https://api.github.com/users/basiszwo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/basiszwo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-04T18:44:36Z",
        "updated_at": "2024-01-31T22:09:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am not sure if this is a bug or something is not configured correctly. \r\n\r\n### Steps to reproduce\r\n\r\nUsing Active Storage with a S3-compatible object storage from digital ocean or scaleway configured along the rails guide for active storage.\r\n\r\nActive Storage configuration\r\n\r\n```\r\ndigitalocean:\r\n  service: S3\r\n  access_key_id: <%= ENV.fetch(\"DIGITALOCEAN_S3_ACCESS_KEY_ID\") %>\r\n  secret_access_key: <%= ENV.fetch(\"DIGITALOCEAN_S3_ACCESS_KEY_SECRET\") %>\r\n  bucket: <%= ENV.fetch(\"DIGITALOCEAN_S3_BUCKET_NAME\") %>\r\n  endpoint: <%= ENV.fetch(\"DIGITALOCEAN_S3_ENDPOINT\") %>\r\n```\r\n\r\nenabled with \r\n\r\n```\r\n# config/environments/development.rb\r\nconfig.active_storage.service = :digitalocean\r\n```\r\n\r\nhaving a User model with \r\n\r\n```ruby\r\nhas_one_attached :avatar do |attachable|\r\n  attachable.variant(:thumb, resize_to_fill: [350, 350])\r\nend\r\n```\r\n\r\nAfter uploading a file from the edit form the variant gets created when accessing the show view. \r\n\r\nLogs look like this\r\n\r\n```\r\nActiveStorage::VariantRecord Create (1.8ms)  INSERT INTO \"active_storage_variant_records\" (\"blob_id\", \"variation_digest\") VALUES ($1, $2) RETURNING \"id\"  [[\"blob_id\", 116], [\"variation_digest\", \"cAfAf5iAxm52Ff0Mw7wXY2F9d4A=\"]]\r\nActiveStorage::Blob Load (1.2ms)  SELECT \"active_storage_blobs\".* FROM \"active_storage_blobs\" INNER JOIN \"active_storage_attachments\" ON \"active_storage_blobs\".\"id\" = \"active_storage_attachments\".\"blob_id\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 51], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"name\", \"image\"], [\"LIMIT\", 1]]\r\nActiveStorage::Attachment Load (0.2ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 51], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"name\", \"image\"], [\"LIMIT\", 1]]\r\nActiveStorage::Blob Create (0.3ms)  INSERT INTO \"active_storage_blobs\" (\"key\", \"filename\", \"content_type\", \"metadata\", \"service_name\", \"byte_size\", \"checksum\", \"created_at\") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING \"id\"  [[\"key\", \"1dousqzwcx79wlpkfn0o0f1sjfci\"], [\"filename\", \"sigma-16mm.jpg\"], [\"content_type\", \"image/jpeg\"], [\"metadata\", \"{\\\"identified\\\":true}\"], [\"service_name\", \"digitalocean\"], [\"byte_size\", 52716], [\"checksum\", \"d9vmvbLEGDR2ZLzl7XNgUg==\"], [\"created_at\", \"2024-01-04 17:49:27.381653\"]]\r\nActiveStorage::Attachment Create (0.4ms)  INSERT INTO \"active_storage_attachments\" (\"name\", \"record_type\", \"record_id\", \"blob_id\", \"created_at\") VALUES ($1, $2, $3, $4, $5) RETURNING \"id\"  [[\"name\", \"image\"], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"record_id\", 51], [\"blob_id\", 117], [\"created_at\", \"2024-01-04 17:49:27.382925\"]]\r\nTRANSACTION (0.4ms)  COMMIT\r\nS3 Storage (120.4ms) Uploaded file to key: 1dousqzwcx79wlpkfn0o0f1sjfci (checksum: d9vmvbLEGDR2ZLzl7XNgUg==)\r\n```\r\n\r\nAttachments are being displayed, everything is fine, until deleting an attachment where I get the following exception\r\n\r\n```\r\nDEBUG -- :   TRANSACTION (0.2ms)  BEGIN\r\nDEBUG -- :   ActiveStorage::Attachment Exists? (1.7ms)  SELECT 1 AS one FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"blob_id\" = $1 LIMIT $2  [[\"blob_id\", 119], [\"LIMIT\", 1]]\r\nDEBUG -- :   ActiveStorage::VariantRecord Load (0.5ms)  SELECT \"active_storage_variant_records\".* FROM \"active_storage_variant_records\" WHERE \"active_storage_variant_records\".\"blob_id\" = $1  [[\"blob_id\", 119]]\r\nDEBUG -- :   ActiveStorage::Attachment Load (0.8ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 119], [\"record_type\", \"ActiveStorage::Blob\"], [\"name\", \"preview_image\"], [\"LIMIT\", 1]]\r\nDEBUG -- :   ActiveStorage::Blob Destroy (1.4ms)  DELETE FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = $1  [[\"id\", 119]]\r\nDEBUG -- :   TRANSACTION (6.7ms)  COMMIT\r\n INFO -- :   S3 Storage (100.6ms) Deleted file from key: 5qag8y7y3qqol4wrgo9iapy2z8oy\r\n INFO -- :   S3 Storage (38.1ms) Deleted files by key prefix: variants/5qag8y7y3qqol4wrgo9iapy2z8oy/\r\nERROR -- : Error performing ActiveStorage::PurgeJob (Job ID: 508059d0-a343-4377-ae75-c89195417e61) from Sidekiq(default) in 161.91ms: Aws::S3::Errors::NoSuchKey (Aws::S3::Errors::NoSuchKey):\r\n```\r\n\r\nI see this error twice in my logs. One time for the original and one time for the variant.\r\n\r\nActive Storage uploads the blobs without any prefix. See logs on top. \r\n\r\nAm I doing something wrong? Is my application not configured correctly? What am I missing? Thank you \ud83d\ude4f \r\n\r\n### Expected behavior\r\n\r\nDeleting an attachment should not throw errors\r\n\r\nVariants are being uploaded to a `variants` subfolder \r\n\r\n### Actual behavior\r\n\r\nDeleting an attachment throws an `Aws::S3::Errors::NoSuchKey (Aws::S3::Errors::NoSuchKey)` error as with the used key `variants/5qag8y7y3qqol4wrgo9iapy2z8oy/` no objects can be found.\r\n\r\nThis is where Active Storage tries to delete the prefixed variants which have never been created before: https://github.com/rails/rails/blob/main/activestorage/app/models/active_storage/blob.rb#L325\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50583/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50583/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50580",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50580/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50580/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50580/events",
        "html_url": "https://github.com/rails/rails/pull/50580",
        "id": 2065925947,
        "node_id": "PR_kwDNIULOYzzsDw",
        "number": 50580,
        "title": "Port `ActiveRecord::AttributeMethods::Query` to Active Model",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            },
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-04T16:07:32Z",
        "updated_at": "2024-01-04T17:01:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50580",
            "html_url": "https://github.com/rails/rails/pull/50580",
            "diff_url": "https://github.com/rails/rails/pull/50580.diff",
            "patch_url": "https://github.com/rails/rails/pull/50580.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nRelated to https://github.com/rails/rails/issues/50568\r\n\r\nThe backport of [type_for_attribute][] from Active Record to Active Model enables the backport of `ActiveRecord::AttributeMethods::Query` to define predicate methods for both Active Model and Active Record using the same code paths.\r\n\r\n### Detail\r\n\r\nThis commit renames `Active{Record,Model}::AttributeMethods::Query` then includes it into both into the original\r\n`ActiveRecord::AttributeMethods::Query` and into\r\n`ActiveModel::Attributes` by default.\r\n\r\nThe test coverage was copied directly from the [Active Record test suite][], then modified to work in a database-less environment.\r\n\r\n### Additional information\r\n\r\nThe `_query_attribute` method defined in\r\n`ActiveRecord::AttributeMethods::Query` is specific to Active Record, so do not include it in the migration.\r\n\r\n[type_for_attribute]: https://github.com/rails/rails/commit/83f543b8760308081ab1b58c25804c45c2597844\r\n[Active Record test suite]: https://github.com/rails/rails/blob/a73cbbea6a082cdd320ecc92e3c6f1d46fe6af74/activerecord/test/cases/attribute_methods_test.rb#L494-L596\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50580/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50579",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50579/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50579/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50579/events",
        "html_url": "https://github.com/rails/rails/issues/50579",
        "id": 2065896582,
        "node_id": "I_kwDNIULOeyMUhg",
        "number": 50579,
        "title": "CI: SQLite adapter is running in Trilogy tests",
        "user": {
            "login": "skipkayhil",
            "id": 6014046,
            "node_id": "MDQ6VXNlcjYwMTQwNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6014046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skipkayhil",
            "html_url": "https://github.com/skipkayhil",
            "followers_url": "https://api.github.com/users/skipkayhil/followers",
            "following_url": "https://api.github.com/users/skipkayhil/following{/other_user}",
            "gists_url": "https://api.github.com/users/skipkayhil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skipkayhil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skipkayhil/subscriptions",
            "organizations_url": "https://api.github.com/users/skipkayhil/orgs",
            "repos_url": "https://api.github.com/users/skipkayhil/repos",
            "events_url": "https://api.github.com/users/skipkayhil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skipkayhil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 776781281,
                "node_id": "MDU6TGFiZWw3NzY3ODEyODE=",
                "url": "https://api.github.com/repos/rails/rails/labels/ci%20issues",
                "name": "ci issues",
                "color": "aaafff",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-04T15:49:54Z",
        "updated_at": "2024-01-04T15:56:29Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Ref #49373\r\n\r\nhttps://buildkite.com/rails/rails/builds/103367#018cd514-4e51-4bac-be7c-c8656888c21e\r\n\r\nI'm pretty sure this means that some other test is leaking, but I have not dug in at all.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50579/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50958",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50958/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50958/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50958/events",
        "html_url": "https://github.com/rails/rails/pull/50958",
        "id": 2116092234,
        "node_id": "PR_kwDNIULOZeUV5A",
        "number": 50958,
        "title": "Add missing alias to errors array",
        "user": {
            "login": "laomatt",
            "id": 9632282,
            "node_id": "MDQ6VXNlcjk2MzIyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9632282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laomatt",
            "html_url": "https://github.com/laomatt",
            "followers_url": "https://api.github.com/users/laomatt/followers",
            "following_url": "https://api.github.com/users/laomatt/following{/other_user}",
            "gists_url": "https://api.github.com/users/laomatt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laomatt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laomatt/subscriptions",
            "organizations_url": "https://api.github.com/users/laomatt/orgs",
            "repos_url": "https://api.github.com/users/laomatt/repos",
            "events_url": "https://api.github.com/users/laomatt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laomatt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-03T01:01:09Z",
        "updated_at": "2024-02-03T01:01:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50958",
            "html_url": "https://github.com/rails/rails/pull/50958",
            "diff_url": "https://github.com/rails/rails/pull/50958.diff",
            "patch_url": "https://github.com/rails/rails/pull/50958.patch",
            "merged_at": null
        },
        "body": "it used to be that the << operator was able to add error messages during the validation process, this restores that functionality.\r\n\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because errors in active record validations seem to be missing the << functionality it used to have\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the array returned by ar errors\r\n\r\n### Additional information\r\n\r\nJust wanted to restore the alias of >> to 'add'\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50958/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50954",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50954/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50954/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50954/events",
        "html_url": "https://github.com/rails/rails/issues/50954",
        "id": 2115098687,
        "node_id": "I_kwDNIULOfhHYPw",
        "number": 50954,
        "title": "esbuild precompilation error in rails 7.1.3",
        "user": {
            "login": "PhilippGsell",
            "id": 58818799,
            "node_id": "MDQ6VXNlcjU4ODE4Nzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58818799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PhilippGsell",
            "html_url": "https://github.com/PhilippGsell",
            "followers_url": "https://api.github.com/users/PhilippGsell/followers",
            "following_url": "https://api.github.com/users/PhilippGsell/following{/other_user}",
            "gists_url": "https://api.github.com/users/PhilippGsell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PhilippGsell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PhilippGsell/subscriptions",
            "organizations_url": "https://api.github.com/users/PhilippGsell/orgs",
            "repos_url": "https://api.github.com/users/PhilippGsell/repos",
            "events_url": "https://api.github.com/users/PhilippGsell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PhilippGsell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T14:43:34Z",
        "updated_at": "2024-02-02T14:43:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\ncreate a new rails 7.1.3 Project with esbuild.\r\n```bash\r\n rails new app --javascript esbuild\r\n```\r\nand try to build the docker image without doing any changes\r\n```bash\r\ndocker build -f Dockerfile -t app_test . && docker run -p 3000:3000 -v .:/rails app_test --env RAILS_MASTER_KEY=xxx\r\n```\r\n\r\n### Expected behavior\r\nThe image should build\r\n\r\n### Actual behavior\r\nyarn throws an error while precompiling the assets.\r\n\r\nyarn run v1.22.21\r\n$ esbuild app/javascript/*.* --bundle --sourcemap --format=esm --outdir=app/assets/builds --public-path=/assets\r\n\u2718 [ERROR] Could not resolve \"@hotwired/turbo-rails\"\r\n\r\n    app/javascript/application.js:2:7:\r\n      2 \u2502 import \"@hotwired/turbo-rails\"\r\n      The command '/bin/sh -c SECRET_KEY_BASE_DUMMY=1 ./bin/rails assets:precompile' returned a non-zero code: 1\r\n\r\n### System configuration\r\n**Ubuntu version**: 22.04\r\n\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.0.2p107 (2021-07-07 revision 0db68f0233) [x86_64-linux-gnu]\r\n\r\n**gem --version**: 3.3.5\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50953",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50953/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50953/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50953/events",
        "html_url": "https://github.com/rails/rails/pull/50953",
        "id": 2114861781,
        "node_id": "PR_kwDNIULOZdP1vw",
        "number": 50953,
        "title": "Add webp as a default to active_storage.web_image_content_types",
        "user": {
            "login": "lewispb",
            "id": 1773614,
            "node_id": "MDQ6VXNlcjE3NzM2MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1773614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lewispb",
            "html_url": "https://github.com/lewispb",
            "followers_url": "https://api.github.com/users/lewispb/followers",
            "following_url": "https://api.github.com/users/lewispb/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewispb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lewispb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewispb/subscriptions",
            "organizations_url": "https://api.github.com/users/lewispb/orgs",
            "repos_url": "https://api.github.com/users/lewispb/repos",
            "events_url": "https://api.github.com/users/lewispb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lewispb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-02T12:51:26Z",
        "updated_at": "2024-02-02T17:19:56Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50953",
            "html_url": "https://github.com/rails/rails/pull/50953",
            "diff_url": "https://github.com/rails/rails/pull/50953.diff",
            "patch_url": "https://github.com/rails/rails/pull/50953.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nCustomers are uploading webp images to our app, and expect them to be rendered just like other images, instead of being converted to the fallback PNG format.\r\n\r\n### Detail\r\n\r\nFollows https://github.com/rails/rails/pull/38918 and https://github.com/rails/rails/pull/38988. At the time, webp browser support was limited. Now 96% of browsers support webp: https://caniuse.com/?search=webp\r\n\r\nThis PR adds webp as a default image type.\r\n\r\n### Additional information\r\n\r\nI think this is a sensible default in 2024, but alternatively each Rails app may choose:\r\n\r\n```\r\nRails.application.configure do\r\n  config.active_storage.web_image_content_types << \"image/webp\"\r\nend\r\n```\r\n\r\n**Changelog**\r\n\r\nI've not added a changelog entry in line with https://github.com/rails/rails/pull/38918#discussion_r410527726, but I'd be happy to add one if it's felt useful now.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\ncc @jeremy \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50953/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50951",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50951/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50951/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50951/events",
        "html_url": "https://github.com/rails/rails/pull/50951",
        "id": 2114685245,
        "node_id": "PR_kwDNIULOZdGIPQ",
        "number": 50951,
        "title": "set default_enforce_utf8 to false",
        "user": {
            "login": "ironsand",
            "id": 4509402,
            "node_id": "MDQ6VXNlcjQ1MDk0MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4509402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ironsand",
            "html_url": "https://github.com/ironsand",
            "followers_url": "https://api.github.com/users/ironsand/followers",
            "following_url": "https://api.github.com/users/ironsand/following{/other_user}",
            "gists_url": "https://api.github.com/users/ironsand/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ironsand/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ironsand/subscriptions",
            "organizations_url": "https://api.github.com/users/ironsand/orgs",
            "repos_url": "https://api.github.com/users/ironsand/repos",
            "events_url": "https://api.github.com/users/ironsand/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ironsand/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-02T11:11:21Z",
        "updated_at": "2024-02-03T08:41:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50951",
            "html_url": "https://github.com/rails/rails/pull/50951",
            "diff_url": "https://github.com/rails/rails/pull/50951.diff",
            "patch_url": "https://github.com/rails/rails/pull/50951.patch",
            "merged_at": null
        },
        "body": "`enforce_utf8` is false by deault in `form_for` #30852\r\nWe normally don't need to consider old IE anymore.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50951/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50950",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50950/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50950/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50950/events",
        "html_url": "https://github.com/rails/rails/pull/50950",
        "id": 2114677525,
        "node_id": "PR_kwDNIULOZdFtKw",
        "number": 50950,
        "title": "Add class name to enum validation exception message",
        "user": {
            "login": "amkisko",
            "id": 54796266,
            "node_id": "MDQ6VXNlcjU0Nzk2MjY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54796266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amkisko",
            "html_url": "https://github.com/amkisko",
            "followers_url": "https://api.github.com/users/amkisko/followers",
            "following_url": "https://api.github.com/users/amkisko/following{/other_user}",
            "gists_url": "https://api.github.com/users/amkisko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amkisko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amkisko/subscriptions",
            "organizations_url": "https://api.github.com/users/amkisko/orgs",
            "repos_url": "https://api.github.com/users/amkisko/repos",
            "events_url": "https://api.github.com/users/amkisko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amkisko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T11:07:18Z",
        "updated_at": "2024-02-02T11:08:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50950",
            "html_url": "https://github.com/rails/rails/pull/50950",
            "diff_url": "https://github.com/rails/rails/pull/50950.diff",
            "patch_url": "https://github.com/rails/rails/pull/50950.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nIn general validation errors should include more information on where it has happened.\r\n\r\n### Detail\r\n\r\nThis PR updates `activerecord/lib/active_record/enum.rb` validation exception message and just adds class name.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50950/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50949",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50949/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50949/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50949/events",
        "html_url": "https://github.com/rails/rails/pull/50949",
        "id": 2114653503,
        "node_id": "PR_kwDNIULOZdEYOA",
        "number": 50949,
        "title": "Add a Rails Guide for tuning performance for deployment",
        "user": {
            "login": "noahgibbs",
            "id": 82408,
            "node_id": "MDQ6VXNlcjgyNDA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/82408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noahgibbs",
            "html_url": "https://github.com/noahgibbs",
            "followers_url": "https://api.github.com/users/noahgibbs/followers",
            "following_url": "https://api.github.com/users/noahgibbs/following{/other_user}",
            "gists_url": "https://api.github.com/users/noahgibbs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noahgibbs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noahgibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/noahgibbs/orgs",
            "repos_url": "https://api.github.com/users/noahgibbs/repos",
            "events_url": "https://api.github.com/users/noahgibbs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noahgibbs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T10:55:44Z",
        "updated_at": "2024-02-02T15:02:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50949",
            "html_url": "https://github.com/rails/rails/pull/50949",
            "diff_url": "https://github.com/rails/rails/pull/50949.diff",
            "patch_url": "https://github.com/rails/rails/pull/50949.patch",
            "merged_at": null
        },
        "body": "This pull request adds a new Rails Guide called \"Tuning Performance for Deployment\".\r\n\r\n### Motivation / Background\r\n\r\nA few weeks ago there was [an issue to change the default thread count for Puma in Rails](https://github.com/rails/rails/issues/50450) and [a PR to make that change](https://github.com/rails/rails/pull/50669).\r\n\r\nThe PR mentioned that a performance tuning guide would be the right way to document some issues, but no such guide exists. I wrote a basic guide and incorporated a lot of feedback from @byroot (Jean Boussier), who wrote the thread count PR.\r\n\r\nThis pull request adds the suggested Rails Guide.\r\n\r\nCC @nateberkopec - though I know you're very busy right now :-)\r\n\r\n### Detail\r\n\r\nIt's impossible to have a detailed guide for all possible Rails deployment options. This guide focuses on Puma (the default server) and CRuby, and on giving a good start to people who don't already know deployment well. I've tried to mention core performance issues without explaining every possible configuration change.\r\n\r\nNext time there is a deployment configuration change, there will be a place to document the tradeoffs.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50949/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50948",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50948/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50948/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50948/events",
        "html_url": "https://github.com/rails/rails/issues/50948",
        "id": 2114571381,
        "node_id": "I_kwDNIULOfgnMdQ",
        "number": 50948,
        "title": "Destroying bi-directional has_one through association only works from one end",
        "user": {
            "login": "airblade",
            "id": 7265,
            "node_id": "MDQ6VXNlcjcyNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7265?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/airblade",
            "html_url": "https://github.com/airblade",
            "followers_url": "https://api.github.com/users/airblade/followers",
            "following_url": "https://api.github.com/users/airblade/following{/other_user}",
            "gists_url": "https://api.github.com/users/airblade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/airblade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/airblade/subscriptions",
            "organizations_url": "https://api.github.com/users/airblade/orgs",
            "repos_url": "https://api.github.com/users/airblade/repos",
            "events_url": "https://api.github.com/users/airblade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/airblade/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T10:14:36Z",
        "updated_at": "2024-02-02T10:14:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Summary\r\n\r\nGiven a `has_one :through` association with `dependent: :destroy`, destroying the parent destroys the through record and the far end.  However if the association is bi-directional, destroying only works from one end \u2013 and the end which succeeds depends on the order of `belongs_to` declarations in the join model.  I believe it should work from both ends.\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :lefts, force: true do |t|\r\n  end\r\n\r\n  create_table :rights, force: true do |t|\r\n  end\r\n\r\n  create_table :middles, force: true do |t|\r\n    t.references :left, foreign_key: true\r\n    t.references :right, foreign_key: true\r\n  end\r\nend\r\n\r\nclass Left < ActiveRecord::Base\r\n  has_one :middle, dependent: :destroy\r\n  has_one :right, through: :middle\r\nend\r\n\r\nclass Middle < ActiveRecord::Base\r\n  belongs_to :left, dependent: :destroy\r\n  belongs_to :right, dependent: :destroy\r\nend\r\n\r\nclass Right < ActiveRecord::Base\r\n  has_one :middle, dependent: :destroy\r\n  has_one :left, through: :middle\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_destroying_left_destroys_right\r\n    left = Left.create!\r\n    right = Right.create!\r\n    middle = Middle.create! left: left, right: right\r\n\r\n    left.destroy\r\n    assert right.destroyed?\r\n  end\r\n\r\n  def test_destroying_right_destroys_left\r\n    left = Left.create!\r\n    right = Right.create!\r\n    middle = Middle.create! left: left, right: right\r\n\r\n    right.destroy\r\n    assert left.destroyed?\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect:\r\n\r\n- `left.destroy` to also destroy its `middle` and its `right`\r\n- `right.destroy` to also destroy its `middle` and its `left`\r\n\r\n### Actual behavior\r\n\r\n- `right.destroy` destroys its `middle` and its `left`\r\n-  `left.destroy` destroys its `middle` but does not destroy its `right`\r\n\r\nHowever if I reverse the order of `Middle`'s `belongs_to` declarations, `right.destroy` stops working and `left.destroy` starts working.\r\n\r\n### Patch\r\n\r\nThis patch fixes the behaviour and does not break any existing tests (via `bundle exec rake test:sqlite3`):\r\n\r\n```diff\r\ndiff --git i/activerecord/lib/active_record/callbacks.rb w/activerecord/lib/active_record/callbacks.rb\r\nindex 29c72d1024..6e9c68b747 100644\r\n--- i/activerecord/lib/active_record/callbacks.rb\r\n+++ w/activerecord/lib/active_record/callbacks.rb\r\n@@ -418,7 +418,7 @@ module ClassMethods\r\n \r\n     def destroy # :nodoc:\r\n       @_destroy_callback_already_called ||= false\r\n-      return if @_destroy_callback_already_called\r\n+      return true if @_destroy_callback_already_called\r\n       @_destroy_callback_already_called = true\r\n       _run_destroy_callbacks { super }\r\n     rescue RecordNotDestroyed => e\r\n```\r\n\r\nCredit for the patch belongs to [Alex](https://stackoverflow.com/users/207090/alex).\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.3.0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50947",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50947/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50947/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50947/events",
        "html_url": "https://github.com/rails/rails/issues/50947",
        "id": 2114046969,
        "node_id": "I_kwDNIULOfgHL-Q",
        "number": 50947,
        "title": "ActiveStorage::IntegrityError (ActiveStorage::IntegrityError)",
        "user": {
            "login": "raoehtesham03",
            "id": 152256436,
            "node_id": "U_kgDOCRM_tA",
            "avatar_url": "https://avatars.githubusercontent.com/u/152256436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoehtesham03",
            "html_url": "https://github.com/raoehtesham03",
            "followers_url": "https://api.github.com/users/raoehtesham03/followers",
            "following_url": "https://api.github.com/users/raoehtesham03/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoehtesham03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoehtesham03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoehtesham03/subscriptions",
            "organizations_url": "https://api.github.com/users/raoehtesham03/orgs",
            "repos_url": "https://api.github.com/users/raoehtesham03/repos",
            "events_url": "https://api.github.com/users/raoehtesham03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoehtesham03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T04:43:40Z",
        "updated_at": "2024-02-02T04:43:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have upgraded my rails application from 5.2 to 6.0 and then 6.0 to 7.0 . So, I am getting ActiveStorage::IntegrityError (ActiveStorage::IntegrityError) while I am trying to get -\r\n```ruby\r\n attachment.variant(resize_to_limit: resize).processed.url\r\n```\r\n\r\n### Expected behavior\r\nIt should not give this error.\r\n\r\n### Actual behavior\r\nGetting this  ActiveStorage::IntegrityError (ActiveStorage::IntegrityError) Error.\r\n\r\n### System configuration\r\n**Rails version**: 3.0.6\r\n\r\n**Ruby version**:  7.0.8\r\n\r\n\r\nPlease provide me the solution to resolve this problem I am stuck on it since a week.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50947/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50947/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50946",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50946/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50946/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50946/events",
        "html_url": "https://github.com/rails/rails/pull/50946",
        "id": 2113959017,
        "node_id": "PR_kwDNIULOZceF3g",
        "number": 50946,
        "title": "Fix error raised when running `db:schema:load:#{name}` and test DB config is missing",
        "user": {
            "login": "ricardotk002",
            "id": 3733470,
            "node_id": "MDQ6VXNlcjM3MzM0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3733470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ricardotk002",
            "html_url": "https://github.com/ricardotk002",
            "followers_url": "https://api.github.com/users/ricardotk002/followers",
            "following_url": "https://api.github.com/users/ricardotk002/following{/other_user}",
            "gists_url": "https://api.github.com/users/ricardotk002/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ricardotk002/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ricardotk002/subscriptions",
            "organizations_url": "https://api.github.com/users/ricardotk002/orgs",
            "repos_url": "https://api.github.com/users/ricardotk002/repos",
            "events_url": "https://api.github.com/users/ricardotk002/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ricardotk002/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T03:17:31Z",
        "updated_at": "2024-02-02T14:50:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50946",
            "html_url": "https://github.com/rails/rails/pull/50946",
            "diff_url": "https://github.com/rails/rails/pull/50946.diff",
            "patch_url": "https://github.com/rails/rails/pull/50946.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFixes #50672\r\n\r\n### Detail\r\n\r\nThe task `db:schema:load:#{name}` depends on `db:test:purge:#{name}` since adb64db which requires the DB config to be present, otherwise an error is raised.\r\n\r\n```\r\n$ bin/rails db:schema:load:one --trace\r\n** Invoke db:schema:load:one (first_time)\r\n** Invoke db:test:purge:one (first_time)\r\n** Invoke db:load_config (first_time)\r\n** Invoke environment (first_time)\r\n** Execute environment\r\n** Execute db:load_config\r\n** Invoke db:check_protected_environments (first_time) ** Invoke db:load_config\r\n** Execute db:check_protected_environments\r\n** Execute db:test:purge:one\r\n** Execute db:schema:load:one\r\n```\r\n\r\nThis commit fixes the problem by returning early when the DB config is indeed missing.\r\n\r\n### Additional information\r\n\r\nThe task `db:schema:load` may need to be updated to depend on `db:test:purge` too, to keep it consistent with `db:schema:load:#{name}`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50946/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50945",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50945/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50945/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50945/events",
        "html_url": "https://github.com/rails/rails/pull/50945",
        "id": 2113809897,
        "node_id": "PR_kwDNIULOZcV_yg",
        "number": 50945,
        "title": "Introduce today_or_future? method",
        "user": {
            "login": "olimart",
            "id": 547754,
            "node_id": "MDQ6VXNlcjU0Nzc1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/547754?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olimart",
            "html_url": "https://github.com/olimart",
            "followers_url": "https://api.github.com/users/olimart/followers",
            "following_url": "https://api.github.com/users/olimart/following{/other_user}",
            "gists_url": "https://api.github.com/users/olimart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olimart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olimart/subscriptions",
            "organizations_url": "https://api.github.com/users/olimart/orgs",
            "repos_url": "https://api.github.com/users/olimart/repos",
            "events_url": "https://api.github.com/users/olimart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olimart/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T00:44:50Z",
        "updated_at": "2024-02-02T00:44:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50945",
            "html_url": "https://github.com/rails/rails/pull/50945",
            "diff_url": "https://github.com/rails/rails/pull/50945.diff",
            "patch_url": "https://github.com/rails/rails/pull/50945.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request introduces a convenient helper to check if a date/time is either today or in the future.\r\n\r\nDrawing inspiration from https://github.com/rails/rails/pull/46786 which introduces `.local?` helper for environment check.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes:\r\n- `ActiveSupport::TimeWithZone`\r\n-  `DateAndTime::Calculations`\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50944",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50944/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50944/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50944/events",
        "html_url": "https://github.com/rails/rails/pull/50944",
        "id": 2113736717,
        "node_id": "PR_kwDNIULOZcR4oQ",
        "number": 50944,
        "title": "Enable DependencyTracker to evaluate interpolated paths",
        "user": {
            "login": "skipkayhil",
            "id": 6014046,
            "node_id": "MDQ6VXNlcjYwMTQwNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6014046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skipkayhil",
            "html_url": "https://github.com/skipkayhil",
            "followers_url": "https://api.github.com/users/skipkayhil/followers",
            "following_url": "https://api.github.com/users/skipkayhil/following{/other_user}",
            "gists_url": "https://api.github.com/users/skipkayhil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skipkayhil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skipkayhil/subscriptions",
            "organizations_url": "https://api.github.com/users/skipkayhil/orgs",
            "repos_url": "https://api.github.com/users/skipkayhil/repos",
            "events_url": "https://api.github.com/users/skipkayhil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skipkayhil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T23:46:28Z",
        "updated_at": "2024-02-02T19:50:39Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50944",
            "html_url": "https://github.com/rails/rails/pull/50944",
            "diff_url": "https://github.com/rails/rails/pull/50944.diff",
            "patch_url": "https://github.com/rails/rails/pull/50944.patch",
            "merged_at": null
        },
        "body": "Previously, neither the PrismRenderParser nor the RipperRenderParser would consider an interpolated string as a dependency. The RubyTracker even included a line to explcitly filter out interpolated paths returned from the RipperRenderParser since they would end in a \"/\". However, the RubyTracker does include the ability to evaluate explicit \"Template Dependency\" comments with wildcard nodes.\r\n\r\nThis commit extends the RipperRenderParser and PrismRenderParser to convert interpolated strings into wildcard globs. Additionally, it changes the RubyTracker to evaluate wildcards the same for both implicit and explicit dependencies. This enables the RubyTracker to identify potential dependencies for interpolated renders, which it was previously unable to do.\r\n\r\ncc @jhawthorn if you think this is a good idea I can try to apply it to ActionView::Precompiler as well\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50944/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50943",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50943/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50943/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50943/events",
        "html_url": "https://github.com/rails/rails/pull/50943",
        "id": 2113672199,
        "node_id": "PR_kwDNIULOZcOUzA",
        "number": 50943,
        "title": "Setup jemalloc in default Dockerfile to optimize memory allocation",
        "user": {
            "login": "northeastprince",
            "id": 55164724,
            "node_id": "MDQ6VXNlcjU1MTY0NzI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/55164724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/northeastprince",
            "html_url": "https://github.com/northeastprince",
            "followers_url": "https://api.github.com/users/northeastprince/followers",
            "following_url": "https://api.github.com/users/northeastprince/following{/other_user}",
            "gists_url": "https://api.github.com/users/northeastprince/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/northeastprince/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/northeastprince/subscriptions",
            "organizations_url": "https://api.github.com/users/northeastprince/orgs",
            "repos_url": "https://api.github.com/users/northeastprince/repos",
            "events_url": "https://api.github.com/users/northeastprince/events{/privacy}",
            "received_events_url": "https://api.github.com/users/northeastprince/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T22:55:15Z",
        "updated_at": "2024-02-01T22:59:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50943",
            "html_url": "https://github.com/rails/rails/pull/50943",
            "diff_url": "https://github.com/rails/rails/pull/50943.diff",
            "patch_url": "https://github.com/rails/rails/pull/50943.patch",
            "merged_at": null
        },
        "body": "[Ruby's use of `malloc` can create memory fragmentation problems, especially when using multiple threads](https://www.speedshop.co/2017/12/04/malloc-doubles-ruby-memory.html) like Puma does. Switching to an allocator that uses different patterns to avoid fragmentation can decrease memory usage by a substantial margin.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50943/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50941",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50941/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50941/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50941/events",
        "html_url": "https://github.com/rails/rails/pull/50941",
        "id": 2113553144,
        "node_id": "PR_kwDNIULOZcHmFg",
        "number": 50941,
        "title": "Retry `ActionableError`s when running tests",
        "user": {
            "login": "andrewn617",
            "id": 39735028,
            "node_id": "MDQ6VXNlcjM5NzM1MDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/39735028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewn617",
            "html_url": "https://github.com/andrewn617",
            "followers_url": "https://api.github.com/users/andrewn617/followers",
            "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewn617/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewn617/orgs",
            "repos_url": "https://api.github.com/users/andrewn617/repos",
            "events_url": "https://api.github.com/users/andrewn617/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewn617/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T21:50:43Z",
        "updated_at": "2024-02-02T14:23:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50941",
            "html_url": "https://github.com/rails/rails/pull/50941",
            "diff_url": "https://github.com/rails/rails/pull/50941.diff",
            "patch_url": "https://github.com/rails/rails/pull/50941.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I want to make it easier to retry actionable errors that occur when running tests. Rails already knows how to recover these errors, so lets make it possible for the user to recover from them and run their tests without exiting the process.\r\n\r\n### Detail\r\n\r\nAllow Actionable Errors encountered when running tests to be retried. This can be configured by `config.actionable_command_line_errors` and is `true` in the test environment unless the `\"CI\"` env variable is set, and false otherwise.\r\n\r\n    \r\n    Migrations are pending. To resolve this issue, run:\r\n    \r\n            bin/rails db:migrate\r\n    \r\n    You have 1 pending migration:\r\n    \r\n    db/migrate/20240201213806_add_a_to_b.rb\r\n    Run pending migrations? [Yn] Y\r\n    == 20240201213806 AddAToB: migrating =========================================\r\n    == 20240201213806 AddAToB: migrated (0.0000s) ================================\r\n    \r\n    Running 7 tests in a single process (parallelization threshold is 50)\r\n    Run options: --seed 22200\r\n    \r\n    # Running:\r\n    \r\n    .......\r\n    \r\n    Finished in 0.243394s, 28.7600 runs/s, 45.1942 assertions/s.\r\n    7 runs, 11 assertions, 0 failures, 0 errors, 0 skips\r\n    \r\n\r\n### Additional information\r\n\r\nRight now this is only implemented in the Test Runner, but I'd also like to follow up with a similar implementation for `Rails::Command::CorrectableNameError`s.\r\n\r\nAlso we could introduce a new framework default for the configuration if this is the direction in this PR is acceptable.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50941/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50939",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50939/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50939/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50939/events",
        "html_url": "https://github.com/rails/rails/issues/50939",
        "id": 2112729539,
        "node_id": "I_kwDNIULOfe2xww",
        "number": 50939,
        "title": "Should there be a RAILS_MASTER_KEY_DUMMY like SECRET_KEY_BASE_DUMMY?",
        "user": {
            "login": "dorianmariefr",
            "id": 58794487,
            "node_id": "MDQ6VXNlcjU4Nzk0NDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/58794487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dorianmariefr",
            "html_url": "https://github.com/dorianmariefr",
            "followers_url": "https://api.github.com/users/dorianmariefr/followers",
            "following_url": "https://api.github.com/users/dorianmariefr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dorianmariefr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dorianmariefr/subscriptions",
            "organizations_url": "https://api.github.com/users/dorianmariefr/orgs",
            "repos_url": "https://api.github.com/users/dorianmariefr/repos",
            "events_url": "https://api.github.com/users/dorianmariefr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dorianmariefr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T14:57:42Z",
        "updated_at": "2024-02-01T14:57:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nHave a rails app with `config.require_master_key = true`\r\n\r\n```\r\nRAILS_ENV=production SECRET_KEY_BASE_DUMMY=1 bin/rails assets:precompile\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt ignores the master key requirement?\r\n\r\n### Actual behavior\r\n\r\nError:\r\n\r\n```\r\nMissing encryption key to decrypt file with. Ask your team for your master key and write it to /rails/config/master.key or put it in the ENV['RAILS_MASTER_KEY'].\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.1.3\r\n**Ruby version**: ruby 3.2.3 (2024-01-18 revision 52bb2ac0a6) [arm64-darwin23]\r\n\r\n----\r\n\r\nWhat about a RAILS_MASTER_KEY_DUMMY=1?",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50939/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50938",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50938/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50938/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50938/events",
        "html_url": "https://github.com/rails/rails/pull/50938",
        "id": 2112546336,
        "node_id": "PR_kwDNIULOZbPi_A",
        "number": 50938,
        "title": "Refactor QueryCache to be owned by the pool",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T13:40:41Z",
        "updated_at": "2024-02-01T13:40:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50938",
            "html_url": "https://github.com/rails/rails/pull/50938",
            "diff_url": "https://github.com/rails/rails/pull/50938.diff",
            "patch_url": "https://github.com/rails/rails/pull/50938.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50793\r\n\r\nIf we want to stop caching the checked out connections, then we must persist the cache in the pool, and assign it to the connection when it's checked out.\r\n\r\nThe pool become responsible for managing the cache lifecycle.\r\n\r\nThis also open the door to sharing the cache between multiple connections, which is valuable for read replicas, etc.\r\n\r\nThis change only really make sense if we go through with no longer caching checked out connections. Otherwise it's just extra complexity.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50938/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50938/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50935",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50935/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50935/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50935/events",
        "html_url": "https://github.com/rails/rails/issues/50935",
        "id": 2112256299,
        "node_id": "I_kwDNIULOfeZ5Kw",
        "number": 50935,
        "title": "Add ability to see on which shard the migration is being run",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-02-01T11:23:15Z",
        "updated_at": "2024-02-01T22:51:30Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, when the app uses sharding and the migration is run, there is not way to tell on which shard it is being run.\r\nThis is a problem, because when the migration adds a unique index and we have some duplicates, the migration blows up (with a `ActiveRecord::RecordNotUnique` error) and there is no way to easily know on which shard exactly. \r\n\r\nThe problem can be solved in at least 2 ways:\r\n1. somehow `puts` shard info when running a migration\r\n2. we have a `connection_pool` object attached to the mentioned `ActiveRecord::RecordNotUnique` error (thanks to https://github.com/rails/rails/pull/48295), but the error message is not include this info (https://github.com/rails/rails/pull/48295#issuecomment-1570702063), so needs to fix that\r\n\r\nI would like to provide a PR, but need a suggestion on which path to choose. \r\n@byroot you helped to implement the linked PR, can you please suggest? ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50935/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50932",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50932/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50932/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50932/events",
        "html_url": "https://github.com/rails/rails/issues/50932",
        "id": 2111605159,
        "node_id": "I_kwDNIULOfdyJpw",
        "number": 50932,
        "title": "Rails 7.1 undefined method purge & same for variant using ruby 3.3.0-dev",
        "user": {
            "login": "kashifcodility",
            "id": 157491032,
            "node_id": "U_kgDOCWMfWA",
            "avatar_url": "https://avatars.githubusercontent.com/u/157491032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kashifcodility",
            "html_url": "https://github.com/kashifcodility",
            "followers_url": "https://api.github.com/users/kashifcodility/followers",
            "following_url": "https://api.github.com/users/kashifcodility/following{/other_user}",
            "gists_url": "https://api.github.com/users/kashifcodility/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kashifcodility/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kashifcodility/subscriptions",
            "organizations_url": "https://api.github.com/users/kashifcodility/orgs",
            "repos_url": "https://api.github.com/users/kashifcodility/repos",
            "events_url": "https://api.github.com/users/kashifcodility/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kashifcodility/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            },
            {
                "id": 1071962662,
                "node_id": "MDU6TGFiZWwxMDcxOTYyNjYy",
                "url": "https://api.github.com/repos/rails/rails/labels/more-information-needed",
                "name": "more-information-needed",
                "color": "bfdadc",
                "default": false,
                "description": "When reporter needs to provide more information"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-01T05:45:14Z",
        "updated_at": "2024-02-01T10:02:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "irb(main):047> image\r\n=> \r\n#<ActiveStorage::Attachment:0x00007ff81133c0a0\r\n id: 4,\r\n name: \"images\",\r\n record_type: \"News\",\r\n record_id: 2,\r\n blob_id: 4,\r\n created_at: Wed, 31 Jan 2024 12:00:01.463996000 UTC +00:00>\r\nirb(main):048> \r\nirb(main):049> \r\nirb(main):050> image.class\r\n=> ActiveStorage::Attachment(id: integer, name: string, record_type: string, record_id: integer, blob_id: integer, created_at: datetime)\r\nirb(main):051> \r\nirb(main):052> \r\nirb(main):053> \r\nirb(main):054> image.purge\r\n/home/lap-053/.rbenv/versions/3.3.0-dev/lib/ruby/gems/3.4.0+0/gems/activemodel-7.1.3/lib/active_model/attribute_methods.rb:489:in `method_missing': undefined method `purge' for an instance of ActiveStorage::Attachment (NoMethodError)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50932/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50930",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50930/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50930/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50930/events",
        "html_url": "https://github.com/rails/rails/issues/50930",
        "id": 2111351021,
        "node_id": "I_kwDNIULOfdio7Q",
        "number": 50930,
        "title": "Rails 7.1 doesn't render Enumerator in view correctly",
        "user": {
            "login": "kuwabarahiroshi",
            "id": 816749,
            "node_id": "MDQ6VXNlcjgxNjc0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/816749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kuwabarahiroshi",
            "html_url": "https://github.com/kuwabarahiroshi",
            "followers_url": "https://api.github.com/users/kuwabarahiroshi/followers",
            "following_url": "https://api.github.com/users/kuwabarahiroshi/following{/other_user}",
            "gists_url": "https://api.github.com/users/kuwabarahiroshi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kuwabarahiroshi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kuwabarahiroshi/subscriptions",
            "organizations_url": "https://api.github.com/users/kuwabarahiroshi/orgs",
            "repos_url": "https://api.github.com/users/kuwabarahiroshi/repos",
            "events_url": "https://api.github.com/users/kuwabarahiroshi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kuwabarahiroshi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-01T02:21:08Z",
        "updated_at": "2024-02-01T02:22:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Prior to Rails 7.1, returning an Enumerator in a view rendered the content correctly. However, starting from Rails 7.1, it appears to render only the Enumerator's string representation (Enumerator#to_s), resulting in a response like `\"#<Enumerator:0xXXXXXX>\"`.\r\n\r\nSetting `self.response_body = Enumerator.new` in an action works for both 7.0 and 7.1 (fixed in https://github.com/rails/rails/issues/49588).\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # gem \"rails\", \"~> 7.0.0\" # => works\r\n  gem \"rails\", \"~> 7.1.0\" # => fails\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"enumerator_in_action\", controller: :test\r\n    get \"enumerator_in_view\", controller: :test\r\n  end\r\nend\r\n\r\nclass TestController < ActionController::Base\r\n  def enumerator_in_action\r\n    self.response_body = Enumerator.new do |buff|\r\n      10.times { buff << _1.to_s }\r\n    end\r\n  end\r\n\r\n  def enumerator_in_view\r\n    render inline: <<~EOS, layout: false, type: :ruby\r\n      Enumerator.new do |buff|\r\n        10.times { buff << _1.to_s }\r\n      end\r\n    EOS\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def test_enumerator_in_action\r\n    get \"/enumerator_in_action\"\r\n    assert_equal \"0123456789\", last_response.body\r\n  end\r\n\r\n  def test_enumerator_in_view\r\n    get \"/enumerator_in_view\"\r\n    assert_equal \"0123456789\", last_response.body\r\n  end\r\n\r\n  private\r\n\r\n    def app\r\n      Rails.application\r\n    end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe content should be rendered by evaluating the Enumerator.\r\n\r\nI'm not sure whether it is guaranteed behavior in specification when it's returned from view, but I expect it works as was the case until Rails 7.0.\r\n\r\n### Actual behavior\r\n\r\nIt currently renders the Enumerator's string representation, such as \"#<Enumerator:0xXXXXXX>\".\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50930/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50928",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50928/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50928/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50928/events",
        "html_url": "https://github.com/rails/rails/pull/50928",
        "id": 2110751556,
        "node_id": "PR_kwDNIULOZZsk5w",
        "number": 50928,
        "title": "Fixes race condition for multiple preprocessed video variants",
        "user": {
            "login": "searls",
            "id": 79303,
            "node_id": "MDQ6VXNlcjc5MzAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/79303?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/searls",
            "html_url": "https://github.com/searls",
            "followers_url": "https://api.github.com/users/searls/followers",
            "following_url": "https://api.github.com/users/searls/following{/other_user}",
            "gists_url": "https://api.github.com/users/searls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/searls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/searls/subscriptions",
            "organizations_url": "https://api.github.com/users/searls/orgs",
            "repos_url": "https://api.github.com/users/searls/repos",
            "events_url": "https://api.github.com/users/searls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/searls/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-31T18:49:44Z",
        "updated_at": "2024-02-01T02:00:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50928",
            "html_url": "https://github.com/rails/rails/pull/50928",
            "diff_url": "https://github.com/rails/rails/pull/50928.diff",
            "patch_url": "https://github.com/rails/rails/pull/50928.patch",
            "merged_at": null
        },
        "body": "This fixes race condition in Active Storage when multiple preprocessed variants are defined for a `Previewable` file is attached.\r\n\r\n## Background\r\n\r\nWhen a variant is specified for a \"previewable\" file type (e.g. video  or PDF) attachment, a `preview_image` attachment is first created and attached on the original blob and then any user-specified variants are derived from _that_ preview image. When those variants are named and have `preprocessed: true`, the jobs to create those variants are queued simultaneously.\r\n\r\nExample from my case:\r\n\r\n```ruby\r\n  has_one_attached :file, dependent: :purge_later do |attachable|\r\n    attachable.variant :preview, resize_to_fill: [400, 400], preprocessed: true\r\n    attachable.variant :still, format: \"jpg\", saver: {quality: 85}, preprocessed: true\r\n  end\r\n```\r\n\r\n## The issue\r\n\r\nWhen a `Previewable` attachment is created (a video, in my case), `TransformJob.perform_later` is called for each named variant with `preprocessed: true`. Unless your queue adapter is synchronous (e.g. :inline or :test), this results in a race condition in which every such variant's worker will check `processed?`, see that no `preview_image` attachment exists yet on the `ActiveStorage::Blob`, and:\r\n\r\n1. Redundantly download the file from storage\r\n2. Create duplicative ActiveStorage::Attachment and `ActiveStorage::Blob` records for the `preview_image` attachment (all but one of which will be orphaned from the original blob's `has_one_attached :preview_image`)\r\n3. Create variant blobs (and associated `ActiveStorage::VariantRecord`) that are similarly orphaned (by virtue of being a variant of an orphaned `preview_image` blob)\r\n\r\nAs a result, if the video is ever purged, `PurgeJob` will only find the current `has_one_attached :preview_image` and whatever variant demanded it into existence, then leave the rest as orphaned records in the database and in storage.\r\n\r\n## The fix\r\n\r\nPretty simple: wrap the first step of the job in `blob.with_lock {}`. By pessimistically locking on the blob, we can prevent processing the preview image multiple times by multiple `TransformJob` jobs running concurrently.\r\n\r\nAlternate approaches would all be more work:\r\n\r\n* Queuing a `PreviewImage` job instead of N `TransformJob` and have it, only after `preview_image` is attached, enqueue those `TransformJob` jobs\r\n* Batching up all the named variant transformations into a single meta-job\r\n\r\n## Testing caveat \r\n\r\nWriting a test for this inside Rails would be difficult because it would require running the resulting TransformJob jobs concurrently. I [started a test](https://github.com/searls/rails/blob/fix-video-duplicate-preview-variants/activestorage/test/models/variant_with_record_test.rb#L348-L367) but failed to reproduce, in part because the test queue adapter will perform enqueued jobs inline instead of concurrently. In order to write a test that replicated the issue appropriately, we might first need a new option for `perform_enqueued_jobs(async: true) {\u00a0\u2026 }`\r\n\r\nIf you're interested, [this gist](https://gist.github.com/searls/5b8298abe88b3206f670ea3c6d574aab) includes a driver script and output before and after the patch showing it working.\r\n\r\n## Evaluating impact on existing Active Storage users\r\n\r\nI only found this because I'm a total cheapskate and was literally counting records in my S3 bucket to ensure `PurgeJob` worked. Then I wasted the next two days trying to figure out why before landing on this. I strongly suspect that ActiveStorage users who host video and take advantage of `preprocessed: true` named variants will have a lot of orphaned stuff floating around their buckets.\r\n\r\nTo see if you have any such \"zombie\" preview_images (and presumably, associated variants) floating around your application that would survive calls to `purge` on the owning attachment, you could write a query like this:\r\n\r\n```\r\nActiveStorage::Attachment\r\n  .joins(\"INNER JOIN active_storage_attachments as other_attachments ON\r\n          active_storage_attachments.record_id = other_attachments.record_id AND\r\n          active_storage_attachments.id != other_attachments.id\")\r\n  .where(\r\n    :name => \"preview_image\",\r\n    :record_type => \"ActiveStorage::Blob\",\r\n    \"other_attachments.name\" => \"preview_image\",\r\n    \"other_attachments.record_type\" => \"ActiveStorage::Blob\"\r\n  )\r\n  .distinct\r\n```\r\n\r\nClearing out one's production database and backend storage to get this all right-sized should be a fun exercise for the reader.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50928/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50920",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50920/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50920/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50920/events",
        "html_url": "https://github.com/rails/rails/pull/50920",
        "id": 2107533190,
        "node_id": "PR_kwDNIULOZW8w1g",
        "number": 50920,
        "title": "Support encrypting binary columns",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-30T10:53:34Z",
        "updated_at": "2024-02-02T14:07:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50920",
            "html_url": "https://github.com/rails/rails/pull/50920",
            "diff_url": "https://github.com/rails/rails/pull/50920.diff",
            "patch_url": "https://github.com/rails/rails/pull/50920.patch",
            "merged_at": null
        },
        "body": "\r\n### Motivation / Background\r\n\r\nActiveRecord Encryption doesn't prevent you from encrypting binary columns but it doesn't have proper support for it either.\r\n\r\nWhen the data is fed through encrypt/decrypt it is converted to a String. This means that the the encryption layer is not transparent to binary data - which should be passed as Type::Binary::Data.\r\n\r\nAs a result the data is not properly escaped in the SQL queries or deserialized correctly after decryption.\r\n\r\nHowever it just happens to work fine for MySQL and SQLite because the MessageSerializer doesn't use any characters that need to be encoded. However if you try to use a custom serializer that does then it breaks.\r\n\r\nPostgreSQL on the other hand does not work - because the Bytea type is passed a String rather than a Type::Binary::Data to deserialize, it attempts to unescape the data and either mangles it or raises an error if it contains null bytes.\r\n\r\n### Detail\r\n\r\nThe commit fixes the issue, by reserializing the data after encryption and decryption. For text data that's a no-op, but for binary data we'll convert it back to a Type::Binary::Data.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50920/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50919",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50919/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50919/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50919/events",
        "html_url": "https://github.com/rails/rails/pull/50919",
        "id": 2107305664,
        "node_id": "PR_kwDNIULOZWwUOw",
        "number": 50919,
        "title": "Add negative_scopes option to ActiveRecord's enum method",
        "user": {
            "login": "Jay0921",
            "id": 12777550,
            "node_id": "MDQ6VXNlcjEyNzc3NTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/12777550?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jay0921",
            "html_url": "https://github.com/Jay0921",
            "followers_url": "https://api.github.com/users/Jay0921/followers",
            "following_url": "https://api.github.com/users/Jay0921/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jay0921/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jay0921/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jay0921/subscriptions",
            "organizations_url": "https://api.github.com/users/Jay0921/orgs",
            "repos_url": "https://api.github.com/users/Jay0921/repos",
            "events_url": "https://api.github.com/users/Jay0921/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jay0921/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-30T09:11:41Z",
        "updated_at": "2024-01-30T09:40:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50919",
            "html_url": "https://github.com/rails/rails/pull/50919",
            "diff_url": "https://github.com/rails/rails/pull/50919.diff",
            "patch_url": "https://github.com/rails/rails/pull/50919.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nIn certain situation, we might need to store and query `negative` values. Having the option to bypass the auto-generated negative scopes can avoid the conflicts.\r\n\r\n### Detail\r\n\r\nAdd `negative_scopes` option to `ActiveRecord::Enum#enum`, this offers the flexibility to optionally skip the creation of negative scopes.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50919/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50916",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50916/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50916/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50916/events",
        "html_url": "https://github.com/rails/rails/issues/50916",
        "id": 2106914874,
        "node_id": "I_kwDNIULOfZT4Og",
        "number": 50916,
        "title": "Unexpected controller prefix path de-duplication in view partial lookup paths",
        "user": {
            "login": "sfnelson",
            "id": 325974,
            "node_id": "MDQ6VXNlcjMyNTk3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/325974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sfnelson",
            "html_url": "https://github.com/sfnelson",
            "followers_url": "https://api.github.com/users/sfnelson/followers",
            "following_url": "https://api.github.com/users/sfnelson/following{/other_user}",
            "gists_url": "https://api.github.com/users/sfnelson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sfnelson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sfnelson/subscriptions",
            "organizations_url": "https://api.github.com/users/sfnelson/orgs",
            "repos_url": "https://api.github.com/users/sfnelson/repos",
            "events_url": "https://api.github.com/users/sfnelson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sfnelson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-30T04:10:56Z",
        "updated_at": "2024-01-30T04:22:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nCreate nested controller and nested object views where there is overlap between the controller and object namespaces. For example:\r\n\r\n- `Courses::Quiz::Question` and `Courses::Quiz::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Quiz::Extra::QuestionsController`\r\n- `Courses::Quiz::Question` and `Learning::Courses::Quiz::QuestionsController`\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\"\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\nrequire \"active_model/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/unrelated\" => \"learning/questions#new\"\r\n    get \"/duplication\" => \"courses/quiz/questions#new\"\r\n    get \"/collision\" => \"learning/quiz/extra/questions#new\"\r\n    get \"/repetition\" => \"learning/courses/quiz/questions#new\"\r\n  end\r\nend\r\n\r\nmodule Courses\r\n  module Quiz\r\n    class Question\r\n      include ActiveModel::Model\r\n\r\n      attr_accessor :name\r\n    end\r\n\r\n    class QuestionsController < ActionController::Base\r\n      def new\r\n        render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nmodule Learning\r\n  class QuestionsController < ActionController::Base\r\n    def new\r\n      render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n    end\r\n  end\r\n\r\n  module Quiz\r\n    module Extra\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\n\r\n  module Courses\r\n    module Quiz\r\n      class QuestionsController < ActionController::Base\r\n        def new\r\n          render partial: ::Courses::Quiz::Question.new(name: \"partial\")\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def setup\r\n    super\r\n    @views = Dir.mktmpdir\r\n    ActionController::Base.prepend_view_path @views\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_unrelated_partial\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/unrelated\"\r\n    assert_equal \"Nested partial\", last_response.body\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_duplication\r\n    view_file \"courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n\r\n    get \"/duplication\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  # \u274c FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path breaks after the first match, skips 'extra'\r\n  def test_collision\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"Harmful de-duplication <%= question.name %>\"\r\n    view_file \"learning/courses/extra/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/collision\"\r\n    assert_equal \"Collision partial\", last_response.body\r\n  end\r\n\r\n  # \u274c FAILS\r\n  # AbstractRenderer#merge_prefix_into_object_path fails to find overlap because offsets do not align\r\n  def test_repetition\r\n    view_file \"learning/courses/quiz/questions/_question.html.erb\", \"De-duplicated <%= question.name %>\"\r\n    view_file \"learning/courses/quiz/courses/quiz/questions/_question.html.erb\", \"Nested <%= question.name %>\"\r\n\r\n    get \"/repetition\"\r\n    assert_equal \"De-duplicated partial\", last_response.body\r\n  end\r\n\r\n  private\r\n\r\n  def app\r\n    Rails.application\r\n  end\r\n\r\n  def view_file(name, content)\r\n    path = Pathname.new(@views).join(name)\r\n    path.dirname.tap(&:mkpath)\r\n    path.write(content)\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\n- Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `quiz/extra` suffix on the controller does not match the `quiz` prefix on the model so no de-duplication is performed. Partial should be `learning/courses/extra/courses/quiz/questions/_question.html.erb`\r\n- Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   `courses/quiz` suffix on controller matches `courses/quiz` prefix on model so repetition is removed. Partial should be `learning/courses/quiz/questions/_question.html.erb`\r\n\r\n### Actual behavior\r\n\r\n- \u2705 Courses::Quiz::Question and Courses::Quiz::QuestionsController\r\n   module duplication is detected and removed\r\n- \u274c Courses::Quiz::Question and Learning::Quiz::Extra::QuestionsController\r\n   `Quiz` is detected as overlap and `Extra` is dropped from the partial path, this is confusing and inconsistent\r\n- \u274c Courses::Quiz::Question and Learning::Courses::Quiz::QuestionsController\r\n   no module duplication is detected, so full module path to controller is prefixed on the object path \u2013 deep repetition\r\n\r\n### System configuration\r\n**Rails version**: 7.1.0\r\n\r\n**Ruby version**: 3.2.3\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50916/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50916/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50914",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50914/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50914/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50914/events",
        "html_url": "https://github.com/rails/rails/pull/50914",
        "id": 2106594568,
        "node_id": "PR_kwDNIULOZWKOxQ",
        "number": 50914,
        "title": "Generate devcontainer files by default",
        "user": {
            "login": "andrewn617",
            "id": 39735028,
            "node_id": "MDQ6VXNlcjM5NzM1MDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/39735028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewn617",
            "html_url": "https://github.com/andrewn617",
            "followers_url": "https://api.github.com/users/andrewn617/followers",
            "following_url": "https://api.github.com/users/andrewn617/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewn617/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewn617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewn617/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewn617/orgs",
            "repos_url": "https://api.github.com/users/andrewn617/repos",
            "events_url": "https://api.github.com/users/andrewn617/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewn617/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            },
            {
                "id": 1174770998,
                "node_id": "MDU6TGFiZWwxMTc0NzcwOTk4",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailbox",
                "name": "actionmailbox",
                "color": "f4a6cb",
                "default": false,
                "description": ""
            },
            {
                "id": 1180817762,
                "node_id": "MDU6TGFiZWwxMTgwODE3NzYy",
                "url": "https://api.github.com/repos/rails/rails/labels/actiontext",
                "name": "actiontext",
                "color": "3bc667",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-29T23:03:25Z",
        "updated_at": "2024-02-01T23:57:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50914",
            "html_url": "https://github.com/rails/rails/pull/50914",
            "diff_url": "https://github.com/rails/rails/pull/50914.diff",
            "patch_url": "https://github.com/rails/rails/pull/50914.patch",
            "merged_at": null
        },
        "body": "https://github.com/rails/rails/issues/50566\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created to generate `devcontainer` files for new Rails apps.\r\n\r\n### Detail\r\n\r\nThis Pull Request adds templates for devcontainer files (`devcontainer.json`, `Dockerfile` and `docker-compose.yml`) to be generated on `rails new`.\r\n\r\nBy default the devcontainer contains the following:\r\n- A redis container for Sidekiq and Action Cable\r\n- A database (SQLite, Postgres, MySQL or MariaDB)\r\n- A Headless chrome container for system tests\r\n- Active Storage configured to use the local disk and with preview features working\r\n\r\nIf `rails new` is called with options to skip any of the above they will be removed from the dev container config.\r\n\r\nThe dev container can be skipped entirely with the `--skip_devcontainer` option.\r\n\r\n### Additional information\r\n\r\nA few changes are needed to other files generated by rails new to make sure new Rails apps can be developed both in a container and locally.\r\n\r\n- Differentiate `CABLE_REDIS_URL` and `JOBS_REDIS_URL` instead of just using `REDIS_URL` for both (A PR will need to be opened to turbo-rails to make this change as well)\r\n- For MariaDB and MySQL use the `RAILS_DATABASE_HOST` if it's set (which it will be in a container) and fallback to `localhost`\r\n- For Postgres set the host (`RAILS_DATABASE_HOST`), username and password when in a container\r\n\r\nFor system tests, we need to configure the `Capybara` host and port to the selenium container. Rather than expose the implementation details of `Capybara` to the developer, we created a new `served_by` method on `SystemTestCase` to configure these.\r\n\r\n`db:system:change` re-generates `database.yml`. I added a `skip-devcontainer` option to this generator with a default of `true`. So, any existing apps that use this command will not get devcontainer config in their db yaml. Users can opt in to have devcontainer config added to the new db yml by adding `--skip-devcontainer=false`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50909",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50909/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50909/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50909/events",
        "html_url": "https://github.com/rails/rails/pull/50909",
        "id": 2104413485,
        "node_id": "PR_kwDNIULOZUSoNQ",
        "number": 50909,
        "title": "[ci skip] [docs] make increment requirement explicit",
        "user": {
            "login": "jamiemccarthy",
            "id": 40373,
            "node_id": "MDQ6VXNlcjQwMzcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40373?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamiemccarthy",
            "html_url": "https://github.com/jamiemccarthy",
            "followers_url": "https://api.github.com/users/jamiemccarthy/followers",
            "following_url": "https://api.github.com/users/jamiemccarthy/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamiemccarthy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamiemccarthy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamiemccarthy/subscriptions",
            "organizations_url": "https://api.github.com/users/jamiemccarthy/orgs",
            "repos_url": "https://api.github.com/users/jamiemccarthy/repos",
            "events_url": "https://api.github.com/users/jamiemccarthy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamiemccarthy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-29T00:07:29Z",
        "updated_at": "2024-01-29T00:20:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50909",
            "html_url": "https://github.com/rails/rails/pull/50909",
            "diff_url": "https://github.com/rails/rails/pull/50909.diff",
            "patch_url": "https://github.com/rails/rails/pull/50909.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAs of December, [ActionController::Metal::RateLimiting](https://github.com/rails/rails/blob/main/actionpack/lib/action_controller/metal/rate_limiting.rb) provides rate limiting through the `increment` method of any cache store. RateLimiting relies on a feature of the underlying store. This feature needs to be documented, so that it remains supported, and so alternative stores know to support it.\r\n\r\nThis PR has been created to document this behavior.\r\n\r\n### Detail\r\n\r\nThe feature is that `increment`, when passed `expires_in`, will set expiration time when the key is first created, and ignore that option if the key already exists.\r\n\r\nThat functionality is already tested [here](https://github.com/rails/rails/blob/cf26c5482924babca573e6c01594d77e3321ae58/activesupport/test/cache/behaviors/cache_increment_decrement_behavior.rb#L34), in the `CacheIncrementDecrementBehavior` test module.\r\n\r\nThis Pull Request changes the documentation of `ActiveSupport::Cache::Store.increment` to reflect a now-required feature of existing stores.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50909/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50909/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50901",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50901/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50901/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50901/events",
        "html_url": "https://github.com/rails/rails/pull/50901",
        "id": 2104069423,
        "node_id": "PR_kwDNIULOZUBH_g",
        "number": 50901,
        "title": "[Fix #50897] Autosaving `has_one` sets foreign key attribute when unchanged",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-28T09:30:20Z",
        "updated_at": "2024-01-30T10:42:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50901",
            "html_url": "https://github.com/rails/rails/pull/50901",
            "diff_url": "https://github.com/rails/rails/pull/50901.diff",
            "patch_url": "https://github.com/rails/rails/pull/50901.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes https://github.com/rails/rails/issues/50897\r\nSimilar to https://github.com/rails/rails/pull/46759\r\n\r\n### Detail\r\n\r\nUpdates `ActiveRecord::AutosaveAssociation#save_has_one_association` to only update the foreign key attribute on the child record if it has changed. This makes its behaviour consistent with `belongs_to` associations and ensures that `ActiveRecord::ReadOnlyAttributeError` isn't raised when no changes have been made to the attribute.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nNone.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50901/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50897",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50897/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50897/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50897/events",
        "html_url": "https://github.com/rails/rails/issues/50897",
        "id": 2103568249,
        "node_id": "I_kwDNIULOfWHneQ",
        "number": 50897,
        "title": "Incorrectly raising `ReadonlyAttributeError` when autosaving `has_one` association with readonly foreign key",
        "user": {
            "login": "Earlopain",
            "id": 14981592,
            "node_id": "MDQ6VXNlcjE0OTgxNTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/14981592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Earlopain",
            "html_url": "https://github.com/Earlopain",
            "followers_url": "https://api.github.com/users/Earlopain/followers",
            "following_url": "https://api.github.com/users/Earlopain/following{/other_user}",
            "gists_url": "https://api.github.com/users/Earlopain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Earlopain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Earlopain/subscriptions",
            "organizations_url": "https://api.github.com/users/Earlopain/orgs",
            "repos_url": "https://api.github.com/users/Earlopain/repos",
            "events_url": "https://api.github.com/users/Earlopain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Earlopain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 4,
        "created_at": "2024-01-27T12:29:15Z",
        "updated_at": "2024-01-28T20:15:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Rails 7.1 sets `raise_on_assign_to_attr_readonly` to true. In the following repro I set a column unrelated to `attr_readonly` yet the error is still being set. If I stop setting this column the error goes away.\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord.raise_on_assign_to_attr_readonly = true\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :forum_topics, force: true do |t|\r\n    t.integer :updater_id\r\n    t.text :title\r\n  end\r\n\r\n  create_table :forum_posts, force: true do |t|\r\n    t.integer :updater_id\r\n    t.integer :forum_topic_id\r\n    t.text :body\r\n  end\r\nend\r\n\r\nclass ForumTopic < ActiveRecord::Base\r\n  has_one :original_forum_post, -> { order(\"forum_posts.id asc\") }, class_name: \"ForumPost\", inverse_of: :forum_topic\r\n  validates_associated :original_forum_post\r\n  accepts_nested_attributes_for :original_forum_post\r\nend\r\n\r\nclass ForumPost < ActiveRecord::Base\r\n  attr_readonly :forum_topic_id\r\n  belongs_to :forum_topic\r\n\r\n  before_validation do |rec|\r\n    # next # Skipping setting this column makes the error go away\r\n    if persisted?\r\n      rec.updater_id = 456\r\n    else\r\n      rec.updater_id = 123\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_readonly_attr_exception\r\n    topic = ForumTopic.create!(title: \"Hi!\", original_forum_post_attributes: { body: \"What's up?\" })\r\n    topic.update(title: \"nevermind\") # => ActiveRecord::ReadonlyAttributeError: forum_topic_id\r\n    assert_equal(456, topic.original_forum_post.updater_id)\r\n  end\r\nend\r\n```\r\n\r\n### System configuration\r\n**Rails version**: master\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50895",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50895/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50895/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50895/events",
        "html_url": "https://github.com/rails/rails/pull/50895",
        "id": 2103219381,
        "node_id": "PR_kwDNIULOZTZN2g",
        "number": 50895,
        "title": "Enhanced ActiveStorage variant tracking control",
        "user": {
            "login": "JaceBayless",
            "id": 25781337,
            "node_id": "MDQ6VXNlcjI1NzgxMzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25781337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JaceBayless",
            "html_url": "https://github.com/JaceBayless",
            "followers_url": "https://api.github.com/users/JaceBayless/followers",
            "following_url": "https://api.github.com/users/JaceBayless/following{/other_user}",
            "gists_url": "https://api.github.com/users/JaceBayless/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JaceBayless/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JaceBayless/subscriptions",
            "organizations_url": "https://api.github.com/users/JaceBayless/orgs",
            "repos_url": "https://api.github.com/users/JaceBayless/repos",
            "events_url": "https://api.github.com/users/JaceBayless/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JaceBayless/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-27T04:41:38Z",
        "updated_at": "2024-01-27T04:42:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50895",
            "html_url": "https://github.com/rails/rails/pull/50895",
            "diff_url": "https://github.com/rails/rails/pull/50895.diff",
            "patch_url": "https://github.com/rails/rails/pull/50895.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n#### My Specific Use Case\r\n\r\nIn my project, where `ActiveStorage.track_variants = true`, I needed to generate a variant of an image (a thumbnail for a room on a floorplan) but did not want to create a variant record of the original image record. This is because I intended to save the variant on a child relation, separate from the original image record.\r\n\r\n#### The Challenge\r\nWith `ActiveStorage.track_variants = true` every variant generated through `ActiveStorage` is automatically tracked in the database to the original record. There are cases in this application where we **do** want to track these variant records so I was unable to change the default configuration. This meant to properly generate my variant I had to use `ImageProcessing::Vips` directly to not generate the variant record. This worked but generated two concerns for me:\r\n\r\n1. This specific code is dependent on `ImageProcessing::Vips` and if we were to ever migrate to another image processor we would have to remember to update this code as well instead of just relying on the `ActiveStorage` default processor.\r\n2. It strays enough from the standard pattern when generating `ActiveStorage` variants that without good documentation it can become confusing to maintain.\r\n\r\n### Detail\r\n\r\nThis pull request adds the `track` option to the `variant` method which allows for overriding of the `ActiveStorage.track_variants`. This is useful when in cases where you want to stray from the application's standard configuration.\r\n\r\n```ruby\r\nActiveSupport.track_variants\r\n# => true\r\nuser.avatar.variant(track: false, resize_to_limit: [100, 100])\r\n# => #<ActiveStorage::Variant:0x00007f4e0004ffb0> \r\n```\r\nand\r\n```ruby\r\nActiveSupport.track_variants\r\n# => false\r\nuser.avatar.variant(track: true, resize_to_limit: [100, 100])\r\n# => #<ActiveStorage::VariantWithRecord:0x00007f4e0004ffb0> \r\n```\r\n\r\n### Additional information\r\n\r\nThis is my first time contributing to Rails and I appreciate anyone who takes the time to read all this. I tried my best to follow all conventions and to keep all current functionality, but in the case that I missed something I'd be happy to discuss and fix whatever is needed.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50895/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50895/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50894",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50894/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50894/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50894/events",
        "html_url": "https://github.com/rails/rails/pull/50894",
        "id": 2103022783,
        "node_id": "PR_kwDNIULOZTPMhg",
        "number": 50894,
        "title": "Add cost argument to has_secure_password",
        "user": {
            "login": "t27duck",
            "id": 545604,
            "node_id": "MDQ6VXNlcjU0NTYwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/545604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t27duck",
            "html_url": "https://github.com/t27duck",
            "followers_url": "https://api.github.com/users/t27duck/followers",
            "following_url": "https://api.github.com/users/t27duck/following{/other_user}",
            "gists_url": "https://api.github.com/users/t27duck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t27duck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t27duck/subscriptions",
            "organizations_url": "https://api.github.com/users/t27duck/orgs",
            "repos_url": "https://api.github.com/users/t27duck/repos",
            "events_url": "https://api.github.com/users/t27duck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t27duck/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-26T22:52:13Z",
        "updated_at": "2024-01-27T05:30:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50894",
            "html_url": "https://github.com/rails/rails/pull/50894",
            "diff_url": "https://github.com/rails/rails/pull/50894.diff",
            "patch_url": "https://github.com/rails/rails/pull/50894.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThere may be instances where a developer is working in an environment where a higher cost than the default (12) for BCrypt is required either due to arbitrary security requirements or the recommended minimum changes and the version of bcrypt used isn't updated.\r\n\r\n### Detail\r\n\r\nThis change adds a `cost:` argument to `has_secure_password`. If provided, it will use that value for the password cost. Its value is validated to make sure it's between `BCrypt::Engine::MIN_COST` and `BCrypt::Engine::MAX_COST`.\r\n\r\nAdditionally `[password attribute]_cost` is exposed as a convenience method to determine the cost used for the set password hash. This can be used to review the current costs from a user record and either transparently upgrade the user's password or force a password reset.\r\n\r\n### Additional information\r\n\r\nI'm not 100% married to using `cost` as the argument name as it affects only new passwords created for the record going forward.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50892",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50892/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50892/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50892/events",
        "html_url": "https://github.com/rails/rails/pull/50892",
        "id": 2102819884,
        "node_id": "PR_kwDNIULOZTEC2A",
        "number": 50892,
        "title": "Documentation: Expand documentation on has_one_attached method [ci-skip].",
        "user": {
            "login": "Takahashi-Seiji",
            "id": 140453075,
            "node_id": "U_kgDOCF8k0w",
            "avatar_url": "https://avatars.githubusercontent.com/u/140453075?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Takahashi-Seiji",
            "html_url": "https://github.com/Takahashi-Seiji",
            "followers_url": "https://api.github.com/users/Takahashi-Seiji/followers",
            "following_url": "https://api.github.com/users/Takahashi-Seiji/following{/other_user}",
            "gists_url": "https://api.github.com/users/Takahashi-Seiji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Takahashi-Seiji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Takahashi-Seiji/subscriptions",
            "organizations_url": "https://api.github.com/users/Takahashi-Seiji/orgs",
            "repos_url": "https://api.github.com/users/Takahashi-Seiji/repos",
            "events_url": "https://api.github.com/users/Takahashi-Seiji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Takahashi-Seiji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-26T20:02:30Z",
        "updated_at": "2024-01-30T18:45:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50892",
            "html_url": "https://github.com/rails/rails/pull/50892",
            "diff_url": "https://github.com/rails/rails/pull/50892.diff",
            "patch_url": "https://github.com/rails/rails/pull/50892.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nGive further context about the requirements for using the has_one_attached method. \r\n\r\nI have an application that does not have an ActiveJob::Backend queue adapter. When I tried to destroy a record, it raised an error that I needed a queue adapter. There is a dependency between the has_one_attached method and a queue adapter. \r\n\r\nThat is why adding more context about the functionality and requirements about using the has_one_attached method is important. \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50889",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50889/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50889/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50889/events",
        "html_url": "https://github.com/rails/rails/pull/50889",
        "id": 2102411019,
        "node_id": "PR_kwDNIULOZStxpQ",
        "number": 50889,
        "title": "Introduce `ActiveSupport::TestCase.around`",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2024-01-26T15:29:23Z",
        "updated_at": "2024-01-29T19:58:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50889",
            "html_url": "https://github.com/rails/rails/pull/50889",
            "diff_url": "https://github.com/rails/rails/pull/50889.diff",
            "patch_url": "https://github.com/rails/rails/pull/50889.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nWhen discussing testing frameworks for new projects, the absence of `around` hooks is usually a focal point of the conversation that pushes consensus toward alternative test harnesses.\r\n\r\nMinitest itself [will not support built-in `around` hooks](https://github.com/minitest/minitest/issues/892). While the [minitest-hooks](https://github.com/jeremyevans/minitest-hooks) gem provides support for `around`, Active Support's callback system makes adding `around` hooks fairly trivial, and is guaranteed to be implemented in the same way as all other callbacks (Controller, Jobs, Mailers, etc.).\r\n\r\n\r\n### Detail\r\n\r\nAdd a callback, which runs around `TestCase#setup`, the `test` block, and `TestCase#teardown`. Yields the test class instance and the test case to the block:\r\n\r\n```ruby\r\nclass Test < ActiveSupport::TestCase\r\n  around do |test_case, &block|\r\n    Client.with(stubbed: true, &block)\r\n  end\r\nend\r\n```\r\n\r\n### Additional Information\r\n\r\nTo support this change, rename the `activesupport/test/testing/after_teardown_test.rb` file to `activesupport/test/testing/callbacks_test.rb`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50889/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50889/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50886",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50886/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50886/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50886/events",
        "html_url": "https://github.com/rails/rails/pull/50886",
        "id": 2102255707,
        "node_id": "PR_kwDNIULOZSlTeQ",
        "number": 50886,
        "title": "[Fix #50812] Don't duplicate selects, inner and outer joins when merging with STI",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-26T13:54:50Z",
        "updated_at": "2024-01-30T10:41:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50886",
            "html_url": "https://github.com/rails/rails/pull/50886",
            "diff_url": "https://github.com/rails/rails/pull/50886.diff",
            "patch_url": "https://github.com/rails/rails/pull/50886.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes https://github.com/rails/rails/issues/50812\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `#merge_select_values`, `#merge_joins` and `#merge_outer_joins` in `ActiveRecord::Relation::Merger` to unionise selects, inner and outer joins when the two sources of a `merge` are related via STI.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nThe only similar case left in `ActiveRecord::Relation::Merger` is when [merging preloads](https://github.com/rails/rails/blob/68eade83c87ae309191add6dfa4959d7d7e07464/activerecord/lib/active_record/relation/merger.rb#L101).\r\n\r\nI don't think that is similar to these cases since the preload values are simply used to preload associations. I thought I would just mention it anyway.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50886/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50886/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50885",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50885/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50885/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50885/events",
        "html_url": "https://github.com/rails/rails/pull/50885",
        "id": 2102202900,
        "node_id": "PR_kwDNIULOZSiasw",
        "number": 50885,
        "title": "Document Attached::Model#attachment_changes [ci skip]",
        "user": {
            "login": "tsvallender",
            "id": 122306143,
            "node_id": "U_kgDOB0o-Xw",
            "avatar_url": "https://avatars.githubusercontent.com/u/122306143?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tsvallender",
            "html_url": "https://github.com/tsvallender",
            "followers_url": "https://api.github.com/users/tsvallender/followers",
            "following_url": "https://api.github.com/users/tsvallender/following{/other_user}",
            "gists_url": "https://api.github.com/users/tsvallender/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tsvallender/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tsvallender/subscriptions",
            "organizations_url": "https://api.github.com/users/tsvallender/orgs",
            "repos_url": "https://api.github.com/users/tsvallender/repos",
            "events_url": "https://api.github.com/users/tsvallender/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tsvallender/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-26T13:18:39Z",
        "updated_at": "2024-01-26T14:14:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50885",
            "html_url": "https://github.com/rails/rails/pull/50885",
            "diff_url": "https://github.com/rails/rails/pull/50885.diff",
            "patch_url": "https://github.com/rails/rails/pull/50885.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAdds documentation for the `attachment_changes` method of Active Storage.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50885/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50883",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50883/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50883/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50883/events",
        "html_url": "https://github.com/rails/rails/pull/50883",
        "id": 2101864232,
        "node_id": "PR_kwDNIULOZSQNiA",
        "number": 50883,
        "title": "Put plural inverse association inference behind a configuration flag",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/83",
            "html_url": "https://github.com/rails/rails/milestone/83",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/83/labels",
            "id": 9964242,
            "node_id": "MI_kwDNIULOAJgK0g",
            "number": 83,
            "title": "7.2.0",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 9,
            "closed_issues": 7,
            "state": "open",
            "created_at": "2023-09-25T20:29:14Z",
            "updated_at": "2024-01-26T09:49:33Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 1,
        "created_at": "2024-01-26T09:19:56Z",
        "updated_at": "2024-01-26T17:23:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50883",
            "html_url": "https://github.com/rails/rails/pull/50883",
            "diff_url": "https://github.com/rails/rails/pull/50883.diff",
            "patch_url": "https://github.com/rails/rails/pull/50883.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50284\r\n\r\nWhile having the inverse association configured it generally positive as it avoid some extra queries etc, infering it may break legecy code, as evidenced by how it broke `ActiveStorage::Blob` in https://github.com/rails/rails/pull/50800\r\n\r\nAs such we can't just enable this behavior immediately, we need to provide and upgrade path for users.\r\n\r\nAt this stage this PR is just a quick draft to discuss how exactly we should gate this. We can just make it a regular framework default, but perhaps emitting a deprecation warning when we would have infered the inverse relation would help users upgrade?  cc @rafaelfranca as you generally have great insights on this kind of new framework default.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50883/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50879",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50879/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50879/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50879/events",
        "html_url": "https://github.com/rails/rails/pull/50879",
        "id": 2101071156,
        "node_id": "PR_kwDNIULOZRn03Q",
        "number": 50879,
        "title": "Transform actionpack documentation to Markdown",
        "user": {
            "login": "rafaelfranca",
            "id": 47848,
            "node_id": "MDQ6VXNlcjQ3ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rafaelfranca",
            "html_url": "https://github.com/rafaelfranca",
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-25T19:53:03Z",
        "updated_at": "2024-01-25T22:29:37Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50879",
            "html_url": "https://github.com/rails/rails/pull/50879",
            "diff_url": "https://github.com/rails/rails/pull/50879.diff",
            "patch_url": "https://github.com/rails/rails/pull/50879.patch",
            "merged_at": null
        },
        "body": "Related to #50759\r\n\r\n`./tools/rdoc-to-md -a --only=actionpack` to reproduce the results.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50879/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50873",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50873/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50873/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50873/events",
        "html_url": "https://github.com/rails/rails/pull/50873",
        "id": 2100413008,
        "node_id": "PR_kwDNIULOZREGFA",
        "number": 50873,
        "title": "dump schema: ignore tables from any postgres schema",
        "user": {
            "login": "gagalago",
            "id": 519226,
            "node_id": "MDQ6VXNlcjUxOTIyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/519226?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gagalago",
            "html_url": "https://github.com/gagalago",
            "followers_url": "https://api.github.com/users/gagalago/followers",
            "following_url": "https://api.github.com/users/gagalago/following{/other_user}",
            "gists_url": "https://api.github.com/users/gagalago/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gagalago/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gagalago/subscriptions",
            "organizations_url": "https://api.github.com/users/gagalago/orgs",
            "repos_url": "https://api.github.com/users/gagalago/repos",
            "events_url": "https://api.github.com/users/gagalago/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gagalago/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-25T13:31:52Z",
        "updated_at": "2024-01-25T13:41:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50873",
            "html_url": "https://github.com/rails/rails/pull/50873",
            "diff_url": "https://github.com/rails/rails/pull/50873.diff",
            "patch_url": "https://github.com/rails/rails/pull/50873.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nthis pull request improve the current implementation of ignoring table during the schema dump by allowing to ignore tables from other postgres schema than \"public\".\r\n\r\n### Detail\r\n\r\nThis Pull Request changes [REPLACE ME]\r\n\r\n### Additional information\r\n\r\nthe proposed implementation lack the ability to specify exactly from which schema, the table is ignored but I think that even do, it's better than the current implementation.\r\n\r\n- [pg_dump documentation](https://www.postgresql.org/docs/current/app-pgdump.html)\r\n- [pattern documentation](https://www.postgresql.org/docs/current/app-psql.html#APP-PSQL-PATTERNS\r\n\r\n### Checklist\r\n\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\nI feel that the code change is too small to request updating CHANGELOG or writing new tests",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50868",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50868/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50868/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50868/events",
        "html_url": "https://github.com/rails/rails/issues/50868",
        "id": 2099221011,
        "node_id": "I_kwDNIULOfR-SEw",
        "number": 50868,
        "title": "Comparing `Time` object with an integer doesn't throw an error ",
        "user": {
            "login": "tgxworld",
            "id": 4335742,
            "node_id": "MDQ6VXNlcjQzMzU3NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4335742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgxworld",
            "html_url": "https://github.com/tgxworld",
            "followers_url": "https://api.github.com/users/tgxworld/followers",
            "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
            "organizations_url": "https://api.github.com/users/tgxworld/orgs",
            "repos_url": "https://api.github.com/users/tgxworld/repos",
            "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgxworld/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107194,
                "node_id": "MDU6TGFiZWwxMDcxOTQ=",
                "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
                "name": "activesupport",
                "color": "FC9300",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-24T22:29:19Z",
        "updated_at": "2024-01-30T04:47:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/time\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_stuff\r\n    # This would have raise an argument error in Ruby for trying to compare a Time object with an Integer\r\n    assert Time.now >= Time.now.to_i - 999_999\r\n\r\n    assert Time.now.to_i >= Time.now.to_i - 999_999\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI'm not sure but I would expect one of the following:\r\n\r\n1. Raise an argument error like what Ruby does when trying to compare a `Time` object with an `Integer`\r\n2. Convert the `Time` object to an `Integer` before comparing\r\n3. Convert the `Integer` to a `Time` object before comparing\r\n\r\n### Actual behavior\r\n\r\nNo errors are raised and the code will always evaluate to `false`.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50867",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50867/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50867/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50867/events",
        "html_url": "https://github.com/rails/rails/pull/50867",
        "id": 2098780342,
        "node_id": "PR_kwDNIULOZPrnLA",
        "number": 50867,
        "title": "Initialize ActiveRecord::Migrator.migrations_paths at application initialization",
        "user": {
            "login": "fsateler",
            "id": 1322013,
            "node_id": "MDQ6VXNlcjEzMjIwMTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsateler",
            "html_url": "https://github.com/fsateler",
            "followers_url": "https://api.github.com/users/fsateler/followers",
            "following_url": "https://api.github.com/users/fsateler/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsateler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsateler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsateler/subscriptions",
            "organizations_url": "https://api.github.com/users/fsateler/orgs",
            "repos_url": "https://api.github.com/users/fsateler/repos",
            "events_url": "https://api.github.com/users/fsateler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsateler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-24T17:44:10Z",
        "updated_at": "2024-01-24T17:46:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50867",
            "html_url": "https://github.com/rails/rails/pull/50867",
            "diff_url": "https://github.com/rails/rails/pull/50867.diff",
            "patch_url": "https://github.com/rails/rails/pull/50867.patch",
            "merged_at": null
        },
        "body": "This is already done in rake tasks in the `load_config` task. However, if migrations want to be manipulated/used by a non-rake program this initialization would miss any extra directories configured by the user.\r\n\r\nWe move the initialization to an initializer block. With this we can remove the rake config since it depends on `environment` anyway.\r\n\r\n### Motivation / Background\r\n\r\nIn our app we use schema-based multitenancy which means we need to setup and migrate for each tenant. We have created\r\na few helpers to aid in this task. \r\nRecently, we began modularizing our app, and started moving our migrations into packs. \r\nThen we started facing issues with migrations that tried to run more than once.\r\nWe diagnosed the root cause that our tenant creation command was not invoking `db:load_config` before loading the schema.\r\nThis resulted in \"packed\" migrations not being recorded in the initial seed of the `schema_migrations` table. Then when we attempted to run migrations on that tenant those migrations would try to run and fail. \r\n\r\nThis Pull Request has been created because a fix for this is to ensure whenever the app is loaded, the correct default paths\r\nare loaded.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the initialization from a rake task to the app initialization process.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50867/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 3,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50862",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50862/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50862/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50862/events",
        "html_url": "https://github.com/rails/rails/pull/50862",
        "id": 2097954073,
        "node_id": "PR_kwDNIULOZO-RWg",
        "number": 50862,
        "title": "Accept Tempfile as ActiveStorage attachable",
        "user": {
            "login": "shouichi",
            "id": 99586,
            "node_id": "MDQ6VXNlcjk5NTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/99586?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shouichi",
            "html_url": "https://github.com/shouichi",
            "followers_url": "https://api.github.com/users/shouichi/followers",
            "following_url": "https://api.github.com/users/shouichi/following{/other_user}",
            "gists_url": "https://api.github.com/users/shouichi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shouichi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shouichi/subscriptions",
            "organizations_url": "https://api.github.com/users/shouichi/orgs",
            "repos_url": "https://api.github.com/users/shouichi/repos",
            "events_url": "https://api.github.com/users/shouichi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shouichi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-24T10:31:28Z",
        "updated_at": "2024-01-29T23:50:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50862",
            "html_url": "https://github.com/rails/rails/pull/50862",
            "diff_url": "https://github.com/rails/rails/pull/50862.diff",
            "patch_url": "https://github.com/rails/rails/pull/50862.patch",
            "merged_at": null
        },
        "body": "`File` is already accepted as an attachable, so why not?",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50861",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50861/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50861/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50861/events",
        "html_url": "https://github.com/rails/rails/pull/50861",
        "id": 2097724253,
        "node_id": "PR_kwDNIULOZOxlpw",
        "number": 50861,
        "title": "ActionView: Raise on invalid format",
        "user": {
            "login": "3v0k4",
            "id": 5238698,
            "node_id": "MDQ6VXNlcjUyMzg2OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5238698?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3v0k4",
            "html_url": "https://github.com/3v0k4",
            "followers_url": "https://api.github.com/users/3v0k4/followers",
            "following_url": "https://api.github.com/users/3v0k4/following{/other_user}",
            "gists_url": "https://api.github.com/users/3v0k4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3v0k4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3v0k4/subscriptions",
            "organizations_url": "https://api.github.com/users/3v0k4/orgs",
            "repos_url": "https://api.github.com/users/3v0k4/repos",
            "events_url": "https://api.github.com/users/3v0k4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3v0k4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-24T08:37:24Z",
        "updated_at": "2024-01-24T08:37:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50861",
            "html_url": "https://github.com/rails/rails/pull/50861",
            "diff_url": "https://github.com/rails/rails/pull/50861.diff",
            "patch_url": "https://github.com/rails/rails/pull/50861.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFixes #45636 \r\n\r\n### Detail\r\n\r\nThis Pull Request adds a check in `ActionView::PathSet#find_all` to ensure all passed formats are valid.\r\n\r\nSince `#find_all` is used by `#exists?` and `#find`, the check is extended to all the public methods in the class that search templates.\r\n\r\n### Additional information\r\n\r\n.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50861/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50858",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50858/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50858/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50858/events",
        "html_url": "https://github.com/rails/rails/pull/50858",
        "id": 2097141500,
        "node_id": "PR_kwDNIULOZOSs4A",
        "number": 50858,
        "title": "Support options for ActionMailer delivery callbacks",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107188,
                "node_id": "MDU6TGFiZWwxMDcxODg=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
                "name": "actionmailer",
                "color": "8B00FC",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T23:16:27Z",
        "updated_at": "2024-01-23T23:16:31Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50858",
            "html_url": "https://github.com/rails/rails/pull/50858",
            "diff_url": "https://github.com/rails/rails/pull/50858.diff",
            "patch_url": "https://github.com/rails/rails/pull/50858.patch",
            "merged_at": null
        },
        "body": "Closes https://github.com/rails/rails/issues/50830.\r\n\r\nThe code works, but docs/tests etc are currently missing. I want to validate the approach before proceeding.\r\n\r\nInside action mailer I am reusing private methods from the implementation of callbacks from the action controller, see https://github.com/rails/rails/blob/main/actionpack/lib/abstract_controller/callbacks.rb.\r\n\r\nThe questions to consider are:\r\n1. Should the mailer callbacks really depend on the internals of controller callbacks, considering that it already includes it https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionmailer/lib/action_mailer/base.rb#L493\r\n2. Controllers callbacks have a `raise_on_missing_callbacks_action`, see https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionpack/lib/abstract_controller/callbacks.rb#L36 which can be set via `config.action_controller. raise_on_missing_callbacks_action`. This kinda makes sense for action mailer too, so should we introduce `config.action_mailer.raise_on_missing_callbacks_action` config? \r\n3. Controller callbacks use the word `\"controller\"`, see https://github.com/rails/rails/blob/776626ff987a96201b0bdbd86d716ca6698fa8b3/actionpack/lib/abstract_controller/callbacks.rb#L54, while for mailer we should use the `\"mailer\"` word or should we make the message text more generic? \r\n\r\ncc @bensheldon ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50856",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50856/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50856/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50856/events",
        "html_url": "https://github.com/rails/rails/pull/50856",
        "id": 2096854463,
        "node_id": "PR_kwDNIULOZODAXw",
        "number": 50856,
        "title": "Document autosave validation behavior for ActiveRecord associations [ci skip]",
        "user": {
            "login": "Dmoment",
            "id": 29010172,
            "node_id": "MDQ6VXNlcjI5MDEwMTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/29010172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dmoment",
            "html_url": "https://github.com/Dmoment",
            "followers_url": "https://api.github.com/users/Dmoment/followers",
            "following_url": "https://api.github.com/users/Dmoment/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dmoment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dmoment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dmoment/subscriptions",
            "organizations_url": "https://api.github.com/users/Dmoment/orgs",
            "repos_url": "https://api.github.com/users/Dmoment/repos",
            "events_url": "https://api.github.com/users/Dmoment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dmoment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-23T19:41:36Z",
        "updated_at": "2024-01-23T21:03:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50856",
            "html_url": "https://github.com/rails/rails/pull/50856",
            "diff_url": "https://github.com/rails/rails/pull/50856.diff",
            "patch_url": "https://github.com/rails/rails/pull/50856.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nThis Pull Request needs to be merged to document the behavior of autosave: true enabling validations for belongs_to and has_one associations in ActiveRecord. Currently, this behavior is implemented in the code but not mentioned in the official documentation. This can lead to confusion for developers who rely on the Rails guides for accurate information on how ActiveRecord associations work. Including this information will improve the clarity and comprehensiveness of the Rails documentation.\r\n-->\r\n\r\n### Detail\r\n\r\nThis Pull Request adds documentation comments to the belongs_to and has_one methods in ActiveRecord::Associations to explain that autosave: true also enables validations by default. This is to reflect the actual behavior of these methods, as described in the source code and observed in application behavior.\r\n\r\n### Additional information\r\n\r\nReference to the issue discussed in Rails: Undocumented - validations enabled by autosave #50807\r\nInline gemfile with bundler example -\r\n``` ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n  gem \"rails\", \"7.1.3\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :authors do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table :books do |t|\r\n    t.belongs_to :author\r\n    t.string :title\r\n  end\r\nend\r\n\r\nclass Author < ActiveRecord::Base\r\n  has_one :book, autosave: true\r\nend\r\n\r\nclass Book < ActiveRecord::Base\r\n  belongs_to :author\r\n  validates :title, presence: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_autosave_with_validations\r\n    author = Author.new(name: \"J.K. Rowling\")\r\n    author.build_book # Not setting a title to trigger validation failure\r\n\r\n    refute author.save, \"Author should not be saved due to book validation failure\"\r\n    assert author.book.errors.full_messages.include?(\"Title can't be blank\"), \"Book should contain error on title\"\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change, specifically the addition of documentation for autosave: true behavior.\r\n* [x] Commit message includes a detailed description of the changes, for example: [Doc #50807] Document autosave validation behavior for associations.\r\n* [x] Tests are not required as this is a documentation update.\r\n* [x] CHANGELOG is not updated since this is a minor documentation change and does not affect library behavior.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50856/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50852",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50852/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50852/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50852/events",
        "html_url": "https://github.com/rails/rails/pull/50852",
        "id": 2096320468,
        "node_id": "PR_kwDNIULOZNlvqQ",
        "number": 50852,
        "title": "Action View: Fallback to existing partial when possible",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T15:19:52Z",
        "updated_at": "2024-01-23T15:27:15Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50852",
            "html_url": "https://github.com/rails/rails/pull/50852",
            "diff_url": "https://github.com/rails/rails/pull/50852.diff",
            "patch_url": "https://github.com/rails/rails/pull/50852.patch",
            "merged_at": null
        },
        "body": "Closes [#50844][]\r\n\r\nMotivation / Background\r\n---\r\n\r\nA controller declared in the top-level module can render a top-level Active Model instance whose partial is declared in the root view directory (like `articles/_article.html.erb`).\r\n\r\nA controller scoped within a module can render an Active Model instance whose partial is similarly scoped within view directory (like `scoped/articles/_article.html.erb`).\r\n\r\nA controller scoped within a module cannot render an Active Model instance whose partial is declared in the root view directory (like `articles/_article.html.erb`), despite the absence of a similarly scoped partial.\r\n\r\nThis is intended behavior that's powered by\r\n[`config.action_view.prefix_partial_path_with_controller_namespace = true`][prefix_partial_path_with_controller_namespace] (`true` by default).\r\n\r\nThis change was introduced in March of 2012 as part of [#5625][].\r\n\r\nDetail\r\n---\r\n\r\nAs a consumer of Action View, my intuition is that the lookup would fallback, in the same way that a controller that inherits from `ApplicationController` could define its own view, then rely on fallback to render an `app/views/application` partial.\r\n\r\nThis commit modifies the behavior to gracefully fall back to the root-level view partial.\r\n\r\nChecklist\r\n---\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n[#59844]: https://github.com/rails/rails/issues/50844\r\n[prefix_partial_path_with_controller_namespace]: https://guides.rubyonrails.org/configuring.html#config-action-view-prefix-partial-path-with-controller-namespace\r\n[#5625]: https://github.com/rails/rails/pull/5625\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50852/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50850",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50850/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50850/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50850/events",
        "html_url": "https://github.com/rails/rails/issues/50850",
        "id": 2095807650,
        "node_id": "I_kwDNIULOfOt8og",
        "number": 50850,
        "title": "belongs_to association doesn't work with composite `primary_key` option",
        "user": {
            "login": "bguban",
            "id": 1564376,
            "node_id": "MDQ6VXNlcjE1NjQzNzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1564376?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bguban",
            "html_url": "https://github.com/bguban",
            "followers_url": "https://api.github.com/users/bguban/followers",
            "following_url": "https://api.github.com/users/bguban/following{/other_user}",
            "gists_url": "https://api.github.com/users/bguban/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bguban/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bguban/subscriptions",
            "organizations_url": "https://api.github.com/users/bguban/orgs",
            "repos_url": "https://api.github.com/users/bguban/repos",
            "events_url": "https://api.github.com/users/bguban/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bguban/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-23T10:56:14Z",
        "updated_at": "2024-01-25T15:00:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have an aggregator model that represents the same entity from different providers. This model has a single primary but some of the providers have a composite key. So I must use 2 columns to be able to build the reflection\r\n\r\n```\r\nclass Ticker < ApplicationRecord\r\n  # this model has gvkey and iid but they are not the primary key. just fields to build the relation\r\n  has_many :co_actions, primary_key: [:gvkey, :iid], query_constraints: [:gvkey, :iid]\r\nend\r\n\r\nclass CoAction\r\n  # this model has gvkey and iid as a foreign key\r\n  belongs_to :ticker, primary_key: [:gvkey, :iid], query_constraints: [:gvkey, :iid]\r\nend\r\n```\r\n\r\nWhen I run\r\n```\r\nCoAction.take.ticker\r\n```\r\nit returns\r\n```\r\n/activerecord-7.1.3/lib/active_record/reflection.rb:576:in `check_validity!': Association CoAction#ticker primary key [:gvkey, :iid] doesn't match with foreign key [\"gvkey\", \"iid\"]. Please specify query_constraints, or primary_key and foreign_key values. (ActiveRecord::CompositePrimaryKeyMismatchError)\r\n```\r\nbut I would expect to receive the ticker model instead. The composite_primary_key gem does what expected but rails 7.1.3 relation builder converts the primary key into a string instead. So what you see in the message is a string `\"[:gvkey, :iid]\"`. (ActiveRecord::Reflection::BelongsToReflection#association_primary_key)\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.2.1\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50850/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50849",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50849/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50849/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50849/events",
        "html_url": "https://github.com/rails/rails/pull/50849",
        "id": 2095108275,
        "node_id": "PR_kwDNIULOZMkKDg",
        "number": 50849,
        "title": "Fixes ActionView::Template::Error when pasting images via Trix",
        "user": {
            "login": "schristm",
            "id": 24068,
            "node_id": "MDQ6VXNlcjI0MDY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schristm",
            "html_url": "https://github.com/schristm",
            "followers_url": "https://api.github.com/users/schristm/followers",
            "following_url": "https://api.github.com/users/schristm/following{/other_user}",
            "gists_url": "https://api.github.com/users/schristm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schristm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schristm/subscriptions",
            "organizations_url": "https://api.github.com/users/schristm/orgs",
            "repos_url": "https://api.github.com/users/schristm/repos",
            "events_url": "https://api.github.com/users/schristm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schristm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1180817762,
                "node_id": "MDU6TGFiZWwxMTgwODE3NzYy",
                "url": "https://api.github.com/repos/rails/rails/labels/actiontext",
                "name": "actiontext",
                "color": "3bc667",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T02:14:58Z",
        "updated_at": "2024-01-23T02:15:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50849",
            "html_url": "https://github.com/rails/rails/pull/50849",
            "diff_url": "https://github.com/rails/rails/pull/50849.diff",
            "patch_url": "https://github.com/rails/rails/pull/50849.patch",
            "merged_at": null
        },
        "body": "The asset pipeline really shouldn't be checked for remote images regardless, but this also happens to fix an issue with images pasted into Trix that get serialized as action-text-attachments with \"blob:\" urls.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50849/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50848",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50848/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50848/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50848/events",
        "html_url": "https://github.com/rails/rails/issues/50848",
        "id": 2095071717,
        "node_id": "I_kwDNIULOfOBB5Q",
        "number": 50848,
        "title": "O(N^2) operation in `CollectionAssociation#replace_common_records_in_memory` and **another** O(N^2) operation in `ActiveStorage::Attached::Many#attach`",
        "user": {
            "login": "malavbhavsar",
            "id": 1080592,
            "node_id": "MDQ6VXNlcjEwODA1OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1080592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malavbhavsar",
            "html_url": "https://github.com/malavbhavsar",
            "followers_url": "https://api.github.com/users/malavbhavsar/followers",
            "following_url": "https://api.github.com/users/malavbhavsar/following{/other_user}",
            "gists_url": "https://api.github.com/users/malavbhavsar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malavbhavsar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malavbhavsar/subscriptions",
            "organizations_url": "https://api.github.com/users/malavbhavsar/orgs",
            "repos_url": "https://api.github.com/users/malavbhavsar/repos",
            "events_url": "https://api.github.com/users/malavbhavsar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malavbhavsar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T01:29:33Z",
        "updated_at": "2024-01-23T01:39:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nApologies for not following the template. I wasn't sure how to include my half-baked fix with it... I have full repro and additional information here: [malavbhavsar/rails#1](https://github.com/malavbhavsar/rails/pull/1) \r\n\r\n```ruby\r\nuser_1 = User.create!(name: \"Jason\")\r\nuser_1.highlights.attach(\r\n  1000.times.map do |i|\r\n    {\r\n      io: StringIO.new(\"Example string inside text_file_#{i}\"),\r\n      filename: \"text_file_#{i}.txt\",\r\n      content_type: \"text/plain\",\r\n    }\r\n  end\r\n)\r\nuser_1.save!\r\nuser_1.reload\r\n\r\n# Below operation takes 5 seconds\r\nBenchmark.bm(30) do |x|\r\n  x.report(\"attach performance without fix\") do\r\n    user_1.highlights.attach(\r\n      {\r\n        io: StringIO.new(\"another text file. wow.\"),\r\n        filename: \"text_file_another.txt\",\r\n        content_type: \"text/plain\",\r\n      }\r\n    )\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nExecution time of `#attach` should not depend on how big a collection is.\r\n\r\n### Actual behavior\r\nOn a big `has_many_attached` collection, `#attach` takes a long time. If there are 1000 existing attachments, it will take 5 seconds to attach a new one.\r\n\r\n### System configuration\r\n**Rails version**: `main`\r\n\r\n**Ruby version**: `3.1.4`\r\n\r\n### Explanation\r\nWhen we call `#attach` on an already big activestorage collection, it first calls `record.public_send(\"#{name}=\", blobs + attachables.flatten) # e.g. record.highlights=...`. This eventually ends up calling `CollectionAssociation#replace_common_records_in_memory` which has been discovered as a performance problem in #46652. It ends up calling `Array#index` **n** times and `#==` **(n*n1)/2** times. In this case, `499500` times.\r\n\r\nFor ActiveRecord has_many collections, this is not a huge problem because, in my experience, `post.comments = new_comments` is not a common pattern. The general use case is `post.comments << new_comment`, which does pretty well performance-wise.\r\n\r\nUnfortunately for `has_many_attached` collection, calling `#attach` is a common use case and it calls `record.things_attachments=` under the hood. Aside - seems like people are running into this [problem](https://discuss.rubyonrails.org/t/attach-pictures-gets-very-slow/81684).\r\n\r\n### Flamegraph\r\n![flamegraph_1](https://github.com/rails/rails/assets/1080592/0bef4acf-aaa7-44b8-a830-daf4a6717ab5)\r\n\r\n### Possible solutions\r\n- Get #46652 merged\r\n- If we are concerned about the increased complexity of `@target_index_map` in #46652, I tried the [same approach with a local variable](https://github.com/malavbhavsar/rails/pull/1/files#diff-ceff30ddab4e756e3a70ece45076eb17ff2f587a068dae657d2ad3a265a3f0d6) and it helped.\r\n\r\n### ANOTHER problem\r\nAs flamegraph shows, there is another O(N^2) in `#attach`. That one is coming from `Attached::Changes::CreateOneOfMany#find_attachment`. I haven't figured out a possible solution for it... I don't understand the change tracking(?) active storage is doing but if someone can help me understand I can try fixing it. I assume this will probably need a new `Attached::Changes::AttachMany` and `Attached::Changes::AttachOne`?\r\n\r\n### Workaround\r\nI have found that creating blobs and attachments manually gets rid of BOTH problems and doesn't leave `highlights_attachments` and `highlights_blobs` stale.\r\n\r\n```ruby\r\nuser_3 = User.create!(name: \"Lauren\")\r\nuser_3.highlights.attach(\r\n  1000.times.map do |i|\r\n    {\r\n      io: StringIO.new(\"Example string inside text_file_#{i}\"),\r\n      filename: \"text_file_#{i}.txt\",\r\n      content_type: \"text/plain\",\r\n    }\r\n  end\r\n)\r\nuser_3.save!\r\nuser_3.reload\r\n\r\n# Below operation takes 0.02 second\r\nApplicationRecord.transaction do\r\n  blob = ActiveStorage::Blob.create_and_upload!(\r\n    io: StringIO.new(\"another text file. wow.\"),\r\n    filename: \"text_file_another.txt\",\r\n    content_type: \"text/plain\",\r\n  )\r\n  user_3.highlights_attachments.create!(\r\n    blob_id: blob.id,\r\n    name: 'highlights',\r\n  )\r\n  user_3.save!\r\nend\r\n```\r\n\r\n### Final performance stats\r\n\r\n```\r\n                                              user     system      total        real\r\nattach performance without fix            4.711782   0.013564   4.725346 (  4.760098)\r\n                                              user     system      total        real\r\nattach performance with half-ish fix      1.855833   0.009120   1.864953 (  1.901090)\r\n                                              user     system      total        real\r\nattach performance manual                 0.024790   0.002624   0.027414 (  0.030269)\r\n```\r\n\r\ncc: @jonathanhefner, @jeffcarbs, @danny-pflughoeft",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50848/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50846",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50846/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50846/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50846/events",
        "html_url": "https://github.com/rails/rails/pull/50846",
        "id": 2094996849,
        "node_id": "PR_kwDNIULOZMeOHA",
        "number": 50846,
        "title": "Set ActiveRecord::RecordNotFound#id when raised from a call to #reload a deleted record",
        "user": {
            "login": "segiddins",
            "id": 1946610,
            "node_id": "MDQ6VXNlcjE5NDY2MTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1946610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/segiddins",
            "html_url": "https://github.com/segiddins",
            "followers_url": "https://api.github.com/users/segiddins/followers",
            "following_url": "https://api.github.com/users/segiddins/following{/other_user}",
            "gists_url": "https://api.github.com/users/segiddins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/segiddins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/segiddins/subscriptions",
            "organizations_url": "https://api.github.com/users/segiddins/orgs",
            "repos_url": "https://api.github.com/users/segiddins/repos",
            "events_url": "https://api.github.com/users/segiddins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/segiddins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-23T00:04:37Z",
        "updated_at": "2024-01-23T16:49:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50846",
            "html_url": "https://github.com/rails/rails/pull/50846",
            "diff_url": "https://github.com/rails/rails/pull/50846.diff",
            "patch_url": "https://github.com/rails/rails/pull/50846.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because I am writing some tests for my app around records being deleted by calling `reload`, and there was no easy way to assert that the record raising the `ActiveRecord::RecordNotFound` exception was the record I was expecting\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `raise_record_not_found_exception!` to find IDs based on the primary key from the where condition, if no IDs are explicitly passed\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50846/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50844",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50844/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50844/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50844/events",
        "html_url": "https://github.com/rails/rails/issues/50844",
        "id": 2094843344,
        "node_id": "I_kwDNIULOfNzF0A",
        "number": 50844,
        "title": "`ActionView::Template::Error`: Missing Active Model partial when rendered from Controller declared in module",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-22T22:05:18Z",
        "updated_at": "2024-01-23T15:20:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_model/railtie\"\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << \"example.org\"\r\n  config.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/\" => \"test#index\"\r\n    get \"/scoped\" => \"scoped/test#index\"\r\n  end\r\nend\r\n\r\nclass Model\r\n  include ActiveModel::Model\r\nend\r\n\r\nclass TestController < ActionController::Base\r\nend\r\n\r\nmodule Scoped\r\n  class TestController < ActionController::Base\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def setup\r\n    super\r\n    @views = Dir.mktmpdir\r\n    ActionController::Base.prepend_view_path @views\r\n\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"test/index.html.erb\", \"<%= render Model.new %>\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_controller_renders_unscoped_partial\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  # \u2705 PASSES\r\n  def test_scoped_controller_renders_scoped_partial\r\n    view_file \"scoped/models/_model.html.erb\", \"Rendered\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/scoped\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  # \ud83d\udd34 FAILS\r\n  def test_scoped_controller_renders_unscoped_partial\r\n    view_file \"models/_model.html.erb\", \"Rendered\"\r\n    view_file \"scoped/test/index.html.erb\", \"<%= render Model.new %>\"\r\n\r\n    get \"/scoped\"\r\n\r\n    assert_predicate last_response, :ok?\r\n    assert_equal last_response.body, \"Rendered\"\r\n  end\r\n\r\n  private\r\n    def app\r\n      Rails.application\r\n    end\r\n\r\n    def view_file(name, content)\r\n      path = Pathname.new(@views).join(name)\r\n      path.dirname.tap(&:mkpath)\r\n      path.write(content)\r\n    end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nA controller declared in the top-level module (as exercised by `test_controller_renders_unscoped_partial`) can render a top-level Active Model instance whose partial is declared in the root view directory (like `models/_model.html.erb`).\r\n\r\nA controller scoped within a module (as exercised by `test_scoped_controller_renders_scoped_partial`) can render an Active Model instance whose partial is similarly scoped within view directory (like `scoped/models/_model.html.erb`).\r\n\r\nA controller scoped within a module (as exercised by `test_scoped_controller_renders_unscoped_partial`) should be able to render an Active Model instance whose partial is declared in the root view directory (like `models/_model.html.erb`), despite the absence of a similarly scoped partial. **It should gracefully fall back to the root-level view partial).\r\n\r\n### Actual behavior\r\n\r\nThe `test_scoped_controller_renders_unscoped_partial` test raises an Action View error:\r\n\r\n```\r\nActionView::Template::Error (Missing partial scoped/models/_model with {:locale=>[:en], :formats=>[:html], :variants=>[], :handlers=>[:raw, :erb, :html, :builder, :ruby]}.\r\n                                                                                                          \r\nSearched in:                                                                                              \r\n  * \"/var/folders/4q/q308vb3s12x2rzrgppdsz0540000gn/T/d20240122-19453-6bve0b\"\r\n):                                                                                                        \r\n    1: <%= render Model.new %>                                                                            \r\n                                          \r\n```\r\n\r\nIt cannot resolve the `models/_model` partial, since the rendering controller is namespaced within `scoped/`.\r\n\r\n### System configuration\r\n**Rails version**: `7.1.3`\r\n\r\n**Ruby version**: `3.2.0`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50844/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50842",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50842/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50842/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50842/events",
        "html_url": "https://github.com/rails/rails/issues/50842",
        "id": 2094312908,
        "node_id": "I_kwDNIULOfNStzA",
        "number": 50842,
        "title": "How to use Azure Managed Identity for authentication and authorization for Ruby On Rails Active Storage?",
        "user": {
            "login": "avivansh",
            "id": 40461477,
            "node_id": "MDQ6VXNlcjQwNDYxNDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/40461477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/avivansh",
            "html_url": "https://github.com/avivansh",
            "followers_url": "https://api.github.com/users/avivansh/followers",
            "following_url": "https://api.github.com/users/avivansh/following{/other_user}",
            "gists_url": "https://api.github.com/users/avivansh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/avivansh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/avivansh/subscriptions",
            "organizations_url": "https://api.github.com/users/avivansh/orgs",
            "repos_url": "https://api.github.com/users/avivansh/repos",
            "events_url": "https://api.github.com/users/avivansh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/avivansh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-22T16:41:34Z",
        "updated_at": "2024-01-22T16:41:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Current setup\r\n```yaml\r\nazure:\r\n  service: AzureStorage\r\n  storage_account_name: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-NAME\") %>\r\n  storage_access_key: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-ACCESS-KEY\") %>\r\n  container: <%= VaultService.get_secret('AZURE-ATTACHMENTS-BUCKET-NAME') %>\r\n```\r\n\r\nGiven the implementation of accessing Azure Storage using Access Token. [Link](https://github.com/azure/azure-storage-ruby/tree/master/blob#access-token)\r\n \r\n```ruby\r\nrequire \"azure/storage/common\"\r\n\r\naccess_token = <your initial access token>\r\n\r\n# Creating an instance of `Azure::Storage::Common::Core::TokenCredential`\r\ntoken_credential = Azure::Storage::Common::Core::TokenCredential.new access_token\r\ntoken_signer = Azure::Storage::Common::Core::Auth::TokenSigner.new token_credential\r\nblob_token_client = Azure::Storage::Blob::BlobService.new(storage_account_name: <your_account_name>, signer: token_signer)\r\n```\r\n\r\n\r\nGiven the implementation of Active Storage for Ruby on Rails. It uses azure-storage-blob gem under the hood.\r\n[link](https://github.com/rails/rails/blob/61d6eb119fc53678d8f5028bd73ae77e69b91fb6/activestorage/lib/active_storage/service/azure_storage_service.rb#L16)\r\n\r\n```ruby\r\n    def initialize(storage_account_name:, storage_access_key:, container:, public: false, **options)\r\n      @client = Azure::Storage::Blob::BlobService.create(storage_account_name: storage_account_name, storage_access_key: storage_access_key, **options)\r\n      @signer = Azure::Storage::Common::Core::Auth::SharedAccessSignature.new(storage_account_name, storage_access_key)\r\n      @container = container\r\n      @public = public\r\n    end\r\n```\r\n\r\nNew Setup, config/storage.yml\r\n\r\n```yaml\r\nazure:\r\n  service: AzureStorage\r\n  storage_account_name: <%= VaultService.get_secret(\"AZURE-STORAGE::AZURE-STORAGE-ACCOUNT-NAME\") %>\r\n  container: <%= VaultService.get_secret('AZURE-ATTACHMENTS-BUCKET-NAME') %>\r\n```\r\n\r\nMonkey patched to use the above information to use active storage using managed identity\r\n\r\n```ruby\r\nmodule ActiveStorage\r\n  class Service::AzureStorageService < Service\r\n    def initialize(storage_account_name:, container:, public: false, **options)\r\n      access_token = AzureAd::ManagedIdentityTokenProvider.new('https://storage.azure.com/', client_id: ENV['AKS_MANAGED_IDENTITY_ID']).get_authentication_header.split(' ').last\r\n      # Creating an instance of `Azure::Storage::Common::Core::TokenCredential`\r\n      token_credential = ::Azure::Storage::Common::Core::TokenCredential.new access_token\r\n      token_signer = ::Azure::Storage::Common::Core::Auth::TokenSigner.new token_credential\r\n      @client = Azure::Storage::Blob::BlobService.create(storage_account_name: storage_account_name, signer: token_signer, **options)\r\n      user_delegation_key = @client.get_user_delegation_key(DateTime.now - 1.minute, DateTime.now + 6.day + 23.hours)\r\n      @signer = Azure::Storage::Common::Core::Auth::SharedAccessSignature.new(storage_account_name: storage_account_name, user_delegation_key: user_delegation_key )\r\n      @container = container\r\n      @public = public\r\n    rescue StandardError => e\r\n      raise e unless Rake.respond_to?(:application) && (!Rake.application.top_level_tasks.exclude?('assets:precompile') || !Rake.application.top_level_tasks.exclude?('source_map:upload_source_map'))\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n\r\nIs this approach correct? (I am yet to test this.). Also, is there any other approach on how to achieve this? I have posted the question on [stackoverflow](https://stackoverflow.com/questions/77846948/can-we-connect-active-storage-in-ruby-on-rails-with-azure-using-managed-identity) as well.\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: Rails 6.1.7.3\r\n\r\n**Ruby version**: ruby 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50842/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50838",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50838/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50838/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50838/events",
        "html_url": "https://github.com/rails/rails/pull/50838",
        "id": 2093903637,
        "node_id": "PR_kwDNIULOZLiUKA",
        "number": 50838,
        "title": "Fix SQLite table definition parsing bug to handle commas in default function definitions",
        "user": {
            "login": "fractaledmind",
            "id": 5077225,
            "node_id": "MDQ6VXNlcjUwNzcyMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5077225?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fractaledmind",
            "html_url": "https://github.com/fractaledmind",
            "followers_url": "https://api.github.com/users/fractaledmind/followers",
            "following_url": "https://api.github.com/users/fractaledmind/following{/other_user}",
            "gists_url": "https://api.github.com/users/fractaledmind/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fractaledmind/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fractaledmind/subscriptions",
            "organizations_url": "https://api.github.com/users/fractaledmind/orgs",
            "repos_url": "https://api.github.com/users/fractaledmind/repos",
            "events_url": "https://api.github.com/users/fractaledmind/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fractaledmind/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-22T13:18:21Z",
        "updated_at": "2024-01-22T13:18:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50838",
            "html_url": "https://github.com/rails/rails/pull/50838",
            "diff_url": "https://github.com/rails/rails/pull/50838.diff",
            "patch_url": "https://github.com/rails/rails/pull/50838.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request fixes a bug in the low-level SQLite adapter introspection logic. I came across the bug when working with virtual columns and JSON, but there are many possible cases where this would cause problems. Here is one reproducible bug script though:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\");\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.json :payload, null: false, default: {}\r\n    t.virtual :external_id, type: :string, as: \"JSON_EXTRACT(payload, '$.id')\", stored: true, null: false, index: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_with_comma_in_definition_is_autopopulated\r\n    post = Post.create!(payload: { id: 'pst_1' })\r\n\r\n    assert_equal 'pst_1', post.external_id\r\n  end\r\nend\r\n```\r\n\r\n### Detail\r\n\r\nThis Pull Request more intelligently parses the SQL string description of the table to ensure that we only split by commas that mark a new column definition. In order to accomplish this, the table parsing method needs the list of column names for the table. When `table_structure_sql` is called by `table_structure_with_collation`, these can be supplied as they are already present; when it is called by `foreign_keys`, however, they are not present and thus must be fetched.\r\n\r\nI also added a simple regression test as a part of the virtual column test case.\r\n\r\n### Additional information\r\n\r\nThis bug has existed for a long time, but I most recently touched the relevant code in https://github.com/rails/rails/pull/49376.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\ncc: @byroot (this is related to #49346), @tenderlove (this is related to https://github.com/rails/rails/pull/49290), @yahonda (this is related to https://github.com/rails/rails/pull/49376)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50838/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50837",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50837/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50837/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50837/events",
        "html_url": "https://github.com/rails/rails/pull/50837",
        "id": 2093866588,
        "node_id": "PR_kwDNIULOZLgRiw",
        "number": 50837,
        "title": "Ensure pre-7.1 migrations use legacy index names when using `rename_table`",
        "user": {
            "login": "fatkodima",
            "id": 5657035,
            "node_id": "MDQ6VXNlcjU2NTcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5657035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fatkodima",
            "html_url": "https://github.com/fatkodima",
            "followers_url": "https://api.github.com/users/fatkodima/followers",
            "following_url": "https://api.github.com/users/fatkodima/following{/other_user}",
            "gists_url": "https://api.github.com/users/fatkodima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fatkodima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fatkodima/subscriptions",
            "organizations_url": "https://api.github.com/users/fatkodima/orgs",
            "repos_url": "https://api.github.com/users/fatkodima/repos",
            "events_url": "https://api.github.com/users/fatkodima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fatkodima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-22T12:59:01Z",
        "updated_at": "2024-01-28T20:19:02Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50837",
            "html_url": "https://github.com/rails/rails/pull/50837",
            "diff_url": "https://github.com/rails/rails/pull/50837.diff",
            "patch_url": "https://github.com/rails/rails/pull/50837.patch",
            "merged_at": null
        },
        "body": "Fixes https://github.com/rails/rails/issues/50833.\r\nFollow up to https://github.com/rails/rails/pull/47753 and https://github.com/rails/rails/pull/47863.\r\n\r\nThe easiest way to preserve the old behavior is to rename indexes back after the `rename_table` was run.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50837/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50835",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50835/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50835/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50835/events",
        "html_url": "https://github.com/rails/rails/issues/50835",
        "id": 2093550361,
        "node_id": "I_kwDNIULOfMkLGQ",
        "number": 50835,
        "title": "ActiveStorage::FileNotFoundError (ActiveStorage::FileNotFoundError)",
        "user": {
            "login": "raoehtesham03",
            "id": 152256436,
            "node_id": "U_kgDOCRM_tA",
            "avatar_url": "https://avatars.githubusercontent.com/u/152256436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoehtesham03",
            "html_url": "https://github.com/raoehtesham03",
            "followers_url": "https://api.github.com/users/raoehtesham03/followers",
            "following_url": "https://api.github.com/users/raoehtesham03/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoehtesham03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoehtesham03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoehtesham03/subscriptions",
            "organizations_url": "https://api.github.com/users/raoehtesham03/orgs",
            "repos_url": "https://api.github.com/users/raoehtesham03/repos",
            "events_url": "https://api.github.com/users/raoehtesham03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoehtesham03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1071962662,
                "node_id": "MDU6TGFiZWwxMDcxOTYyNjYy",
                "url": "https://api.github.com/repos/rails/rails/labels/more-information-needed",
                "name": "more-information-needed",
                "color": "bfdadc",
                "default": false,
                "description": "When reporter needs to provide more information"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-22T10:07:53Z",
        "updated_at": "2024-01-23T13:33:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI have upgraded my rails application from 6.0 to 6.1 . Since then when I am  executing below queries\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n d = Document.find(768365)\r\n d.page_image.variant(resize_to_limit: Document::PAGE_IMAGE_STYLES[:small]).processed\r\n\r\n```\r\nI am getting this error\r\n### Actual behavior\r\n  ActiveStorage::FileNotFoundError (ActiveStorage::FileNotFoundError)\r\n\r\n### System configuration\r\n**Rails version**: 7.0.8\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50835/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50833",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50833/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50833/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50833/events",
        "html_url": "https://github.com/rails/rails/issues/50833",
        "id": 2092932851,
        "node_id": "I_kwDNIULOfL-e8w",
        "number": 50833,
        "title": "`ActiveRecord::Migration[7.0]`'s `rename_table` uses 7.1's new truncated index name format",
        "user": {
            "login": "r7kamura",
            "id": 111689,
            "node_id": "MDQ6VXNlcjExMTY4OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/111689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/r7kamura",
            "html_url": "https://github.com/r7kamura",
            "followers_url": "https://api.github.com/users/r7kamura/followers",
            "following_url": "https://api.github.com/users/r7kamura/following{/other_user}",
            "gists_url": "https://api.github.com/users/r7kamura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/r7kamura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/r7kamura/subscriptions",
            "organizations_url": "https://api.github.com/users/r7kamura/orgs",
            "repos_url": "https://api.github.com/users/r7kamura/repos",
            "events_url": "https://api.github.com/users/r7kamura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/r7kamura/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-22T02:09:26Z",
        "updated_at": "2024-01-23T03:17:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.3\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_index_name_after_rename_table_with_long_table_name\r\n    long_table_name = \"a\" * 48\r\n\r\n    migration_class = Class.new(ActiveRecord::Migration[7.0]) do\r\n      define_method :migrate do |x|\r\n        create_table :posts do |t|\r\n          t.string :title\r\n          t.index :title\r\n        end\r\n        rename_table :posts, long_table_name\r\n      end\r\n    end\r\n    migration = migration_class.new\r\n\r\n    ActiveRecord::Migrator.new(\r\n      :up,\r\n      [migration],\r\n      ActiveRecord::Base.connection.schema_migration,\r\n      ActiveRecord::Base.connection.internal_metadata\r\n    ).migrate\r\n\r\n    assert_equal \"index_#{long_table_name}_on_title\", ActiveRecord::Base.connection.indexes(long_table_name).first.name\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe above test should pass.\r\n\r\nThis means that since the index name was renamed to `index_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_on_title` in Rails 7.0 and earlier, if `ActiveRecord::Migration[7.0]` or earlier is specified, the same name should be used even in Rails 7.1 or later.\r\n\r\n### Actual behavior\r\n\r\nThe above test fails with the following output:\r\n\r\n```\r\nF\r\n\r\nFailure:\r\nBugTest#test_index_name_after_rename_table_with_long_table_name [example.rb:53]:\r\n--- expected\r\n+++ actual\r\n@@ -1 +1 @@\r\n-\"index_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_on_title\"\r\n+\"idx_on_title_0b3d36c24b\"\r\n\r\n\r\n\r\nbin/rails test example.rb:32\r\n\r\n\r\n\r\nFinished in 0.026827s, 37.2753 runs/s, 37.2753 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\nAs a result, if db/migrate contains `rename_table`, the index names created between Rails 7.0 and 7.1 may be different.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]\r\n\r\n### Other information\r\n\r\nThis is due to the following change:\r\n\r\n- https://github.com/rails/rails/pull/47753\r\n\r\nI think a similar change to the following is needed for `#rename_table`:\r\n\r\n- https://github.com/rails/rails/pull/47863\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50833/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50830",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50830/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50830/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50830/events",
        "html_url": "https://github.com/rails/rails/issues/50830",
        "id": 2092565763,
        "node_id": "I_kwDNIULOfLoFAw",
        "number": 50830,
        "title": "Add support for `ActionMailer.*_delivery` callback `only` and `except` options",
        "user": {
            "login": "viralpraxis",
            "id": 39729785,
            "node_id": "MDQ6VXNlcjM5NzI5Nzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/39729785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viralpraxis",
            "html_url": "https://github.com/viralpraxis",
            "followers_url": "https://api.github.com/users/viralpraxis/followers",
            "following_url": "https://api.github.com/users/viralpraxis/following{/other_user}",
            "gists_url": "https://api.github.com/users/viralpraxis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viralpraxis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viralpraxis/subscriptions",
            "organizations_url": "https://api.github.com/users/viralpraxis/orgs",
            "repos_url": "https://api.github.com/users/viralpraxis/repos",
            "events_url": "https://api.github.com/users/viralpraxis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viralpraxis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107188,
                "node_id": "MDU6TGFiZWwxMDcxODg=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
                "name": "actionmailer",
                "color": "8B00FC",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-21T12:31:43Z",
        "updated_at": "2024-01-21T18:59:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nCurrently ActionMailer's `*_delivery` callbacks do not support `only` and `except` filters, which are quite useful because some callback actions are required for a subset of mailer methods. Technically, only/except can be emulated via `if` option, but another problem is that's not clear from the documentation which options can be passed (currently `only` and `except` are simply ignored).\r\n\r\nI believe that many developers might except `ActionMailer` to behave just like `ActionController`,  so current API implementation might lead to unexpected bugs.\r\n\r\nNote that documentation on `before_action` (and similar callbacks) explicitly refer to possible options:\r\n\r\n> before_action(names, block)[Link](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-before_action)\r\n> Append a callback before actions. See [_insert_callbacks](https://api.rubyonrails.org/v7.1.3/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_insert_callbacks) for parameter details.\r\n\r\n### Expected behavior\r\nAt least some explicit info on possible `*_delivery` callback options, or (which would be better) support for `only` and `except` options.\r\n\r\n### Actual behavior\r\nMentioned options are simply ignored, no documentation on possible options.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: 3.0.6\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50829",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50829/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50829/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50829/events",
        "html_url": "https://github.com/rails/rails/pull/50829",
        "id": 2092440404,
        "node_id": "PR_kwDNIULOZKUusw",
        "number": 50829,
        "title": "Fix query references for non-hash association where clause values",
        "user": {
            "login": "ezekg",
            "id": 6979737,
            "node_id": "MDQ6VXNlcjY5Nzk3Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6979737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezekg",
            "html_url": "https://github.com/ezekg",
            "followers_url": "https://api.github.com/users/ezekg/followers",
            "following_url": "https://api.github.com/users/ezekg/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezekg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezekg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezekg/subscriptions",
            "organizations_url": "https://api.github.com/users/ezekg/orgs",
            "repos_url": "https://api.github.com/users/ezekg/repos",
            "events_url": "https://api.github.com/users/ezekg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezekg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-21T06:11:40Z",
        "updated_at": "2024-01-30T22:33:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50829",
            "html_url": "https://github.com/rails/rails/pull/50829",
            "diff_url": "https://github.com/rails/rails/pull/50829.diff",
            "patch_url": "https://github.com/rails/rails/pull/50829.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nThis PR fixes an issue where non-hash where-clause values for associations would not set `references_values`. This could (and often does) end up causing hard-to-debug SQL errors due to association name vs table name mismatch, e.g. querying on a singular association name while the actual join table is plural, or vice-versa due to a prior scope.\r\n\r\nMore detailed reproduction script:  https://gist.github.com/ezekg/5969735eb8c5092fb25198bd8fac4053\r\n\r\n#### Before\r\n\r\n```rb\r\nscope = Comment.where(post: { id: post })\r\nscope.references_values # => [\"post\"]\r\n\r\nscope = Comment.where(post: post)\r\nscope.references_values # => []\r\n```\r\n\r\nI'd expect these to be synonymous since [`#id` is called on `post`](https://github.com/ezekg/rails/blob/c37450b76b24cac7951032c4210db17a9c1b7f51/activerecord/lib/active_record/relation/predicate_builder.rb#L58) for the second case.\r\n\r\n#### After\r\n\r\n```rb\r\nscope = Comment.where(post: { id: post })\r\nscope.references_values # => [\"post\"]\r\n\r\nscope = Comment.where(post: post)\r\nscope.references_values # => [\"post\"]\r\n```\r\n\r\nWith this patch, they're now more or less synonymous, both setting `references_values`.\r\n\r\nSince this is likely a breaking change (it broke a few tests in [keygen-sh/keygen-api](https://github.com/keygen-sh/keygen-api) when testing against the patch), this may require some more thought. But it is worth noting that all broken tests were related to various workarounds for this particular bug.\r\n\r\nLet me know what you guys think is the best course of action here.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50828",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50828/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50828/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50828/events",
        "html_url": "https://github.com/rails/rails/pull/50828",
        "id": 2092434369,
        "node_id": "PR_kwDNIULOZKUcQg",
        "number": 50828,
        "title": "Add examples for form helper tags [ci skip]",
        "user": {
            "login": "akhilgkrishnan",
            "id": 22231095,
            "node_id": "MDQ6VXNlcjIyMjMxMDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22231095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akhilgkrishnan",
            "html_url": "https://github.com/akhilgkrishnan",
            "followers_url": "https://api.github.com/users/akhilgkrishnan/followers",
            "following_url": "https://api.github.com/users/akhilgkrishnan/following{/other_user}",
            "gists_url": "https://api.github.com/users/akhilgkrishnan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akhilgkrishnan/subscriptions",
            "organizations_url": "https://api.github.com/users/akhilgkrishnan/orgs",
            "repos_url": "https://api.github.com/users/akhilgkrishnan/repos",
            "events_url": "https://api.github.com/users/akhilgkrishnan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akhilgkrishnan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-21T05:48:04Z",
        "updated_at": "2024-02-01T04:02:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50828",
            "html_url": "https://github.com/rails/rails/pull/50828",
            "diff_url": "https://github.com/rails/rails/pull/50828.diff",
            "patch_url": "https://github.com/rails/rails/pull/50828.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nThis Pull Request add examples for `FormTagHelper` methods.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50828/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50827",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50827/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50827/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50827/events",
        "html_url": "https://github.com/rails/rails/issues/50827",
        "id": 2092292151,
        "node_id": "I_kwDNIULOfLXYNw",
        "number": 50827,
        "title": "System tests not working on Rails 7.1.3 running on a remote machine/docker container.",
        "user": {
            "login": "srabuini",
            "id": 286604,
            "node_id": "MDQ6VXNlcjI4NjYwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/286604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srabuini",
            "html_url": "https://github.com/srabuini",
            "followers_url": "https://api.github.com/users/srabuini/followers",
            "following_url": "https://api.github.com/users/srabuini/following{/other_user}",
            "gists_url": "https://api.github.com/users/srabuini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srabuini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srabuini/subscriptions",
            "organizations_url": "https://api.github.com/users/srabuini/orgs",
            "repos_url": "https://api.github.com/users/srabuini/repos",
            "events_url": "https://api.github.com/users/srabuini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srabuini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-21T00:44:06Z",
        "updated_at": "2024-01-30T12:48:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\nI've been running my system tests using a remote browser (on a docker container) since Rails 7.0 without a problem, with the following set up.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nclass ApplicationSystemTestCase < ActionDispatch::SystemTestCase\r\n  driven_by :selenium,\r\n            using: :chrome,\r\n            screen_size: [1400, 1400],\r\n            options: { browser: :remote,\r\n                       url: 'http://chrome-server:4444' } do |driver_option|\r\n    driver_option.add_argument 'disable-dev-shm-usage'\r\n  end\r\n```\r\n\r\nIt looks like the problem was introduced in #49908 and related issues/fixes.\r\n\r\nI fixed it locally just monkeypatching `Selenium::Webdriver::DriverFinder.path` just to return nil.\r\n\r\nHaving a look at the code, I think that it would be nice to avoid `Browser#preload` when browser is `:remote` in:\r\n\r\nhttps://github.com/rails/rails/blob/3064d4f53a48beb107a549a2249820350e698050/actionpack/lib/action_dispatch/system_testing/driver.rb#L19\r\n\r\nIf you think it's the right way to tackle it, I could post a fix.\r\n\r\n### Actual behavior\r\nAfter a while, an exception is raised:\r\n\r\n```\r\nSelenium::WebDriver::Error::SessionNotCreatedError: Could not start a new session. Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: unknown error: no chrome binary at /root/.cache/selenium/chrome/linux64/120.0.6099.109/chrome \r\nHost info: host: 'c3260b1b08ce', ip: '192.168.16.3'\r\nBuild info: version: '4.10.0', revision: 'c14d967899'\r\nSystem info: os.name: 'Linux', os.arch: 'aarch64', os.version: '6.5.11-linuxkit', java.version: '11.0.18'\r\nDriver info: driver.version: unknown\r\nBuild info: version: '4.10.0', revision: 'c14d967899'\r\nSystem info: os.name: 'Linux', os.arch: 'aarch64', os.version: '6.5.11-linuxkit', java.version: '11.0.18'\r\nDriver info: driver.version: unknown\r\n    [remote server] org.openqa.selenium.grid.node.config.DriverServiceSessionFactory(DriverServiceSessionFactory.java):210:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.config.DriverServiceSessionFactory(DriverServiceSessionFactory.java):69:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.local.SessionSlot(SessionSlot.java):147:in `apply'\r\n    [remote server] org.openqa.selenium.grid.node.local.LocalNode(LocalNode.java):467:in `newSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor(LocalDistributor.java):643:in `startSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor(LocalDistributor.java):560:in `newSession'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable(LocalDistributor.java):814:in `handleNewSessionRequest'\r\n    [remote server] org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable(LocalDistributor.java):773:in `lambda$run$1'\r\n    [remote server] java.util.concurrent.ThreadPoolExecutor(ThreadPoolExecutor.java):1128:in `runWorker'\r\n    [remote server] java.util.concurrent.ThreadPoolExecutor$Worker(ThreadPoolExecutor.java):628:in `run'\r\n    [remote server] java.lang.Thread(Thread.java):829:in `run'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:55:in `assert_ok'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:34:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `create_response'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/default.rb:103:in `request'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:601:in `execute'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:53:in `create_session'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:317:in `block in create_bridge'\r\n    <internal:kernel>:90:in `tap'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:316:in `create_bridge'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:74:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/driver.rb:38:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:57:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:57:in `for'\r\n    /usr/local/bundle/ruby/3.2.0/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver.rb:89:in `for'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/selenium/driver.rb:83:in `browser'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:55:in `block in register_selenium'\r\n    <internal:kernel>:90:in `tap'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:54:in `register_selenium'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/driver.rb:41:in `block in register'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/session.rb:105:in `driver'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/session.rb:91:in `initialize'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:421:in `new'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:421:in `block in session_pool'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara.rb:317:in `current_session'\r\n    /usr/local/bundle/ruby/3.2.0/gems/capybara-3.39.2/lib/capybara/dsl.rb:46:in `page'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:106:in `save_image'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:36:in `take_screenshot'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:47:in `take_failed_screenshot'\r\n    /usr/local/bundle/ruby/3.2.0/gems/actionpack-7.1.3/lib/action_dispatch/system_testing/test_helpers/setup_and_teardown.rb:8:in `before_teardown'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.1..3\r\n\r\n**Ruby version**: 3.2.2 (2023-03-30 revision e51014f9c0) [aarch64-linux]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50826",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50826/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50826/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50826/events",
        "html_url": "https://github.com/rails/rails/pull/50826",
        "id": 2092286908,
        "node_id": "PR_kwDNIULOZKMR9Q",
        "number": 50826,
        "title": "[docs] Add more examples to `#in_order_of` [ci-skip]",
        "user": {
            "login": "thdaraujo",
            "id": 707418,
            "node_id": "MDQ6VXNlcjcwNzQxOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thdaraujo",
            "html_url": "https://github.com/thdaraujo",
            "followers_url": "https://api.github.com/users/thdaraujo/followers",
            "following_url": "https://api.github.com/users/thdaraujo/following{/other_user}",
            "gists_url": "https://api.github.com/users/thdaraujo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thdaraujo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thdaraujo/subscriptions",
            "organizations_url": "https://api.github.com/users/thdaraujo/orgs",
            "repos_url": "https://api.github.com/users/thdaraujo/repos",
            "events_url": "https://api.github.com/users/thdaraujo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thdaraujo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-21T00:21:26Z",
        "updated_at": "2024-01-31T16:16:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50826",
            "html_url": "https://github.com/rails/rails/pull/50826",
            "diff_url": "https://github.com/rails/rails/pull/50826.diff",
            "patch_url": "https://github.com/rails/rails/pull/50826.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\n`#in_order_of` is an excellent method and makes ordering enum columns easier, and many complex order case/when queries can be refactored to use it.\r\n\r\nThis PR was created because I believe having more examples would help people understand this method a bit better.\r\n\r\nAlso, I think it's useful to document that this method will order results, but also FILTER them, excluding rows in which the column doesn't match any of the given values.\r\n\r\nSo I expanded the description and added these examples:\r\n- what happens when dealing with `enum` +columns+\r\n- what happens when passing `nil` as a +value+ for nullable columns\r\n\r\nHere's a gist with some tests: https://gist.github.com/thdaraujo/7d9aa5ffd1b61bf57604ded14535e357\r\n\r\nI'd be happy to add other examples for other usecases you think are relevant, just let me know!\r\n\r\n### Detail\r\n\r\nThis Pull Request expands the documentation for [in_order_of](https://api.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-in_order_of)\r\n\r\n### Additional information\r\n\r\nn/a\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* ~[ ] Tests are added or updated if you fix a bug or add a feature.~ not applicable\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50826/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50823",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50823/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50823/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50823/events",
        "html_url": "https://github.com/rails/rails/pull/50823",
        "id": 2092154145,
        "node_id": "PR_kwDNIULOZKF0tA",
        "number": 50823,
        "title": "Add methods to `ActiveRecord::Relation::FinderMethods` to determine if it contains exactly/more than/less than N records",
        "user": {
            "login": "jordinl",
            "id": 16135423,
            "node_id": "MDQ6VXNlcjE2MTM1NDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16135423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordinl",
            "html_url": "https://github.com/jordinl",
            "followers_url": "https://api.github.com/users/jordinl/followers",
            "following_url": "https://api.github.com/users/jordinl/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordinl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordinl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordinl/subscriptions",
            "organizations_url": "https://api.github.com/users/jordinl/orgs",
            "repos_url": "https://api.github.com/users/jordinl/repos",
            "events_url": "https://api.github.com/users/jordinl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordinl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2024-01-20T16:56:20Z",
        "updated_at": "2024-02-01T14:30:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50823",
            "html_url": "https://github.com/rails/rails/pull/50823",
            "diff_url": "https://github.com/rails/rails/pull/50823.diff",
            "patch_url": "https://github.com/rails/rails/pull/50823.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nI've had to check in a few places if a relation had exactly or less than or more than N records. On top of that, if the collection contains a lot of records, counting on the entire collection not only is slower but also unnecessary and limiting the count the first N or N+1 records is sufficient and faster.\r\n\r\n### Detail\r\n\r\nAdds the following methods to `ActiveRecord::Relation::FinderMethods`:\r\n  * `exactly?` returns true if the relation contains exactly N records, false otherwise.\r\n  * `at_least?` returns true if the relation contains at least N records, false otherwise.\r\n  * `at_most?` returns true if the relation contains at most N records, false otherwise.\r\n  * `less_than?` returns true if the relation contains less than N records, false otherwise.\r\n  * `more_than?` returns true if the relation contains more than N records, false otherwise.\r\n\r\nThese methods perform a `limit(M).count` (where M = N or N + 1) under the hood.\r\n\r\n### Additional information\r\n\r\nI think the naming of these methods is fine as is. Don't know if others would prefer to prefix these with `has_` or `contains_`, ie `has_exactly?` or `contains_exactly?`.\r\n\r\nWith regards to performance of doing the count with and without the limit. Without the limit when there are 8M records I get:\r\n\r\n```sql\r\n  Referral Count (135.2ms)  SELECT COUNT(*) FROM \"referrals\" WHERE \"referrals\".\"company_id\" = $1  [[\"company_id\", \"29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535\"]]\r\n=> 8467786\r\n```\r\n\r\nWith a limit of a 100:\r\n\r\n```sql\r\n  Referral Count (0.4ms)  SELECT COUNT(*) FROM (SELECT 1 AS one FROM \"referrals\" WHERE \"referrals\".\"company_id\" = $1 LIMIT $2) subquery_for_count  [[\"company_id\",\"29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535\", [\"LIMIT\", 100]]\r\n=> 100\r\n```\r\n\r\nSo it's 300x faster even when doing an index only scan:\r\n\r\n```sql\r\nexplain SELECT COUNT(*) FROM \"referrals\" WHERE \"referrals\".\"company_id\" ='29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535';\r\n\r\n                                                                          QUERY PLAN                                                                           \r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n Finalize Aggregate  (cost=136744.58..136744.59 rows=1 width=8)\r\n   ->  Gather  (cost=136744.36..136744.57 rows=2 width=8)\r\n         Workers Planned: 2\r\n         ->  Partial Aggregate  (cost=135744.36..135744.37 rows=1 width=8)\r\n               ->  Parallel Index Only Scan using index_referrals_on_company_id_and_conversion_state on referrals  (cost=0.56..127008.31 rows=3494420 width=0)\r\n                     Index Cond: (company_id = '29f1dfa2-01d0-4e5d-b482-7aa1f3ba7535'::uuid)\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50823/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50820",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50820/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50820/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50820/events",
        "html_url": "https://github.com/rails/rails/pull/50820",
        "id": 2091981384,
        "node_id": "PR_kwDNIULOZJ9GIg",
        "number": 50820,
        "title": "docs: Update validation status based on autosave status",
        "user": {
            "login": "MONSURU-rgb",
            "id": 78952006,
            "node_id": "MDQ6VXNlcjc4OTUyMDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78952006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MONSURU-rgb",
            "html_url": "https://github.com/MONSURU-rgb",
            "followers_url": "https://api.github.com/users/MONSURU-rgb/followers",
            "following_url": "https://api.github.com/users/MONSURU-rgb/following{/other_user}",
            "gists_url": "https://api.github.com/users/MONSURU-rgb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MONSURU-rgb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MONSURU-rgb/subscriptions",
            "organizations_url": "https://api.github.com/users/MONSURU-rgb/orgs",
            "repos_url": "https://api.github.com/users/MONSURU-rgb/repos",
            "events_url": "https://api.github.com/users/MONSURU-rgb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MONSURU-rgb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-20T09:24:46Z",
        "updated_at": "2024-01-22T07:16:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50820",
            "html_url": "https://github.com/rails/rails/pull/50820",
            "diff_url": "https://github.com/rails/rails/pull/50820.diff",
            "patch_url": "https://github.com/rails/rails/pull/50820.patch",
            "merged_at": null
        },
        "body": "This Pull Request has been created to enlighten users that validations are enabled by default when autosave is True for the  `has_one` and `belongs_to`.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50815",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50815/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50815/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50815/events",
        "html_url": "https://github.com/rails/rails/pull/50815",
        "id": 2091630145,
        "node_id": "PR_kwDNIULOZJpzBQ",
        "number": 50815,
        "title": "Add format constraints for generated pwa routes",
        "user": {
            "login": "rossta",
            "id": 11673,
            "node_id": "MDQ6VXNlcjExNjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11673?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rossta",
            "html_url": "https://github.com/rossta",
            "followers_url": "https://api.github.com/users/rossta/followers",
            "following_url": "https://api.github.com/users/rossta/following{/other_user}",
            "gists_url": "https://api.github.com/users/rossta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rossta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rossta/subscriptions",
            "organizations_url": "https://api.github.com/users/rossta/orgs",
            "repos_url": "https://api.github.com/users/rossta/repos",
            "events_url": "https://api.github.com/users/rossta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rossta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T23:10:41Z",
        "updated_at": "2024-01-22T12:00:23Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50815",
            "html_url": "https://github.com/rails/rails/pull/50815",
            "diff_url": "https://github.com/rails/rails/pull/50815.diff",
            "patch_url": "https://github.com/rails/rails/pull/50815.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nAs a followup to #50528, which added default pwa manifest and service worker routes and files to the new app generator, I'd like to associate the new routes with the expected mime types.\r\n\r\n### Detail\r\n\r\nWe expect the `pwa#manifest` request to be limited to json, i.e. `manifest.json` and we expect the `pwa#service_worker` request to be limited to js, i.e. `service-worker.js`. This change adds format constraints to the generated routes.\r\n\r\n### Additional information\r\n\r\nI didn't see associated tests with the previous change but would be open to adding some if desired.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50812",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50812/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50812/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50812/events",
        "html_url": "https://github.com/rails/rails/issues/50812",
        "id": 2091410608,
        "node_id": "I_kwDNIULOfKhksA",
        "number": 50812,
        "title": "Redundant JOIN produced when merging relations from STI classes",
        "user": {
            "login": "mintyfresh",
            "id": 7896757,
            "node_id": "MDQ6VXNlcjc4OTY3NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7896757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintyfresh",
            "html_url": "https://github.com/mintyfresh",
            "followers_url": "https://api.github.com/users/mintyfresh/followers",
            "following_url": "https://api.github.com/users/mintyfresh/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintyfresh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintyfresh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintyfresh/subscriptions",
            "organizations_url": "https://api.github.com/users/mintyfresh/orgs",
            "repos_url": "https://api.github.com/users/mintyfresh/repos",
            "events_url": "https://api.github.com/users/mintyfresh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintyfresh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-19T20:59:12Z",
        "updated_at": "2024-01-26T14:10:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nMerging relations with joins to the same association by different classes in an STI tree results in duplicated, redundant JOINs in the emitted SQL.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :type\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n    t.boolean :published\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\n\r\n  scope :with_comments, -> { joins(:comments).where(comments: { published: true }) }\r\nend\r\n\r\nclass CustomPost < Post\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_merge_base_case\r\n    posts_with_comments1 = CustomPost.with_comments\r\n    posts_with_comments2 = CustomPost.with_comments\r\n\r\n    assert_equal [:comments], posts_with_comments1.joins_values\r\n    assert_equal [:comments], posts_with_comments2.joins_values\r\n\r\n    combined_scope = posts_with_comments1.merge(posts_with_comments2)\r\n\r\n    puts combined_scope.to_sql\r\n    assert_equal [:comments], combined_scope.joins_values\r\n  end\r\n\r\n  def test_merge_sti_case\r\n    posts_with_comments = Post.with_comments\r\n    custom_posts_with_comments = CustomPost.with_comments\r\n\r\n    assert_equal [:comments], posts_with_comments.joins_values\r\n    assert_equal [:comments], custom_posts_with_comments.joins_values\r\n\r\n    combined_scope = posts_with_comments.merge(custom_posts_with_comments)\r\n\r\n    puts combined_scope.to_sql\r\n    # FAILS! two joins are generated\r\n    assert_equal [:comments], combined_scope.joins_values\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nA query with a single join to the foreign table is produced\r\ne.g.\r\n```sql\r\nSELECT\r\n  \"posts\".*\r\nFROM\r\n  \"posts\"\r\n  INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\"\r\nWHERE\r\n  \"posts\".\"type\" = 'CustomPost'\r\n  AND \"comments\".\"published\" = 1\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nA query with two redundant joins to the foreign table is produced\r\n```sql\r\nSELECT\r\n  \"posts\".*\r\nFROM\r\n  \"posts\"\r\n  INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\"\r\n  INNER JOIN \"comments\" \"comments_posts\" ON \"comments_posts\".\"post_id\" = \"posts\".\"id\"\r\nWHERE\r\n  \"posts\".\"type\" = 'CustomPost'\r\n  AND \"comments\".\"published\" = 1\r\n```\r\nThis duplicated join is not referenced by the rest of the query in any way\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.1.0\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50811",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50811/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50811/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50811/events",
        "html_url": "https://github.com/rails/rails/pull/50811",
        "id": 2090495786,
        "node_id": "PR_kwDNIULOZItj4w",
        "number": 50811,
        "title": "Add multiple databases AR bug template [ci skip]",
        "user": {
            "login": "HeyNonster",
            "id": 47484308,
            "node_id": "MDQ6VXNlcjQ3NDg0MzA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47484308?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HeyNonster",
            "html_url": "https://github.com/HeyNonster",
            "followers_url": "https://api.github.com/users/HeyNonster/followers",
            "following_url": "https://api.github.com/users/HeyNonster/following{/other_user}",
            "gists_url": "https://api.github.com/users/HeyNonster/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HeyNonster/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HeyNonster/subscriptions",
            "organizations_url": "https://api.github.com/users/HeyNonster/orgs",
            "repos_url": "https://api.github.com/users/HeyNonster/repos",
            "events_url": "https://api.github.com/users/HeyNonster/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HeyNonster/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T12:54:28Z",
        "updated_at": "2024-01-19T12:58:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50811",
            "html_url": "https://github.com/rails/rails/pull/50811",
            "diff_url": "https://github.com/rails/rails/pull/50811.diff",
            "patch_url": "https://github.com/rails/rails/pull/50811.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because there are a few PRs we'd like to open that relate to the multiple database code in Rails but there was no existing template for a multiple database setup. \ud83d\ude42 \r\n\r\n### Detail\r\n\r\nThis commit adds a new bug report template that's based off of the existing [Active Record bug report\r\ntemplate](https://github.com/rails/rails/blob/main/guides/bug_report_templates/active_record.rb) but creates a multiple database setup.\r\n\r\nThe template creates an `UnshardedModel` abstract `ActiveRecord` model that connects to a single database (with a replica configured) and a `ShardedModel` abstract `ActiveRecord` model that has two shards configured, each with their own replica.\r\n\r\nEach sqlite3 in-memory database is separate because [opening multiple database connections each with the filename \":memory:\" will create independent in-memory databases](https://www.sqlite.org/inmemorydb.html).\r\n\r\nNote, that while replica databases are configured, sqlite3 does not support database replication and therefore records written to the writer databases will not auto-populate on the replica/reader databases. The replica configurations are included to allow for testing role switching, not for validating replication itself.\r\n\r\n### Additional information\r\n\r\nYou can test that the template works by running:\r\n\r\n `ruby guides/bug_report_templates/active_record_multiple_databases.rb` \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50807",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50807/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50807/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50807/events",
        "html_url": "https://github.com/rails/rails/issues/50807",
        "id": 2090245533,
        "node_id": "I_kwDNIULOfJadnQ",
        "number": 50807,
        "title": "Undocumented - validations enabled by autosave",
        "user": {
            "login": "semaperepelitsa",
            "id": 347921,
            "node_id": "MDQ6VXNlcjM0NzkyMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/347921?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semaperepelitsa",
            "html_url": "https://github.com/semaperepelitsa",
            "followers_url": "https://api.github.com/users/semaperepelitsa/followers",
            "following_url": "https://api.github.com/users/semaperepelitsa/following{/other_user}",
            "gists_url": "https://api.github.com/users/semaperepelitsa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semaperepelitsa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semaperepelitsa/subscriptions",
            "organizations_url": "https://api.github.com/users/semaperepelitsa/orgs",
            "repos_url": "https://api.github.com/users/semaperepelitsa/repos",
            "events_url": "https://api.github.com/users/semaperepelitsa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semaperepelitsa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-19T10:47:52Z",
        "updated_at": "2024-01-20T17:25:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Validations are enabled by default when autosave is true:\r\n\r\n    belongs_to :foo, autosave: true\r\n    has_one :foo, autosave: true\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/reflection.rb#L653-L658\r\n\r\nHowever, this is not documented in `has_one` or `belongs_to`:\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/associations.rb#L1660-L1669\r\n\r\nhttps://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/associations.rb#L1830-L1840",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50807/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50793",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50793/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50793/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50793/events",
        "html_url": "https://github.com/rails/rails/pull/50793",
        "id": 2088694143,
        "node_id": "PR_kwDNIULOZHJaNQ",
        "number": 50793,
        "title": "PoC: Add an option to disable connection checkout caching",
        "user": {
            "login": "byroot",
            "id": 44640,
            "node_id": "MDQ6VXNlcjQ0NjQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/byroot",
            "html_url": "https://github.com/byroot",
            "followers_url": "https://api.github.com/users/byroot/followers",
            "following_url": "https://api.github.com/users/byroot/following{/other_user}",
            "gists_url": "https://api.github.com/users/byroot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/byroot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/byroot/subscriptions",
            "organizations_url": "https://api.github.com/users/byroot/orgs",
            "repos_url": "https://api.github.com/users/byroot/repos",
            "events_url": "https://api.github.com/users/byroot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/byroot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-18T16:54:17Z",
        "updated_at": "2024-01-19T22:11:55Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50793",
            "html_url": "https://github.com/rails/rails/pull/50793",
            "diff_url": "https://github.com/rails/rails/pull/50793.diff",
            "patch_url": "https://github.com/rails/rails/pull/50793.patch",
            "merged_at": null
        },
        "body": "### Context\r\n\r\nIn part for performance and simplicity reasons, and in part because of its historical lack of threading support, Active Record rely quite heavily on `ActiveRecord::Base.connection` checking out and holding a connection inside a thread of fiber local variable.\r\n\r\nConcretly, every request or job lazily checkout connections when it needs to perform a database operations, and then holds onto it until the request or job completes, at which point the `Executor` hook automatically check it back in the pool.\r\n\r\nFor the overwhelming majority of Rails application, which don't do enough IOs to benefit from more than a handful of threads, it's a perfectly adequate solution, as it pretty much remove connection management as a concern.\r\n\r\nHowever for applications that spent most of their time on IOs others than the database (e.g. 3rd party APIs), and would benefit from much higher levels of concurrency, this strategy is problematic because it requires about as many database connections as there is threads or fibers, even though most connections are idle but can't be used because they checked out of the pool and held by another thead or fiber.\r\n\r\n### Goal\r\n\r\nI believe the current model is still preferable for the vast majority of Rails users, and changing the way `ActiveRecord::Base.connection` behaves would break a ton of code anyway. So I believe it should remain the default.\r\n\r\nHowever I think we could support an alternative mode, in which `ActiveRecord::Base.connection` doesn't hold onto the connection until the end of the request cycle, but instead immediately check it back in, allowing it to be re-used immediately.\r\n\r\n### Implementation\r\n\r\nFirst, nothing changes unless you disable `ActiveRecord.cache_connection_checkout`.\r\n\r\nThen, since a lot of code in Rails itself, in third party libraries, and in private Rails applications do rely on `Model.connection.something()`, we must make it work without caching the connection.\r\n\r\nTo solve this, when caching is disabled, `Model.connection` returns a proxy object, that delegates the methods it receive to a freshly checked out connection, and then check it back in. See `LazyConnectionProxy` in `connection_pool.rb` for the details.\r\n\r\nThat is the key to permitting this feature while retaining backward compatibility. It's not perfect, as code might assume that subsequent calls to `Model.connection` will return the same connection instance, but in most case it's not necessary.\r\n\r\nAlso, while the proxy holds the connection, it caches in on the thread or fiber, so subsequent calls to `Model.connection` will return the same connection until it's checked back in. This solves most of the statefulness issues, like opening a transaction etc, as long as the APIs are blocked based.\r\n\r\n### Status\r\n\r\nThis is a proof of concept, it's nowhere near ready to merge, it's mostly to explore whether it's doable with some work, or just not possible.\r\n\r\nMost of the Active Record test suite passes against Sqlite3, except for 3 tests that do disconnect and reconnect. In general all the tests had to be opted out of the feature, I still need to dig into why exactly.\r\n\r\nI also had to disable the feature for a few test suites that rely too much on the caching, and would need a bit of refactoring to pass without, but at first glance it doesn't look like a fundamental incompatibility.\r\n\r\n### Concerns\r\n\r\nThere is a number of Active Record methods that currently cause more than one checkout/checkin cycle and would benefit from a strategically placed `with_connection do` call to optimize that. But that is mostly a performance concern, not a fundamental incompatibility.\r\n\r\nOne more major concern is the query cache. As it stand it's pretty much useless when checkout caching is disabled, because when we check the connection back in, we have to clear the cache, so it's pretty much always empty. To make it usable again, we need a substantial refactoring. At first glance it looks possible, just not trivial.\r\n\r\n### Conclusion\r\n\r\nI'm a bit on the fence about this. I think we can make it work, but I already spent most of one day on just the proof of concept, and would need substantially more work to iron out all the issues.\r\n\r\nThe actual code changes needed in Active Record itself are relatively small, it's really all the test suite and 3rd party code that would need to be updated to properly work with this option that is the big can of worm I'm worried about.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50793/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50792",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50792/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50792/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50792/events",
        "html_url": "https://github.com/rails/rails/issues/50792",
        "id": 2088620752,
        "node_id": "I_kwDNIULOfH3S0A",
        "number": 50792,
        "title": "`app:update` from Rails 7.1.2 to 7.1.3 creates `new_framework_defaults_7_1.rb`",
        "user": {
            "login": "GitToTheHub",
            "id": 13721821,
            "node_id": "MDQ6VXNlcjEzNzIxODIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13721821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GitToTheHub",
            "html_url": "https://github.com/GitToTheHub",
            "followers_url": "https://api.github.com/users/GitToTheHub/followers",
            "following_url": "https://api.github.com/users/GitToTheHub/following{/other_user}",
            "gists_url": "https://api.github.com/users/GitToTheHub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GitToTheHub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GitToTheHub/subscriptions",
            "organizations_url": "https://api.github.com/users/GitToTheHub/orgs",
            "repos_url": "https://api.github.com/users/GitToTheHub/repos",
            "events_url": "https://api.github.com/users/GitToTheHub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GitToTheHub/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-18T16:15:11Z",
        "updated_at": "2024-01-19T09:40:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\nI made an update from Rails 7.1.2 to 7.1.3 by changing the rails version number to 7.1.3 in the gemfile and running `bundle update`. After that i ran `rails app:update` which produced the file `config/initializers/new_framework_defaults_7_1.rb`. I already have `config.load_defaults 7.1` in my `config/application.rb`, so I think, this file shouldn't be generated?\r\n\r\n### Expected behavior\r\nThe file `config/initializers/new_framework_defaults_7_1.rb` should not be created, if `config.load_defaults 7.1` is already present in `config/application.rb`.\r\n\r\n### Actual behavior\r\nThe file `config/initializers/new_framework_defaults_7_1.rb` is created after  `rails app:update`, despite `config.load_defaults 7.1` is already present in `config/application.rb`.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.3\r\n\r\n**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x64-mingw-ucrt]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50785",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50785/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50785/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50785/events",
        "html_url": "https://github.com/rails/rails/pull/50785",
        "id": 2087298785,
        "node_id": "PR_kwDNIULOZF9HWA",
        "number": 50785,
        "title": "Add note about `params` hash in Action Controller Overview [ci skip] ",
        "user": {
            "login": "JunichiIto",
            "id": 1148320,
            "node_id": "MDQ6VXNlcjExNDgzMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1148320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunichiIto",
            "html_url": "https://github.com/JunichiIto",
            "followers_url": "https://api.github.com/users/JunichiIto/followers",
            "following_url": "https://api.github.com/users/JunichiIto/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunichiIto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunichiIto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunichiIto/subscriptions",
            "organizations_url": "https://api.github.com/users/JunichiIto/orgs",
            "repos_url": "https://api.github.com/users/JunichiIto/repos",
            "events_url": "https://api.github.com/users/JunichiIto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunichiIto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-18T01:26:00Z",
        "updated_at": "2024-01-18T17:22:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50785",
            "html_url": "https://github.com/rails/rails/pull/50785",
            "diff_url": "https://github.com/rails/rails/pull/50785.diff",
            "patch_url": "https://github.com/rails/rails/pull/50785.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nNewbies tend to misunderstand `params` hash is a plain old Hash. So I added a note that `params` hash is ActionController::Parameters.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes \"4 Parameters\" in Action Controller Overview.\r\n\r\n![Screenshot 2024-01-18 at 10 31 55](https://github.com/rails/rails/assets/1148320/de0dc860-35d1-4d3b-b209-ab4abbac5a17)\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50785/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50785/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50780",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50780/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50780/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50780/events",
        "html_url": "https://github.com/rails/rails/pull/50780",
        "id": 2086045509,
        "node_id": "PR_kwDNIULOZE41OQ",
        "number": 50780,
        "title": "Preserve `--asset-pipeline propshaft` when running `app:update`",
        "user": {
            "login": "zachasme",
            "id": 986290,
            "node_id": "MDQ6VXNlcjk4NjI5MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/986290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zachasme",
            "html_url": "https://github.com/zachasme",
            "followers_url": "https://api.github.com/users/zachasme/followers",
            "following_url": "https://api.github.com/users/zachasme/following{/other_user}",
            "gists_url": "https://api.github.com/users/zachasme/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zachasme/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zachasme/subscriptions",
            "organizations_url": "https://api.github.com/users/zachasme/orgs",
            "repos_url": "https://api.github.com/users/zachasme/repos",
            "events_url": "https://api.github.com/users/zachasme/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zachasme/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/88",
            "html_url": "https://github.com/rails/rails/milestone/88",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/88/labels",
            "id": 10422595,
            "node_id": "MI_kwDNIULOAJ8JQw",
            "number": 88,
            "title": "7.1.4",
            "description": null,
            "creator": {
                "login": "rafaelfranca",
                "id": 47848,
                "node_id": "MDQ6VXNlcjQ3ODQ4",
                "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rafaelfranca",
                "html_url": "https://github.com/rafaelfranca",
                "followers_url": "https://api.github.com/users/rafaelfranca/followers",
                "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
                "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
                "repos_url": "https://api.github.com/users/rafaelfranca/repos",
                "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 2,
            "state": "open",
            "created_at": "2024-01-15T23:00:48Z",
            "updated_at": "2024-01-28T20:30:34Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-17T12:02:43Z",
        "updated_at": "2024-01-28T20:30:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50780",
            "html_url": "https://github.com/rails/rails/pull/50780",
            "diff_url": "https://github.com/rails/rails/pull/50780.diff",
            "patch_url": "https://github.com/rails/rails/pull/50780.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because `skip_sprockets?` wasn't being preserved when running `app:update` in a project using `propshaft`. Helpful when #50444 lands.\r\n\r\n### Detail\r\n\r\nThis Pull Request sets `options[:asset_pipeline]` in `AppUpdater` based on whether Sprockets/Propshaft Railtie is defined.\r\n\r\nWithout this change, `app:update` will suggest injecting sprocket configuration in a propshaft project.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50780/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50772",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50772/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50772/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50772/events",
        "html_url": "https://github.com/rails/rails/issues/50772",
        "id": 2084942985,
        "node_id": "I_kwDNIULOfEW0iQ",
        "number": 50772,
        "title": "Tests can't run without yarn",
        "user": {
            "login": "arusa",
            "id": 623008,
            "node_id": "MDQ6VXNlcjYyMzAwOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/623008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arusa",
            "html_url": "https://github.com/arusa",
            "followers_url": "https://api.github.com/users/arusa/followers",
            "following_url": "https://api.github.com/users/arusa/following{/other_user}",
            "gists_url": "https://api.github.com/users/arusa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arusa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arusa/subscriptions",
            "organizations_url": "https://api.github.com/users/arusa/orgs",
            "repos_url": "https://api.github.com/users/arusa/repos",
            "events_url": "https://api.github.com/users/arusa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arusa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-16T21:11:58Z",
        "updated_at": "2024-01-29T19:27:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n1. Create a new rails app that uses yarn\r\n2. `docker build -t testimage:1 .`\r\n3. `docker run -it testimage:1 /bin/bash`\r\n4. `bin/rails test`\r\n\r\n### Expected behavior\r\n\r\nAs the image already contains all precompiled assets I would expect the tests to be able to run successfully even without precompiling first.\r\n\r\n### Actual behavior\r\n\r\n`bin/rails test` now always runs `test:prepare`, which tries to compile the assets and therefore crashes, because the default Dockerfile doesn't keep yarn in the image.\r\n\r\nI want an option to skip running `test:prepare` when running tests.\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.1.4",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50772/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50768",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50768/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50768/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50768/events",
        "html_url": "https://github.com/rails/rails/issues/50768",
        "id": 2084328879,
        "node_id": "I_kwDNIULOfDxVrw",
        "number": 50768,
        "title": "The `counter_cache_column?` method is depending of initialisation order.",
        "user": {
            "login": "BuonOmo",
            "id": 11378424,
            "node_id": "MDQ6VXNlcjExMzc4NDI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11378424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BuonOmo",
            "html_url": "https://github.com/BuonOmo",
            "followers_url": "https://api.github.com/users/BuonOmo/followers",
            "following_url": "https://api.github.com/users/BuonOmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/BuonOmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BuonOmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BuonOmo/subscriptions",
            "organizations_url": "https://api.github.com/users/BuonOmo/orgs",
            "repos_url": "https://api.github.com/users/BuonOmo/repos",
            "events_url": "https://api.github.com/users/BuonOmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BuonOmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-16T15:54:58Z",
        "updated_at": "2024-01-20T17:21:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :people, force: true do |t|\r\n    t.integer :cars_count, default: 0\r\n  end\r\n\r\n  create_table :cars, force: true do |t|\r\n    t.belongs_to :person\r\n  end\r\nend\r\n\r\nclass Car < ActiveRecord::Base\r\n  belongs_to :person, counter_cache: true\r\nend\r\n\r\n# If the `Person` class was defined before, the test below would work\r\nclass Person < ActiveRecord::Base\r\n  has_many :cars\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_counter_cache_column?\r\n    assert Person.counter_cache_column?(\"cars_count\")\r\n    assert_not Car.counter_cache_column?(\"cars_count\")\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nthe `Person` class should identify clearly `cars_count` as a counter cache column\r\n\r\n### Actual behavior\r\n\r\nSince `Person` is initialized afterwards, when running `belong_to`, the `cars_count` column is not added to its counter_cache\r\n\r\n### System configuration\r\n**Rails version**: found in `7.1.2`, present in edge as well\r\n\r\n**Ruby version**: 3.2.1\r\n\r\n### Notes\r\n\r\nIn the actual ActiveRecord test suite, this test could fall if in the future a file requiring first `models/car` is loaded before the `counter_cache_test` file.\r\n\r\nAlso I'd be so glad to work on the solution. It seems to me that the issue is that [this expression](https://github.com/rails/rails/blob/0656787be644d7d5550e82450153403853c73014/activerecord/lib/active_record/associations/builder/belongs_to.rb#L39C5-L39C5) can return `nil`. I'm just not sure how it should be solved (by raising, autoloading, warning, ...)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50768/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50763",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50763/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50763/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50763/events",
        "html_url": "https://github.com/rails/rails/pull/50763",
        "id": 2082801297,
        "node_id": "PR_kwDNIULOZCHHNg",
        "number": 50763,
        "title": "Allow custom domain extractor class on ActionDispatch::Http::URL",
        "user": {
            "login": "rainerborene",
            "id": 101501,
            "node_id": "MDQ6VXNlcjEwMTUwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/101501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainerborene",
            "html_url": "https://github.com/rainerborene",
            "followers_url": "https://api.github.com/users/rainerborene/followers",
            "following_url": "https://api.github.com/users/rainerborene/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainerborene/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainerborene/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainerborene/subscriptions",
            "organizations_url": "https://api.github.com/users/rainerborene/orgs",
            "repos_url": "https://api.github.com/users/rainerborene/repos",
            "events_url": "https://api.github.com/users/rainerborene/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainerborene/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-15T23:32:04Z",
        "updated_at": "2024-01-18T20:47:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50763",
            "html_url": "https://github.com/rails/rails/pull/50763",
            "diff_url": "https://github.com/rails/rails/pull/50763.diff",
            "patch_url": "https://github.com/rails/rails/pull/50763.patch",
            "merged_at": null
        },
        "body": "In these last years we have been using a monkey patch at our company that smartly detects domain and subdomains according to the [Public Suffix database](https://publicsuffix.org/). There are a few gems in our ecosystems like [public_suffix](https://github.com/weppos/publicsuffix-ruby) and [mini_suffix](https://github.com/discourse/mini_suffix) that does exactly that. But Rails uses an older and primitive method that splits the domain tld using `config.action_dispatch.tld_length` option. This pull request changes that by allowing developers to specify a custom domain extractor class.\r\n\r\nThis is really useful for any SaaS company that offers custom domain and subdomains.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50763/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50761",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50761/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50761/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50761/events",
        "html_url": "https://github.com/rails/rails/pull/50761",
        "id": 2082689851,
        "node_id": "PR_kwDNIULOZCBEaQ",
        "number": 50761,
        "title": "Improve documentation of ActiveRecord::Core.configurations",
        "user": {
            "login": "p8",
            "id": 28561,
            "node_id": "MDQ6VXNlcjI4NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p8",
            "html_url": "https://github.com/p8",
            "followers_url": "https://api.github.com/users/p8/followers",
            "following_url": "https://api.github.com/users/p8/following{/other_user}",
            "gists_url": "https://api.github.com/users/p8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/p8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/p8/subscriptions",
            "organizations_url": "https://api.github.com/users/p8/orgs",
            "repos_url": "https://api.github.com/users/p8/repos",
            "events_url": "https://api.github.com/users/p8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/p8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-15T21:18:15Z",
        "updated_at": "2024-01-16T12:15:00Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50761",
            "html_url": "https://github.com/rails/rails/pull/50761",
            "diff_url": "https://github.com/rails/rails/pull/50761.diff",
            "patch_url": "https://github.com/rails/rails/pull/50761.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThe documenation of `ActiveRecord::Core.configurations=` [reads](https://edgeapi.rubyonrails.org/classes/ActiveRecord/Core.html#method-c-configurations-3D) like the documentation for the getter instead of the setter.\r\nIt should not describe what is returned, but what arguments are expected.\r\n\r\nThis changes moves the documentation of the setter to the getter and adds a new comment to the setter.\r\n\r\nThis commit has 2 separate commits to make sure the diffs only apply to documentation and not the code.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50761/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50759",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50759/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50759/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50759/events",
        "html_url": "https://github.com/rails/rails/issues/50759",
        "id": 2082675602,
        "node_id": "I_kwDNIULOfCMbkg",
        "number": 50759,
        "title": "Migrate Rails API doc to use Markdown instead of RDoc format",
        "user": {
            "login": "rafaelfranca",
            "id": 47848,
            "node_id": "MDQ6VXNlcjQ3ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rafaelfranca",
            "html_url": "https://github.com/rafaelfranca",
            "followers_url": "https://api.github.com/users/rafaelfranca/followers",
            "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
            "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
            "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
            "repos_url": "https://api.github.com/users/rafaelfranca/repos",
            "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/rails/rails/milestones/87",
            "html_url": "https://github.com/rails/rails/milestone/87",
            "labels_url": "https://api.github.com/repos/rails/rails/milestones/87/labels",
            "id": 10350173,
            "node_id": "MI_kwDNIULOAJ3uXQ",
            "number": 87,
            "title": "8.0.0",
            "description": null,
            "creator": {
                "login": "dhh",
                "id": 2741,
                "node_id": "MDQ6VXNlcjI3NDE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2741?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dhh",
                "html_url": "https://github.com/dhh",
                "followers_url": "https://api.github.com/users/dhh/followers",
                "following_url": "https://api.github.com/users/dhh/following{/other_user}",
                "gists_url": "https://api.github.com/users/dhh/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
                "organizations_url": "https://api.github.com/users/dhh/orgs",
                "repos_url": "https://api.github.com/users/dhh/repos",
                "events_url": "https://api.github.com/users/dhh/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dhh/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 16,
            "closed_issues": 9,
            "state": "open",
            "created_at": "2023-12-26T22:00:17Z",
            "updated_at": "2024-01-15T21:02:57Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-01-15T21:02:56Z",
        "updated_at": "2024-01-15T21:02:57Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "### NOTE: We aren't going to accept any PR doing this migration\r\n\r\nFrom time to time, we have to remember that while documenting some method on Rails, using `+foo+` to denote a method name or argument sometimes need to change to be `<tt>foo</tt>` in order to be documented. We also sometimes receive PRs with people accidentally introducing backticks that doesn't have any effect in the documentation.\r\n\r\nOur guides also uses Markdown syntax, so contributors need to know they need to change syntax when writting documentation.\r\n\r\nText editors, like VScode don't know how to highlight RDoc code so often see Rails documentation formatted like this when you hover over a class\r\n\r\n<img width=\"802\" alt=\"Screenshot 2024-01-15 at 4 01 03\u202fPM\" src=\"https://github.com/rails/rails/assets/47848/2e31157d-dd86-487d-83d6-c34e4c013151\">\r\n<img width=\"810\" alt=\"Screenshot 2024-01-15 at 4 02 00\u202fPM\" src=\"https://github.com/rails/rails/assets/47848/435e899b-8cfc-4bf4-9b8c-dfd7383fd867\">\r\n\r\nNowadays, RDoc supports Markdown as syntax. So we can avoid all those problems migrating all our API documentation to use Markdown.\r\n\r\n### NOTE: We aren't going to accept any PR doing this migration",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50759/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 6,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50759/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50755",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50755/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50755/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50755/events",
        "html_url": "https://github.com/rails/rails/issues/50755",
        "id": 2081488829,
        "node_id": "I_kwDNIULOfBD_vQ",
        "number": 50755,
        "title": "Action Mailbox mistakes attachment as body if no body exists",
        "user": {
            "login": "HashNotAdam",
            "id": 902714,
            "node_id": "MDQ6VXNlcjkwMjcxNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/902714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashNotAdam",
            "html_url": "https://github.com/HashNotAdam",
            "followers_url": "https://api.github.com/users/HashNotAdam/followers",
            "following_url": "https://api.github.com/users/HashNotAdam/following{/other_user}",
            "gists_url": "https://api.github.com/users/HashNotAdam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HashNotAdam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HashNotAdam/subscriptions",
            "organizations_url": "https://api.github.com/users/HashNotAdam/orgs",
            "repos_url": "https://api.github.com/users/HashNotAdam/repos",
            "events_url": "https://api.github.com/users/HashNotAdam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HashNotAdam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1174770998,
                "node_id": "MDU6TGFiZWwxMTc0NzcwOTk4",
                "url": "https://api.github.com/repos/rails/rails/labels/actionmailbox",
                "name": "actionmailbox",
                "color": "f4a6cb",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-15T08:23:19Z",
        "updated_at": "2024-01-17T18:28:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have set up a mailbox to process DMARC reports. This has been working fine in most cases, but it seems that sometimes Google doesn't include body text in the email\u2014only a zipped XML file as an attachment.\r\n\r\nWhen this happens, Action Mailbox decodes the Base64 encoding of the attachment and assigns the string representation of the binary data to the body of the message without adding the file as an attachment. I have noticed that the email also isn't recognised as being multipart.\r\n\r\n### Steps to reproduce\r\n\r\nI've created [a gist which includes the unedited email source](https://gist.github.com/HashNotAdam/f5d08e370e70e9e39105fa765563c5b3) as copied from the EML file stored by Active Storage\r\n\r\n### Expected behavior\r\nThe body of the message should include the Base64 encoding of the attachment and there should be 1 attachment representing a ZIP file\r\n\r\n### Actual behavior\r\nCalling `body.to_s` on the underlying `Mail::Message` will return a string representation of the binary data which can be unzipped to return the XML. If the EML file were to be opened in an email client, this would be presented as an attachment\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50755/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50754",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50754/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50754/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50754/events",
        "html_url": "https://github.com/rails/rails/pull/50754",
        "id": 2081074654,
        "node_id": "PR_kwDNIULOZAp6FQ",
        "number": 50754,
        "title": "Allow named variants to evaluate dynamic transformation options",
        "user": {
            "login": "xjunior",
            "id": 8156,
            "node_id": "MDQ6VXNlcjgxNTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xjunior",
            "html_url": "https://github.com/xjunior",
            "followers_url": "https://api.github.com/users/xjunior/followers",
            "following_url": "https://api.github.com/users/xjunior/following{/other_user}",
            "gists_url": "https://api.github.com/users/xjunior/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xjunior/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xjunior/subscriptions",
            "organizations_url": "https://api.github.com/users/xjunior/orgs",
            "repos_url": "https://api.github.com/users/xjunior/repos",
            "events_url": "https://api.github.com/users/xjunior/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xjunior/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-15T01:18:24Z",
        "updated_at": "2024-01-18T00:07:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50754",
            "html_url": "https://github.com/rails/rails/pull/50754",
            "diff_url": "https://github.com/rails/rails/pull/50754.diff",
            "patch_url": "https://github.com/rails/rails/pull/50754.patch",
            "merged_at": null
        },
        "body": "<!--\nThanks for contributing to Rails!\n\nPlease do not make *Draft* pull requests, as they still send\nnotifications to everyone watching the Rails repo.\n\nCreate a pull request when it is ready for review and feedback\nfrom the Rails team :).\n\nIf your pull request affects documentation or any non-code\nchanges, guidelines for those changes are [available\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\n\nAbout this template\n\nThe following template aims to help contributors write a good description for their pull requests.\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\n\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\n\n### Motivation / Background\n\n<!--\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\n-->\n\nSometimes you want to build a transformation based on the user input, or information persisted in the database (i.e.: add a watermark to a picture, crop based on user input)\n\n### Detail\n\nThis PR allow the transformations to be built based on user input:\n\n```ruby\nclass User < ApplicationRecord\n  has_one_attached :photo do |attachable|\n    attachable.variant :default, crop: :crop_positions\n    attachable.variant :thumb, crop: :crop_positions,\n                               resize_to_limit: [100, 100]\n  end\n\n  def crop_positions\n    [crop_x1, crop_y1, crop_x2, crop_y2]\n  end\nend\n```\n\n### Checklist\n\nBefore submitting the PR make sure the following are checked:\n\n- [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\n- [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\n- [x] Tests are added or updated if you fix a bug or add a feature.\n- [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50754/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50754/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50744",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50744/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50744/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50744/events",
        "html_url": "https://github.com/rails/rails/pull/50744",
        "id": 2080405528,
        "node_id": "PR_kwDNIULOZAH76A",
        "number": 50744,
        "title": "docs: Update FormHelper comments to use `form_with` instead of `form_for` [ci skip]",
        "user": {
            "login": "takatea",
            "id": 39912547,
            "node_id": "MDQ6VXNlcjM5OTEyNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39912547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/takatea",
            "html_url": "https://github.com/takatea",
            "followers_url": "https://api.github.com/users/takatea/followers",
            "following_url": "https://api.github.com/users/takatea/following{/other_user}",
            "gists_url": "https://api.github.com/users/takatea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/takatea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/takatea/subscriptions",
            "organizations_url": "https://api.github.com/users/takatea/orgs",
            "repos_url": "https://api.github.com/users/takatea/repos",
            "events_url": "https://api.github.com/users/takatea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/takatea/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-13T17:32:39Z",
        "updated_at": "2024-01-13T17:32:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50744",
            "html_url": "https://github.com/rails/rails/pull/50744",
            "diff_url": "https://github.com/rails/rails/pull/50744.diff",
            "patch_url": "https://github.com/rails/rails/pull/50744.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because comments in `ActionView::Helpers::FormHelper` refer to the deprecated `form_for` instead of the recommended `form_with`. This could potentially cause confusion for developers consulting the Rails API documentation, such as [Action View Form Builder page](https://api.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html).\r\n\r\n### Detail\r\n\r\nThis Pull Request changes  the comments in `ActionView::Helpers::FormHelper`, replacing instances of `form_for` with `form_with`.\r\n\r\n### Additional information\r\n\r\nThe Rails guide has already documented the usage of `form_with` on the [form_helpers page](https://guides.rubyonrails.org/form_helpers.html).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50744/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50734",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50734/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50734/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50734/events",
        "html_url": "https://github.com/rails/rails/pull/50734",
        "id": 2079487889,
        "node_id": "PR_kwDNIULOY_XCHQ",
        "number": 50734,
        "title": "docs: Adjust composite primary keys documentation [skip ci]",
        "user": {
            "login": "matsales28",
            "id": 54689845,
            "node_id": "MDQ6VXNlcjU0Njg5ODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/54689845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matsales28",
            "html_url": "https://github.com/matsales28",
            "followers_url": "https://api.github.com/users/matsales28/followers",
            "following_url": "https://api.github.com/users/matsales28/following{/other_user}",
            "gists_url": "https://api.github.com/users/matsales28/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matsales28/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matsales28/subscriptions",
            "organizations_url": "https://api.github.com/users/matsales28/orgs",
            "repos_url": "https://api.github.com/users/matsales28/repos",
            "events_url": "https://api.github.com/users/matsales28/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matsales28/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T18:49:57Z",
        "updated_at": "2024-01-17T18:36:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50734",
            "html_url": "https://github.com/rails/rails/pull/50734",
            "diff_url": "https://github.com/rails/rails/pull/50734.diff",
            "patch_url": "https://github.com/rails/rails/pull/50734.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because the documentation for composite primary keys wasn't correct. \r\n\r\n### Detail\r\n\r\nWhile working on `shoulda-matchers` I noticed that the documentation is not correct. We actually need to declare the `query_constraints` option in the `has_many` association using the same attribute name as the ones in the associated object.\r\n\r\n```ruby\r\nclass Author < ApplicationRecord\r\n  self.primary_key = [:first_name, :last_name]\r\n  # This was incorrect as `first_name` and `last_name` don't exist on the `Book` model.\r\n  has_many :books, query_constraints: [:first_name, :last_name] \r\n  \r\n  # Correct way\r\n  has_many :books, query_constraints: [:author_first_name, :author_last_name]\r\nend\r\n\r\nclass Book < ApplicationRecord\r\n  belongs_to :author, query_constraints: [:author_first_name, :author_last_name]\r\nend\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50734/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50731",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50731/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50731/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50731/events",
        "html_url": "https://github.com/rails/rails/pull/50731",
        "id": 2079331695,
        "node_id": "PR_kwDNIULOY_OS5w",
        "number": 50731,
        "title": "Document passing hash as id option on create_table",
        "user": {
            "login": "javierav",
            "id": 99700,
            "node_id": "MDQ6VXNlcjk5NzAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/99700?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/javierav",
            "html_url": "https://github.com/javierav",
            "followers_url": "https://api.github.com/users/javierav/followers",
            "following_url": "https://api.github.com/users/javierav/following{/other_user}",
            "gists_url": "https://api.github.com/users/javierav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/javierav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/javierav/subscriptions",
            "organizations_url": "https://api.github.com/users/javierav/orgs",
            "repos_url": "https://api.github.com/users/javierav/repos",
            "events_url": "https://api.github.com/users/javierav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/javierav/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T17:21:32Z",
        "updated_at": "2024-01-12T17:21:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50731",
            "html_url": "https://github.com/rails/rails/pull/50731",
            "diff_url": "https://github.com/rails/rails/pull/50731.diff",
            "patch_url": "https://github.com/rails/rails/pull/50731.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThe `id` keyword argument passed to [create_table](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_table) method allow to receive a hash with options for column creation but it's not documented.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50731/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50727",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50727/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50727/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50727/events",
        "html_url": "https://github.com/rails/rails/pull/50727",
        "id": 2078984168,
        "node_id": "PR_kwDNIULOY-65Mw",
        "number": 50727,
        "title": "Action View Tests: Use `#with_routing` helper",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-12T14:36:26Z",
        "updated_at": "2024-01-29T14:25:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50727",
            "html_url": "https://github.com/rails/rails/pull/50727",
            "diff_url": "https://github.com/rails/rails/pull/50727.diff",
            "patch_url": "https://github.com/rails/rails/pull/50727.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFollow-up to [#49819][]\r\n\r\n### Detail\r\n\r\nSince [#49819][] resolves an issue with\r\n`ActionDispatch::IntegrationTest#with_routing` helper support, Action View's `test/abstract_unit.rb` file can rely on routing being reset within the block argument.\r\n\r\nThis means that the `RoutedRackApp` class and `.build_app` method is can be made unnecessary.\r\n\r\n[#49819]: https://github.com/rails/rails/pull/49819\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50727/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50727/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50722",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50722/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50722/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50722/events",
        "html_url": "https://github.com/rails/rails/pull/50722",
        "id": 2078567396,
        "node_id": "PR_kwDNIULOY-j0Ow",
        "number": 50722,
        "title": "Downcase the model name in the system scaffolds",
        "user": {
            "login": "dwightwatson",
            "id": 1100408,
            "node_id": "MDQ6VXNlcjExMDA0MDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1100408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dwightwatson",
            "html_url": "https://github.com/dwightwatson",
            "followers_url": "https://api.github.com/users/dwightwatson/followers",
            "following_url": "https://api.github.com/users/dwightwatson/following{/other_user}",
            "gists_url": "https://api.github.com/users/dwightwatson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dwightwatson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dwightwatson/subscriptions",
            "organizations_url": "https://api.github.com/users/dwightwatson/orgs",
            "repos_url": "https://api.github.com/users/dwightwatson/repos",
            "events_url": "https://api.github.com/users/dwightwatson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dwightwatson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-12T10:51:23Z",
        "updated_at": "2024-01-15T02:43:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50722",
            "html_url": "https://github.com/rails/rails/pull/50722",
            "diff_url": "https://github.com/rails/rails/pull/50722.diff",
            "patch_url": "https://github.com/rails/rails/pull/50722.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nI noticed there is an inconsistency in the system test scaffold where the model name is sometimes capitalised. This fixes the two instances where the model name is humanised.\r\n\r\n```rb\r\ntest \"should create user\"\r\ntest \"should update User\"\r\ntest \"should destroy User\"\r\n```\r\n\r\nConsidering all the other scaffolds use lowercase text I think it's right these two are downcased in the same way.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50722/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50722/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50721",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50721/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50721/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50721/events",
        "html_url": "https://github.com/rails/rails/pull/50721",
        "id": 2078388014,
        "node_id": "PR_kwDNIULOY-aIsQ",
        "number": 50721,
        "title": "Pool disabled query cache handling",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-12T09:06:56Z",
        "updated_at": "2024-01-30T07:46:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50721",
            "html_url": "https://github.com/rails/rails/pull/50721",
            "diff_url": "https://github.com/rails/rails/pull/50721.diff",
            "patch_url": "https://github.com/rails/rails/pull/50721.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nFor [Solid Cache](https://github.com/rails/solid_cache), we want to be able to read and write from the cache database without using the query cache. \r\n\r\nWe also don't want to expire the query cache on other connection pools when we write. Writing to the Rails cache shouldn't invalidate the main query cache.\r\n\r\nThis is an alternative to https://github.com/rails/rails/pull/50695, based on @byroot's [suggestion here](https://github.com/rails/rails/pull/50695#issuecomment-1885312807).\r\n\r\n### Detail\r\n\r\nAfter a database write we clear the query cache on all connection pools. The change here is that we will now only do that if either the connection pool or the connection itself has the query cache enabled.\r\n\r\nThe query cache is [enabled on all connection pools](https://github.com/rails/rails/blob/cff2eb1be11cb729382b3674e3caa2bd198ec55e/activerecord/lib/active_record/query_cache.rb#L28-L42) by the executor hooks, so to take advantage of this we'll need to add another executor hook that disables the query cache on the Solid Cache connection pool (but only when it has a dedicated pool). \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50721/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50717",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50717/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50717/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50717/events",
        "html_url": "https://github.com/rails/rails/pull/50717",
        "id": 2077465816,
        "node_id": "PR_kwDNIULOY9n-Rg",
        "number": 50717,
        "title": "Expand documentation for ActiveRecord::Core #dup and #clone",
        "user": {
            "login": "p8",
            "id": 28561,
            "node_id": "MDQ6VXNlcjI4NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p8",
            "html_url": "https://github.com/p8",
            "followers_url": "https://api.github.com/users/p8/followers",
            "following_url": "https://api.github.com/users/p8/following{/other_user}",
            "gists_url": "https://api.github.com/users/p8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/p8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/p8/subscriptions",
            "organizations_url": "https://api.github.com/users/p8/orgs",
            "repos_url": "https://api.github.com/users/p8/repos",
            "events_url": "https://api.github.com/users/p8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/p8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-11T19:46:53Z",
        "updated_at": "2024-01-17T10:26:04Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50717",
            "html_url": "https://github.com/rails/rails/pull/50717",
            "diff_url": "https://github.com/rails/rails/pull/50717.diff",
            "patch_url": "https://github.com/rails/rails/pull/50717.patch",
            "merged_at": null
        },
        "body": "Splits the examples for `#clone` into separate sections for easier scanability.\r\n\r\nAdds examples to `#dup` to clarify the difference with `#clone`.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50717/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50717/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50710",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50710/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50710/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50710/events",
        "html_url": "https://github.com/rails/rails/pull/50710",
        "id": 2077153009,
        "node_id": "PR_kwDNIULOY9Wvpg",
        "number": 50710,
        "title": "Update `ActionDispatch::Routing::Mapper:Scoping#constraints` documentation",
        "user": {
            "login": "stevepolitodesign",
            "id": 5122678,
            "node_id": "MDQ6VXNlcjUxMjI2Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5122678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevepolitodesign",
            "html_url": "https://github.com/stevepolitodesign",
            "followers_url": "https://api.github.com/users/stevepolitodesign/followers",
            "following_url": "https://api.github.com/users/stevepolitodesign/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevepolitodesign/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevepolitodesign/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevepolitodesign/subscriptions",
            "organizations_url": "https://api.github.com/users/stevepolitodesign/orgs",
            "repos_url": "https://api.github.com/users/stevepolitodesign/repos",
            "events_url": "https://api.github.com/users/stevepolitodesign/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevepolitodesign/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-11T16:50:31Z",
        "updated_at": "2024-01-11T16:50:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50710",
            "html_url": "https://github.com/rails/rails/pull/50710",
            "diff_url": "https://github.com/rails/rails/pull/50710.diff",
            "patch_url": "https://github.com/rails/rails/pull/50710.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nThe previous recommendation to place constraints in `lib/constraints` did not work in practice on a default Rails install, as it will raise the following:\r\n\r\n```\r\nuninitialized constant Iphone (NameError)\r\n```\r\n\r\nInstead, recommend placing constraints in `app/constraints` such that they will be eager loaded.\r\n\r\n### Additional information\r\n\r\nAlternatively, we could update the documentation to elaborate that `lib/constraints` would need to be explicitly eager loaded.\r\n\r\n```ruby\r\nconfig.eager_load_paths << Rails.root.join(\"lib/constraints\")\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50710/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50710/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50705",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50705/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50705/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50705/events",
        "html_url": "https://github.com/rails/rails/pull/50705",
        "id": 2076034722,
        "node_id": "PR_kwDNIULOY8YYug",
        "number": 50705,
        "title": "Backport: Define missing attribute methods from `method_missing`",
        "user": {
            "login": "casperisfine",
            "id": 19192189,
            "node_id": "MDQ6VXNlcjE5MTkyMTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19192189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casperisfine",
            "html_url": "https://github.com/casperisfine",
            "followers_url": "https://api.github.com/users/casperisfine/followers",
            "following_url": "https://api.github.com/users/casperisfine/following{/other_user}",
            "gists_url": "https://api.github.com/users/casperisfine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casperisfine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casperisfine/subscriptions",
            "organizations_url": "https://api.github.com/users/casperisfine/orgs",
            "repos_url": "https://api.github.com/users/casperisfine/repos",
            "events_url": "https://api.github.com/users/casperisfine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casperisfine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-11T08:26:24Z",
        "updated_at": "2024-01-11T08:26:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50705",
            "html_url": "https://github.com/rails/rails/pull/50705",
            "diff_url": "https://github.com/rails/rails/pull/50705.diff",
            "patch_url": "https://github.com/rails/rails/pull/50705.patch",
            "merged_at": null
        },
        "body": "Ref: https://github.com/rails/rails/pull/50594\r\n\r\nOpening a PR because the backport is non-trivial, so I want CI coverage. Also @ghiculescu pointed a possible issue in https://github.com/rails/rails/commit/d429bfb3b6fd2794f0d859b68e5dee24578d405f so I'd like to get to the bottom of that before merging the backport.\r\n\r\ncc @rafaelfranca ",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50705/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50703",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50703/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50703/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50703/events",
        "html_url": "https://github.com/rails/rails/pull/50703",
        "id": 2075945414,
        "node_id": "PR_kwDNIULOY8ThOg",
        "number": 50703,
        "title": "Add warning for non-existent directories in autoload paths for Zeitwerk",
        "user": {
            "login": "aeroastro",
            "id": 4468155,
            "node_id": "MDQ6VXNlcjQ0NjgxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4468155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aeroastro",
            "html_url": "https://github.com/aeroastro",
            "followers_url": "https://api.github.com/users/aeroastro/followers",
            "following_url": "https://api.github.com/users/aeroastro/following{/other_user}",
            "gists_url": "https://api.github.com/users/aeroastro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aeroastro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aeroastro/subscriptions",
            "organizations_url": "https://api.github.com/users/aeroastro/orgs",
            "repos_url": "https://api.github.com/users/aeroastro/repos",
            "events_url": "https://api.github.com/users/aeroastro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aeroastro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-11T07:28:26Z",
        "updated_at": "2024-01-17T12:05:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50703",
            "html_url": "https://github.com/rails/rails/pull/50703",
            "diff_url": "https://github.com/rails/rails/pull/50703.diff",
            "patch_url": "https://github.com/rails/rails/pull/50703.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I noticed that Rails does not warn the user when they specify a non-existing directory in the `config.autoload_paths` or `config.autoload_once_paths` settings. This can lead to confusion and hard-to-debug errors when the user expects some files to be loaded but they are not.\r\n\r\n### Detail\r\n\r\nThis Pull Request add a warning message when specified paths for `config.autoload_paths` and `config.autoload_once_paths` are not existing directories.\r\nBelow is the example message:\r\n\r\n```\r\nconfig.autoload_paths must be existing directories.\r\n'/wrong/path/to/load' is not an existing directory.\r\n```\r\n\r\n### Additional information\r\n\r\nSince this PR does not change the behavior itself, I believe existing tests cover this PR.\r\n\r\nThe warning message has been inspired by the following code.\r\nhttps://github.com/rails/rails/blob/91968e5a185927b8216b82c860a48b6367285456/railties/lib/rails/application/bootstrap.rb#L23-L30\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50703/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50695",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50695/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50695/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50695/events",
        "html_url": "https://github.com/rails/rails/pull/50695",
        "id": 2074094584,
        "node_id": "PR_kwDNIULOY6t9sA",
        "number": 50695,
        "title": "Ignore the query cache in a block",
        "user": {
            "login": "djmb",
            "id": 1734607,
            "node_id": "MDQ6VXNlcjE3MzQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1734607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djmb",
            "html_url": "https://github.com/djmb",
            "followers_url": "https://api.github.com/users/djmb/followers",
            "following_url": "https://api.github.com/users/djmb/following{/other_user}",
            "gists_url": "https://api.github.com/users/djmb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djmb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djmb/subscriptions",
            "organizations_url": "https://api.github.com/users/djmb/orgs",
            "repos_url": "https://api.github.com/users/djmb/repos",
            "events_url": "https://api.github.com/users/djmb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djmb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-10T10:47:07Z",
        "updated_at": "2024-01-30T04:11:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50695",
            "html_url": "https://github.com/rails/rails/pull/50695",
            "diff_url": "https://github.com/rails/rails/pull/50695.diff",
            "patch_url": "https://github.com/rails/rails/pull/50695.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nThis PR allow the Query cache to be ignored in a block.\r\n\r\nFor Solid Cache queries we want to be able to completely disable the query cache (see https://github.com/rails/solid_cache/issues/123).\r\n\r\nSolid Cache uses the database as the Rails cache so it gets the automatic query cache behaviour by default. \r\n\r\nWe'd like to avoid this because the local cache already handles caching repeated reads and having Rails cache writes clear the AR query cache is not desirable.\r\n\r\n`uncached` works for disabling reads doesn't disable clearing the cache for writes.\r\n\r\n### Detail\r\n\r\nWe add a `ignore_query_cache` method to the connection. It takes a block and within that block:\r\n- queries will not be cached in the query cache\r\n- queries will not be read from the query cache\r\n- writes will not clear the query cache\r\n- cached/uncached blocks will be ignored\r\n\r\nExample usage:\r\n\r\n```ruby\r\nActiveRecord::Base.connection.ignore_query_cache do\r\n  post = Post.find 1\r\n  post.touch\r\nend\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50695/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50672",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50672/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50672/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50672/events",
        "html_url": "https://github.com/rails/rails/issues/50672",
        "id": 2072396416,
        "node_id": "I_kwDNIULOe4ZCgA",
        "number": 50672,
        "title": "db:schema:load:<name> purges test database",
        "user": {
            "login": "romuloceccon",
            "id": 40032,
            "node_id": "MDQ6VXNlcjQwMDMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/40032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/romuloceccon",
            "html_url": "https://github.com/romuloceccon",
            "followers_url": "https://api.github.com/users/romuloceccon/followers",
            "following_url": "https://api.github.com/users/romuloceccon/following{/other_user}",
            "gists_url": "https://api.github.com/users/romuloceccon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/romuloceccon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/romuloceccon/subscriptions",
            "organizations_url": "https://api.github.com/users/romuloceccon/orgs",
            "repos_url": "https://api.github.com/users/romuloceccon/repos",
            "events_url": "https://api.github.com/users/romuloceccon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/romuloceccon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-01-09T13:43:19Z",
        "updated_at": "2024-01-10T09:19:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Commit [adb64db43d](https://github.com/rails/rails/commit/adb64db43dba5cad1007ce57e25df67f8b3e91f8#diff-4a42b5efdab725af0936f94b4a84dcf6a8be8738e28ed265e0a3e74f275f5048R491) changed task `db:schema:load:<name>` to invoke `db:test:purge:<name>`.\r\n\r\nBecause of that Rails 7.1 breaks my workflow for initializing a local environment:\r\n\r\n- create database with `db:create`\r\n- run custom SQL to create Postgres extensions, schemas and triggers\r\n- load schema with `db:schema:load:<name>`\r\n\r\nStrangely, `db:schema:load` keeps the old behavior, and I could not find the explanation for the change in the commit message or in related Github issues.\r\n\r\nAlso, it _requires_ a test database to be configured in `database.yml`; otherwise the task fails:\r\n\r\n```\r\n$ RAILS_ENV=development bin/rails db:schema:load:primary\r\nbin/rails aborted!\r\nTypeError: Invalid type for configuration. Expected Symbol, String, or Hash. Got nil (TypeError)\r\n\r\n        raise TypeError, \"Invalid type for configuration. Expected Symbol, String, or Hash. Got #{config.inspect}\"\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nTasks: TOP => db:schema:load:primary => db:test:purge:primary\r\n(See full trace by running task with --trace)\r\n```\r\n\r\nCan someone confirm the change was intentional?\r\n\r\n**Steps to reproduce the failure**\r\n\r\n- `$ rails new rails_bug`\r\n- `$ cd rails_bug`\r\n- use the following `database.yml`:\r\n\r\n```\r\ndevelopment:\r\n  one:\r\n    adapter: sqlite3\r\n    database: storage/development.sqlite3\r\n  two:\r\n    adapter: sqlite3\r\n    database: storage/development_two.sqlite3\r\n    migrations_paths: db/migrate_two\r\n```\r\n- `$ bin/rails db:migrate:one`\r\n- `$ bin/rails db:schema:load:one`\r\n\r\n**Expected behavior**\r\n\r\nNo error.\r\n\r\n**Actual behavior**\r\n\r\nTypeError invoking database task.\r\n\r\n**System configuration**\r\n\r\nRails 7.1.2\r\nRuby 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50666",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50666/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50666/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50666/events",
        "html_url": "https://github.com/rails/rails/issues/50666",
        "id": 2071645014,
        "node_id": "I_kwDNIULOe3rLVg",
        "number": 50666,
        "title": "`rails credentials:edit` lets you pass an unknown editor, without issuing any error report",
        "user": {
            "login": "ArthurPV",
            "id": 42948054,
            "node_id": "MDQ6VXNlcjQyOTQ4MDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/42948054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ArthurPV",
            "html_url": "https://github.com/ArthurPV",
            "followers_url": "https://api.github.com/users/ArthurPV/followers",
            "following_url": "https://api.github.com/users/ArthurPV/following{/other_user}",
            "gists_url": "https://api.github.com/users/ArthurPV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ArthurPV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ArthurPV/subscriptions",
            "organizations_url": "https://api.github.com/users/ArthurPV/orgs",
            "repos_url": "https://api.github.com/users/ArthurPV/repos",
            "events_url": "https://api.github.com/users/ArthurPV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ArthurPV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-09T05:15:43Z",
        "updated_at": "2024-01-09T13:23:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.2\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/object/blank\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_credentials_edit_command\r\n    # test with ed editor\r\n    # assert_equal system(\"VISUAL=ed rails credentials:edit << EOF\\nEOF\"), true\r\n    # test with an unknown editor\r\n    assert_equal system(\"VISUAL=abc rails credentials:edit\"), false\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\n$? = 1, with an error report\r\n\r\n### Actual behavior\r\n\r\noutput:\r\n\r\n```\r\nEditing config/credentials.yml.enc...\r\nFile encrypted and saved.\r\n```\r\n\r\n$? = 0\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.3.0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50666/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50645",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50645/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50645/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50645/events",
        "html_url": "https://github.com/rails/rails/issues/50645",
        "id": 2070625119,
        "node_id": "I_kwDNIULOe2s7Xw",
        "number": 50645,
        "title": "Rails 7.1 Create model with has_many with lambda incorrect default",
        "user": {
            "login": "nikita-railsware",
            "id": 137036598,
            "node_id": "U_kgDOCCsDNg",
            "avatar_url": "https://avatars.githubusercontent.com/u/137036598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikita-railsware",
            "html_url": "https://github.com/nikita-railsware",
            "followers_url": "https://api.github.com/users/nikita-railsware/followers",
            "following_url": "https://api.github.com/users/nikita-railsware/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikita-railsware/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikita-railsware/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikita-railsware/subscriptions",
            "organizations_url": "https://api.github.com/users/nikita-railsware/orgs",
            "repos_url": "https://api.github.com/users/nikita-railsware/repos",
            "events_url": "https://api.github.com/users/nikita-railsware/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikita-railsware/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-08T14:54:30Z",
        "updated_at": "2024-01-24T09:51:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nIn Rails 7.1, when I create new model with lambda in `has_many` association without passing value to the parameter, it puts serialized value of array that passed in `where` in a lambda.\r\nRails 7.0 just put `nil` in this case.\r\n\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"7.1.2\"\r\n  # If you want to test against edge Rails replace the previous line with this:\r\n  # gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :users, force: true do |t|\r\n  end\r\n\r\n  create_table :post_accesses, force: true do |t|\r\n    t.string :access_type\r\n    t.references :post\r\n    t.references :user\r\n  end\r\nend\r\n\r\nclass PostAccess < ActiveRecord::Base\r\n  ROLES = %w[viewer editor owner]\r\n  STAFF_ROLES = %w[editor owner]\r\n\r\n  belongs_to :user\r\n  belongs_to :post\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :post_accesses\r\n  has_many :staff_post_accesses,\r\n           -> { where(access_type: PostAccess::STAFF_ROLES) },\r\n           class_name: 'PostAccess'\r\n\r\n  has_many :staff_users, through: :staff_post_accesses, class_name: 'User', source: :user\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    user = User.create!\r\n    post = Post.create!(staff_users: [user])\r\n\r\n    assert_equal nil, post.post_accesses.first.access_type\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nIt should put `nil`, or one of the possible value\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nIt put serialized array:\r\n'[\"editor\", \"owner\"]'\r\n\r\n### System configuration\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50645/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50645/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50637",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50637/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50637/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50637/events",
        "html_url": "https://github.com/rails/rails/pull/50637",
        "id": 2069551280,
        "node_id": "PR_kwDNIULOY21ZLw",
        "number": 50637,
        "title": "Experiment | [Fix #47809] `load_async` support for collection associations",
        "user": {
            "login": "joshuay03",
            "id": 54629302,
            "node_id": "MDQ6VXNlcjU0NjI5MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54629302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshuay03",
            "html_url": "https://github.com/joshuay03",
            "followers_url": "https://api.github.com/users/joshuay03/followers",
            "following_url": "https://api.github.com/users/joshuay03/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshuay03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshuay03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshuay03/subscriptions",
            "organizations_url": "https://api.github.com/users/joshuay03/orgs",
            "repos_url": "https://api.github.com/users/joshuay03/repos",
            "events_url": "https://api.github.com/users/joshuay03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshuay03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-08T03:24:48Z",
        "updated_at": "2024-01-09T03:10:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50637",
            "html_url": "https://github.com/rails/rails/pull/50637",
            "diff_url": "https://github.com/rails/rails/pull/50637.diff",
            "patch_url": "https://github.com/rails/rails/pull/50637.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nMostly an experiment to fix #47809 while trying to avoid a large refactor which [might be the ideal solution](https://github.com/rails/rails/issues/47809#issuecomment-1489832287). This only tackles collection associations.\r\n\r\n### Detail\r\n\r\nTODO\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nTODO\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50637/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50637/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50633",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50633/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50633/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50633/events",
        "html_url": "https://github.com/rails/rails/pull/50633",
        "id": 2069256890,
        "node_id": "PR_kwDNIULOY2laaQ",
        "number": 50633,
        "title": "Make `group`/`regroup` inside `merge` be applied to the merged relation",
        "user": {
            "login": "joaomarcos96",
            "id": 31287923,
            "node_id": "MDQ6VXNlcjMxMjg3OTIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/31287923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joaomarcos96",
            "html_url": "https://github.com/joaomarcos96",
            "followers_url": "https://api.github.com/users/joaomarcos96/followers",
            "following_url": "https://api.github.com/users/joaomarcos96/following{/other_user}",
            "gists_url": "https://api.github.com/users/joaomarcos96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joaomarcos96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joaomarcos96/subscriptions",
            "organizations_url": "https://api.github.com/users/joaomarcos96/orgs",
            "repos_url": "https://api.github.com/users/joaomarcos96/repos",
            "events_url": "https://api.github.com/users/joaomarcos96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joaomarcos96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-07T19:25:39Z",
        "updated_at": "2024-01-17T22:36:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50633",
            "html_url": "https://github.com/rails/rails/pull/50633",
            "diff_url": "https://github.com/rails/rails/pull/50633.diff",
            "patch_url": "https://github.com/rails/rails/pull/50633.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nWhen using `group` inside `merge`, the `group` is applied to the outermost relation instead of the merged relation, which is unexpected. The same is true for `regroup`.\r\n\r\n### Detail\r\n\r\nNow, `group` inside `merge` is applied to the merged relation, as intended. The behavior was changed for `regroup` as well, and documented.\r\n\r\nBefore:\r\n\r\n```rb\r\nProduct.joins(:items).group(:id).merge(Item.group(:title))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"products\".\"title\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id)).regroup(:title)\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"title\"\r\n```\r\n\r\nAfter:\r\n```rb\r\nProduct.joins(:items).group(:id).merge(Item.group(:title))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"items\".\"title\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id))\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"id\", \"items\".\"id\"\r\n\r\nProduct.joins(:items).group(:id).merge(Item.group(:title).regroup(:id)).regroup(:title)\r\n# SELECT \"products\".* FROM \"products\"\r\n# INNER JOIN \"items\" ON \"items\".\"product_id\" = \"products\".\"id\"\r\n# GROUP BY \"products\".\"title\"\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50633/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50623",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50623/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50623/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50623/events",
        "html_url": "https://github.com/rails/rails/pull/50623",
        "id": 2068829741,
        "node_id": "PR_kwDNIULOY2QLzQ",
        "number": 50623,
        "title": "Pass render options and block to calls to `#render_in`",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            },
            {
                "id": 150377,
                "node_id": "MDU6TGFiZWwxNTAzNzc=",
                "url": "https://api.github.com/repos/rails/rails/labels/docs",
                "name": "docs",
                "color": "02d7e1",
                "default": false,
                "description": null
            },
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-06T20:46:09Z",
        "updated_at": "2024-01-30T03:15:45Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50623",
            "html_url": "https://github.com/rails/rails/pull/50623",
            "diff_url": "https://github.com/rails/rails/pull/50623.diff",
            "patch_url": "https://github.com/rails/rails/pull/50623.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nCloses [#45432][]\r\n\r\nSupport for objects that respond to `#render_in` was introduced in [#36388][] and [#37919][]. Those implementations assume that the instance will all the context it needs to render itself. That assumption doesn't account for call-site arguments like `locals: { ... }` or a block.\r\n\r\n### Detail\r\n\r\nThis commit expands support for rendering with a `:renderable` option to incorporate locals and blocks. For example:\r\n\r\n```ruby\r\nclass Greeting\r\n  def render_in(view_context, **options, &block)\r\n    if block\r\n      view_context.render html: block.call\r\n    else\r\n      view_context.render inline: <<~ERB.strip, **options\r\n        Hello, <%= name %>\r\n      ERB\r\n    end\r\n  end\r\nend\r\n\r\nrender(Greeting.new)                    # => \"Hello, World\"\r\nrender(Greeting.new, name: \"Local\")     # => \"Hello, Local\"\r\nrender(Greeting.new) { \"Hello, Block\" } # => \"Hello, Block\"\r\n```\r\n\r\nSince existing tools depend on the `#render_in(view_context)` signature\r\nwithout options, this commit deprecates that signature in favor of one\r\nthat accepts options and a block.\r\n\r\n[#45432]: https://github.com/rails/rails/pull/45432\r\n[#36388]: https://github.com/rails/rails/pull/36388\r\n[#37919]: https://github.com/rails/rails/pull/37919\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50623/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50610",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50610/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50610/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50610/events",
        "html_url": "https://github.com/rails/rails/pull/50610",
        "id": 2068183148,
        "node_id": "PR_kwDNIULOY1t8TA",
        "number": 50610,
        "title": "Don't fail for uploads with content-type parameters in the ActiveStorage::DiskController",
        "user": {
            "login": "codergeek121",
            "id": 4910785,
            "node_id": "MDQ6VXNlcjQ5MTA3ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4910785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codergeek121",
            "html_url": "https://github.com/codergeek121",
            "followers_url": "https://api.github.com/users/codergeek121/followers",
            "following_url": "https://api.github.com/users/codergeek121/following{/other_user}",
            "gists_url": "https://api.github.com/users/codergeek121/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codergeek121/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codergeek121/subscriptions",
            "organizations_url": "https://api.github.com/users/codergeek121/orgs",
            "repos_url": "https://api.github.com/users/codergeek121/repos",
            "events_url": "https://api.github.com/users/codergeek121/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codergeek121/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107189,
                "node_id": "MDU6TGFiZWwxMDcxODk=",
                "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
                "name": "actionpack",
                "color": "FFF700",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-05T23:32:34Z",
        "updated_at": "2024-01-08T20:20:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50610",
            "html_url": "https://github.com/rails/rails/pull/50610",
            "diff_url": "https://github.com/rails/rails/pull/50610.diff",
            "patch_url": "https://github.com/rails/rails/pull/50610.patch",
            "merged_at": null
        },
        "body": "Fixes #50600 by parsing the string content-type before comparing it to the `Mime::Type`. This comparison will ignore the parameters.\r\n\r\n@alexandergitter I added you as co-author for the reproduction test case.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50610/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50610/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50608",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50608/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50608/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50608/events",
        "html_url": "https://github.com/rails/rails/pull/50608",
        "id": 2067907461,
        "node_id": "PR_kwDNIULOY1ewzQ",
        "number": 50608,
        "title": "allow dom_id method to accept an array of records_or_classes",
        "user": {
            "login": "jwilsjustin",
            "id": 820759,
            "node_id": "MDQ6VXNlcjgyMDc1OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/820759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jwilsjustin",
            "html_url": "https://github.com/jwilsjustin",
            "followers_url": "https://api.github.com/users/jwilsjustin/followers",
            "following_url": "https://api.github.com/users/jwilsjustin/following{/other_user}",
            "gists_url": "https://api.github.com/users/jwilsjustin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jwilsjustin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jwilsjustin/subscriptions",
            "organizations_url": "https://api.github.com/users/jwilsjustin/orgs",
            "repos_url": "https://api.github.com/users/jwilsjustin/repos",
            "events_url": "https://api.github.com/users/jwilsjustin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jwilsjustin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3666649,
                "node_id": "MDU6TGFiZWwzNjY2NjQ5",
                "url": "https://api.github.com/repos/rails/rails/labels/actionview",
                "name": "actionview",
                "color": "d7e102",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-05T19:12:49Z",
        "updated_at": "2024-01-08T14:17:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50608",
            "html_url": "https://github.com/rails/rails/pull/50608",
            "diff_url": "https://github.com/rails/rails/pull/50608.diff",
            "patch_url": "https://github.com/rails/rails/pull/50608.patch",
            "merged_at": null
        },
        "body": "# Context\r\n\r\nSee also: https://github.com/hotwired/turbo-rails/pull/476\r\n\r\n[hotwired/turbo-rails/pull/476](https://github.com/hotwired/turbo-rails/pull/476) removed the ability to pass multiple ids/models to the `turbo_frame_tag` helper method. In that PR it was suggested by @skipkayhil that this ability be passed down to the `dom_id` method (which is a part of rails core) method rather than the `turbo_frame_tag` helper (which is a part of turbo-rails).\r\n\r\nref: https://discuss.rubyonrails.org/t/allow-dom-id-method-to-accept-multiple-ids-models/84408\r\n\r\n# Changes\r\n\r\nIf the first argument of the `dom_id` is an array, this change will loop through each value and form a singular dom ID, then join the parts together. This change will allow turbo frame tags to accept multiple models (similar to the `cache` helper from ActionView).\r\n\r\n```\r\n<%= turbo_frame_tag [customer, field] do %>\r\n  <!-- code -->\r\n<% end %>\r\n```\r\n\r\n***\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50608/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50608/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50606",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50606/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50606/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50606/events",
        "html_url": "https://github.com/rails/rails/pull/50606",
        "id": 2067810728,
        "node_id": "PR_kwDNIULOY1ZYdQ",
        "number": 50606,
        "title": "[Fix #50604] Restore compatibility of Active Record Encryption configs with eager loading mode",
        "user": {
            "login": "maximerety",
            "id": 58582,
            "node_id": "MDQ6VXNlcjU4NTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/58582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maximerety",
            "html_url": "https://github.com/maximerety",
            "followers_url": "https://api.github.com/users/maximerety/followers",
            "following_url": "https://api.github.com/users/maximerety/following{/other_user}",
            "gists_url": "https://api.github.com/users/maximerety/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maximerety/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maximerety/subscriptions",
            "organizations_url": "https://api.github.com/users/maximerety/orgs",
            "repos_url": "https://api.github.com/users/maximerety/repos",
            "events_url": "https://api.github.com/users/maximerety/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maximerety/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 107195,
                "node_id": "MDU6TGFiZWwxMDcxOTU=",
                "url": "https://api.github.com/repos/rails/rails/labels/railties",
                "name": "railties",
                "color": "8BE06E",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-01-05T18:03:09Z",
        "updated_at": "2024-01-31T12:08:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50606",
            "html_url": "https://github.com/rails/rails/pull/50606",
            "diff_url": "https://github.com/rails/rails/pull/50606.diff",
            "patch_url": "https://github.com/rails/rails/pull/50606.patch",
            "merged_at": null
        },
        "body": "\r\n<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nFixes #50604\r\n\r\nThis Pull Request fixes a source of incompatibility between the loading order of Active Record Encryption configs and the loading of AR models in eager loading mode.\r\n\r\n### Detail\r\n\r\nThis Pull Request removes an occurrence of `after_initialize` introduced in https://github.com/rails/rails/pull/48530, which is not fully compatible with the eager loading mode.\r\n\r\nPrevious concerns were raised in [a discussion from the same PR](https://github.com/rails/rails/pull/48530/files#r1237624233).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50606/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50604",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50604/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50604/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50604/events",
        "html_url": "https://github.com/rails/rails/issues/50604",
        "id": 2067789909,
        "node_id": "I_kwDNIULOez_4VQ",
        "number": 50604,
        "title": "Active Record Encryption configs not ready in eager loading mode",
        "user": {
            "login": "maximerety",
            "id": 58582,
            "node_id": "MDQ6VXNlcjU4NTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/58582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maximerety",
            "html_url": "https://github.com/maximerety",
            "followers_url": "https://api.github.com/users/maximerety/followers",
            "following_url": "https://api.github.com/users/maximerety/following{/other_user}",
            "gists_url": "https://api.github.com/users/maximerety/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maximerety/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maximerety/subscriptions",
            "organizations_url": "https://api.github.com/users/maximerety/orgs",
            "repos_url": "https://api.github.com/users/maximerety/repos",
            "events_url": "https://api.github.com/users/maximerety/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maximerety/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-05T17:50:05Z",
        "updated_at": "2024-01-17T12:55:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nThe introduction of `after_initialize` in Active Record Encryption configuration setup in https://github.com/rails/rails/pull/48530 (also see [that discussion in the same PR](https://github.com/rails/rails/pull/48530/files#r1237624233)) is not fully compatible with the eager loading mode: https://github.com/rails/rails/blob/6b446bee63c401364d193920f3426af0bfe75650/activerecord/lib/active_record/railtie.rb#L385\r\n\r\nIn eager loading mode, the models from the application are loaded before the `after_initialize` hook has a chance to run, as visible here (hint: you need to scroll in the code snippet): https://github.com/rails/rails/blob/b0b1eb5a1847c1de5616a55c1d7c78f11eb08cd8/railties/lib/rails/application/finisher.rb#L77-L95\r\n\r\nAs a result, some configurations may not be ready at the time Active Record Encryption's helper `encrypts` needs them during model loading.\r\n\r\nFor example, the following methods are called in order: `encrypts` ->  `encrypt_attribute` -> `scheme_for` -> `global_previous_schemes_for`:\r\n\r\nhttps://github.com/rails/rails/blob/e0a55b038f7f2f50d1467876558be183be6cedaa/activerecord/lib/active_record/encryption/encryptable_record.rb#L78-L82\r\n\r\nIf `ActiveRecord::Encryption.config.previous_schemes` is not defined yet, then the encrypted attribute is not properly configured.\r\n\r\n### Example 1\r\n\r\n#### Steps to reproduce\r\n\r\nIn this example, a previous encryption scheme is provided globally, as described in https://guides.rubyonrails.org/active_record_encryption.html#global-previous-encryption-schemes:\r\n\r\n```ruby\r\n# config/application.rb\r\nconfig.active_record.encryption.previous = [ { key_provider: MyOldKeyProvider.new } ]\r\nconfig.eager_load = true\r\n\r\n# app/models/article.rb\r\nclass Article < ApplicationRecord\r\n  encrypts :title\r\nend\r\n```\r\n\r\n#### Expected behavior\r\n\r\nThe previous encryption scheme should always be taken into account when line `encrypts :title` is reached.\r\n\r\n#### Actual behavior\r\n\r\nWhen lazy loading the application, everything is fine and the `Article` model is lazily loaded after the previous encryption scheme is defined by the `after_initialize` hook and the `:title` attribute can benefit from that previous encryption scheme.\r\n\r\nWhen eager loading the application however, the `Article` model is eager loaded before the previous scheme is defined and that config gets ignored.\r\n\r\n### Example 2\r\n\r\n#### Steps to reproduce\r\n\r\nIn this example, a custom key provider is configured when declaring the attribute, as described in https://guides.rubyonrails.org/active_record_encryption.html#model-specific-key-providers:\r\n\r\n```ruby\r\n# config/application.rb\r\nconfig.eager_load = true\r\n\r\n# app/models/article.rb\r\nclass Article < ApplicationRecord\r\n  encrypts :title, key_provider: CustomKeyProvider.new(ActiveRecord::Encryption.config.primary_key)\r\nend\r\n```\r\n\r\n#### Expected behavior\r\n\r\nThe custom key provider should be able to use the `primary_key` configured  when line `encrypts :title` is reached.\r\n\r\n#### Actual behavior\r\n\r\nWhen lazy loading the application, everything is fine and the `Article` model is lazily loaded after the `primary_key` is defined by the `after_initialize` hook and the `:title` attribute can be set up normally.\r\n\r\nWhen eager loading the application however, the `Article` model is eager loaded before the `primary_key` is defined by the `after_initialize` hook, and the model fails to load with the following exception:\r\n\r\n```\r\nactiverecord-7.1.2/lib/active_record/encryption/config.rb:43:in `block (2 levels) in <class:Config>':\r\n  Missing Active Record encryption credential: active_record_encryption.primary_key (ActiveRecord::Encryption::Errors::Configuration)\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: `7.1.2` / `7.1.3` / `main`\r\n\r\n**Ruby version**: `3.2.2` / `3.3.0`\r\n\r\n### Possible fixes\r\n\r\n1. Get rid of `after_initialize` if not really necessary (see [previous discussions](https://github.com/rails/rails/pull/48530/files#r1237624233))\r\n2. Otherwise, keep `after_initialize` and attempt to patch the eager loading mode (using `config.before_eager_load`?)",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50604/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50600",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50600/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50600/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50600/events",
        "html_url": "https://github.com/rails/rails/issues/50600",
        "id": 2067401862,
        "node_id": "I_kwDNIULOezoMhg",
        "number": 50600,
        "title": "ActiveStorage::DiskController fails for uploads when Content-Type / media type contains a parameter",
        "user": {
            "login": "alexandergitter",
            "id": 816758,
            "node_id": "MDQ6VXNlcjgxNjc1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/816758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexandergitter",
            "html_url": "https://github.com/alexandergitter",
            "followers_url": "https://api.github.com/users/alexandergitter/followers",
            "following_url": "https://api.github.com/users/alexandergitter/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexandergitter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexandergitter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexandergitter/subscriptions",
            "organizations_url": "https://api.github.com/users/alexandergitter/orgs",
            "repos_url": "https://api.github.com/users/alexandergitter/repos",
            "events_url": "https://api.github.com/users/alexandergitter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexandergitter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 41328116,
                "node_id": "MDU6TGFiZWw0MTMyODExNg==",
                "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
                "name": "attached PR",
                "color": "006b75",
                "default": false,
                "description": null
            },
            {
                "id": 126910270,
                "node_id": "MDU6TGFiZWwxMjY5MTAyNzA=",
                "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
                "name": "With reproduction steps",
                "color": "009800",
                "default": false,
                "description": null
            },
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-01-05T14:01:29Z",
        "updated_at": "2024-01-10T05:24:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`ActiveStorage::DiskController#update` returns a 422 error when the submitted content contains a parameter in its Content-Type / media type, for example `audio/ogg; codecs=opus`.\r\n\r\nThis issue appears to have been introduced in https://github.com/rails/rails/commit/5fb4703471ffb11dab9aa3855daeef9f592f6388\r\n\r\n### Steps to reproduce\r\nHere's a test case that fails in `ActiveStorage::DiskControllerTest`:\r\n\r\n```ruby\r\ntest \"directly uploading blob with content type parameters\" do\r\n  data = \"Something else entirely!\"\r\n  blob = create_blob_before_direct_upload(\r\n    byte_size: data.size, checksum: OpenSSL::Digest::MD5.base64digest(data), content_type: \"audio/ogg; codecs=opus\")\r\n\r\n  put blob.service_url_for_direct_upload, params: data, headers: { \"Content-Type\" => \"audio/ogg; codecs=opus\" }\r\n  assert_response :no_content\r\n  assert_equal data, blob.download\r\nend\r\n```\r\n\r\n(The test passes when the `; codecs=opus` part is omitted.)\r\n\r\n### Expected behavior\r\nThe upload succeeds, since the content type from the uploaded content matches the content type in the direct upload token.\r\n\r\n### Actual behavior\r\nThe request fails with 422 Unprocessable Content.\r\n\r\n### System configuration\r\n**Rails version**: 7.2.0.alpha (1702b6cbfd)\r\n\r\n**Ruby version**: 3.2.2",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50598",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50598/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50598/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50598/events",
        "html_url": "https://github.com/rails/rails/pull/50598",
        "id": 2067384052,
        "node_id": "PR_kwDNIULOY1BvYg",
        "number": 50598,
        "title": "Document `upsert`/`upsert_all` `on_duplicate: :skip` option",
        "user": {
            "login": "lucasmazza",
            "id": 80978,
            "node_id": "MDQ6VXNlcjgwOTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/80978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucasmazza",
            "html_url": "https://github.com/lucasmazza",
            "followers_url": "https://api.github.com/users/lucasmazza/followers",
            "following_url": "https://api.github.com/users/lucasmazza/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucasmazza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lucasmazza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucasmazza/subscriptions",
            "organizations_url": "https://api.github.com/users/lucasmazza/orgs",
            "repos_url": "https://api.github.com/users/lucasmazza/repos",
            "events_url": "https://api.github.com/users/lucasmazza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lucasmazza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-05T13:49:07Z",
        "updated_at": "2024-01-09T13:38:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50598",
            "html_url": "https://github.com/rails/rails/pull/50598",
            "diff_url": "https://github.com/rails/rails/pull/50598.diff",
            "patch_url": "https://github.com/rails/rails/pull/50598.patch",
            "merged_at": null
        },
        "body": "### Detail\r\n\r\nI've stumbled on this when writing an `upsert` call that must produce a `ON CONFLICT () DO NOTHING` fragment.\r\n\r\nUsing `update_only: []` didn't worked as it does update all columns on the table, but reading `InsertAll` I noticed the use of `:skip` internally that worked for this scenario, but it isn't mentioned on the public docs.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50598/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50598/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50583",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50583/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50583/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50583/events",
        "html_url": "https://github.com/rails/rails/issues/50583",
        "id": 2066163278,
        "node_id": "I_kwDNIULOeycmTg",
        "number": 50583,
        "title": "Active Storage Variant causing Aws::S3::Errors::NoSuchKey error when deleting an attachment",
        "user": {
            "login": "basiszwo",
            "id": 24071,
            "node_id": "MDQ6VXNlcjI0MDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/24071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/basiszwo",
            "html_url": "https://github.com/basiszwo",
            "followers_url": "https://api.github.com/users/basiszwo/followers",
            "following_url": "https://api.github.com/users/basiszwo/following{/other_user}",
            "gists_url": "https://api.github.com/users/basiszwo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/basiszwo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/basiszwo/subscriptions",
            "organizations_url": "https://api.github.com/users/basiszwo/orgs",
            "repos_url": "https://api.github.com/users/basiszwo/repos",
            "events_url": "https://api.github.com/users/basiszwo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/basiszwo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 664533972,
                "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
                "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
                "name": "activestorage",
                "color": "bfd4f2",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-01-04T18:44:36Z",
        "updated_at": "2024-01-31T22:09:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am not sure if this is a bug or something is not configured correctly. \r\n\r\n### Steps to reproduce\r\n\r\nUsing Active Storage with a S3-compatible object storage from digital ocean or scaleway configured along the rails guide for active storage.\r\n\r\nActive Storage configuration\r\n\r\n```\r\ndigitalocean:\r\n  service: S3\r\n  access_key_id: <%= ENV.fetch(\"DIGITALOCEAN_S3_ACCESS_KEY_ID\") %>\r\n  secret_access_key: <%= ENV.fetch(\"DIGITALOCEAN_S3_ACCESS_KEY_SECRET\") %>\r\n  bucket: <%= ENV.fetch(\"DIGITALOCEAN_S3_BUCKET_NAME\") %>\r\n  endpoint: <%= ENV.fetch(\"DIGITALOCEAN_S3_ENDPOINT\") %>\r\n```\r\n\r\nenabled with \r\n\r\n```\r\n# config/environments/development.rb\r\nconfig.active_storage.service = :digitalocean\r\n```\r\n\r\nhaving a User model with \r\n\r\n```ruby\r\nhas_one_attached :avatar do |attachable|\r\n  attachable.variant(:thumb, resize_to_fill: [350, 350])\r\nend\r\n```\r\n\r\nAfter uploading a file from the edit form the variant gets created when accessing the show view. \r\n\r\nLogs look like this\r\n\r\n```\r\nActiveStorage::VariantRecord Create (1.8ms)  INSERT INTO \"active_storage_variant_records\" (\"blob_id\", \"variation_digest\") VALUES ($1, $2) RETURNING \"id\"  [[\"blob_id\", 116], [\"variation_digest\", \"cAfAf5iAxm52Ff0Mw7wXY2F9d4A=\"]]\r\nActiveStorage::Blob Load (1.2ms)  SELECT \"active_storage_blobs\".* FROM \"active_storage_blobs\" INNER JOIN \"active_storage_attachments\" ON \"active_storage_blobs\".\"id\" = \"active_storage_attachments\".\"blob_id\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 51], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"name\", \"image\"], [\"LIMIT\", 1]]\r\nActiveStorage::Attachment Load (0.2ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 51], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"name\", \"image\"], [\"LIMIT\", 1]]\r\nActiveStorage::Blob Create (0.3ms)  INSERT INTO \"active_storage_blobs\" (\"key\", \"filename\", \"content_type\", \"metadata\", \"service_name\", \"byte_size\", \"checksum\", \"created_at\") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING \"id\"  [[\"key\", \"1dousqzwcx79wlpkfn0o0f1sjfci\"], [\"filename\", \"sigma-16mm.jpg\"], [\"content_type\", \"image/jpeg\"], [\"metadata\", \"{\\\"identified\\\":true}\"], [\"service_name\", \"digitalocean\"], [\"byte_size\", 52716], [\"checksum\", \"d9vmvbLEGDR2ZLzl7XNgUg==\"], [\"created_at\", \"2024-01-04 17:49:27.381653\"]]\r\nActiveStorage::Attachment Create (0.4ms)  INSERT INTO \"active_storage_attachments\" (\"name\", \"record_type\", \"record_id\", \"blob_id\", \"created_at\") VALUES ($1, $2, $3, $4, $5) RETURNING \"id\"  [[\"name\", \"image\"], [\"record_type\", \"ActiveStorage::VariantRecord\"], [\"record_id\", 51], [\"blob_id\", 117], [\"created_at\", \"2024-01-04 17:49:27.382925\"]]\r\nTRANSACTION (0.4ms)  COMMIT\r\nS3 Storage (120.4ms) Uploaded file to key: 1dousqzwcx79wlpkfn0o0f1sjfci (checksum: d9vmvbLEGDR2ZLzl7XNgUg==)\r\n```\r\n\r\nAttachments are being displayed, everything is fine, until deleting an attachment where I get the following exception\r\n\r\n```\r\nDEBUG -- :   TRANSACTION (0.2ms)  BEGIN\r\nDEBUG -- :   ActiveStorage::Attachment Exists? (1.7ms)  SELECT 1 AS one FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"blob_id\" = $1 LIMIT $2  [[\"blob_id\", 119], [\"LIMIT\", 1]]\r\nDEBUG -- :   ActiveStorage::VariantRecord Load (0.5ms)  SELECT \"active_storage_variant_records\".* FROM \"active_storage_variant_records\" WHERE \"active_storage_variant_records\".\"blob_id\" = $1  [[\"blob_id\", 119]]\r\nDEBUG -- :   ActiveStorage::Attachment Load (0.8ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 119], [\"record_type\", \"ActiveStorage::Blob\"], [\"name\", \"preview_image\"], [\"LIMIT\", 1]]\r\nDEBUG -- :   ActiveStorage::Blob Destroy (1.4ms)  DELETE FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = $1  [[\"id\", 119]]\r\nDEBUG -- :   TRANSACTION (6.7ms)  COMMIT\r\n INFO -- :   S3 Storage (100.6ms) Deleted file from key: 5qag8y7y3qqol4wrgo9iapy2z8oy\r\n INFO -- :   S3 Storage (38.1ms) Deleted files by key prefix: variants/5qag8y7y3qqol4wrgo9iapy2z8oy/\r\nERROR -- : Error performing ActiveStorage::PurgeJob (Job ID: 508059d0-a343-4377-ae75-c89195417e61) from Sidekiq(default) in 161.91ms: Aws::S3::Errors::NoSuchKey (Aws::S3::Errors::NoSuchKey):\r\n```\r\n\r\nI see this error twice in my logs. One time for the original and one time for the variant.\r\n\r\nActive Storage uploads the blobs without any prefix. See logs on top. \r\n\r\nAm I doing something wrong? Is my application not configured correctly? What am I missing? Thank you \ud83d\ude4f \r\n\r\n### Expected behavior\r\n\r\nDeleting an attachment should not throw errors\r\n\r\nVariants are being uploaded to a `variants` subfolder \r\n\r\n### Actual behavior\r\n\r\nDeleting an attachment throws an `Aws::S3::Errors::NoSuchKey (Aws::S3::Errors::NoSuchKey)` error as with the used key `variants/5qag8y7y3qqol4wrgo9iapy2z8oy/` no objects can be found.\r\n\r\nThis is where Active Storage tries to delete the prefixed variants which have never been created before: https://github.com/rails/rails/blob/main/activestorage/app/models/active_storage/blob.rb#L325\r\n\r\n### System configuration\r\n\r\n**Rails version**: 7.1.2\r\n\r\n**Ruby version**: 3.2.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50583/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50583/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50580",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50580/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50580/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50580/events",
        "html_url": "https://github.com/rails/rails/pull/50580",
        "id": 2065925947,
        "node_id": "PR_kwDNIULOYzzsDw",
        "number": 50580,
        "title": "Port `ActiveRecord::AttributeMethods::Query` to Active Model",
        "user": {
            "login": "seanpdoyle",
            "id": 2575027,
            "node_id": "MDQ6VXNlcjI1NzUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2575027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpdoyle",
            "html_url": "https://github.com/seanpdoyle",
            "followers_url": "https://api.github.com/users/seanpdoyle/followers",
            "following_url": "https://api.github.com/users/seanpdoyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpdoyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpdoyle/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpdoyle/orgs",
            "repos_url": "https://api.github.com/users/seanpdoyle/repos",
            "events_url": "https://api.github.com/users/seanpdoyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpdoyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107190,
                "node_id": "MDU6TGFiZWwxMDcxOTA=",
                "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
                "name": "activemodel",
                "color": "00E5FF",
                "default": false,
                "description": null
            },
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-01-04T16:07:32Z",
        "updated_at": "2024-01-04T17:01:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/rails/rails/pulls/50580",
            "html_url": "https://github.com/rails/rails/pull/50580",
            "diff_url": "https://github.com/rails/rails/pull/50580.diff",
            "patch_url": "https://github.com/rails/rails/pull/50580.patch",
            "merged_at": null
        },
        "body": "### Motivation / Background\r\n\r\nRelated to https://github.com/rails/rails/issues/50568\r\n\r\nThe backport of [type_for_attribute][] from Active Record to Active Model enables the backport of `ActiveRecord::AttributeMethods::Query` to define predicate methods for both Active Model and Active Record using the same code paths.\r\n\r\n### Detail\r\n\r\nThis commit renames `Active{Record,Model}::AttributeMethods::Query` then includes it into both into the original\r\n`ActiveRecord::AttributeMethods::Query` and into\r\n`ActiveModel::Attributes` by default.\r\n\r\nThe test coverage was copied directly from the [Active Record test suite][], then modified to work in a database-less environment.\r\n\r\n### Additional information\r\n\r\nThe `_query_attribute` method defined in\r\n`ActiveRecord::AttributeMethods::Query` is specific to Active Record, so do not include it in the migration.\r\n\r\n[type_for_attribute]: https://github.com/rails/rails/commit/83f543b8760308081ab1b58c25804c45c2597844\r\n[Active Record test suite]: https://github.com/rails/rails/blob/a73cbbea6a082cdd320ecc92e3c6f1d46fe6af74/activerecord/test/cases/attribute_methods_test.rb#L494-L596\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50580/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/rails/rails/issues/50579",
        "repository_url": "https://api.github.com/repos/rails/rails",
        "labels_url": "https://api.github.com/repos/rails/rails/issues/50579/labels{/name}",
        "comments_url": "https://api.github.com/repos/rails/rails/issues/50579/comments",
        "events_url": "https://api.github.com/repos/rails/rails/issues/50579/events",
        "html_url": "https://github.com/rails/rails/issues/50579",
        "id": 2065896582,
        "node_id": "I_kwDNIULOeyMUhg",
        "number": 50579,
        "title": "CI: SQLite adapter is running in Trilogy tests",
        "user": {
            "login": "skipkayhil",
            "id": 6014046,
            "node_id": "MDQ6VXNlcjYwMTQwNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6014046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skipkayhil",
            "html_url": "https://github.com/skipkayhil",
            "followers_url": "https://api.github.com/users/skipkayhil/followers",
            "following_url": "https://api.github.com/users/skipkayhil/following{/other_user}",
            "gists_url": "https://api.github.com/users/skipkayhil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skipkayhil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skipkayhil/subscriptions",
            "organizations_url": "https://api.github.com/users/skipkayhil/orgs",
            "repos_url": "https://api.github.com/users/skipkayhil/repos",
            "events_url": "https://api.github.com/users/skipkayhil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skipkayhil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 107191,
                "node_id": "MDU6TGFiZWwxMDcxOTE=",
                "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
                "name": "activerecord",
                "color": "0b02e1",
                "default": false,
                "description": null
            },
            {
                "id": 776781281,
                "node_id": "MDU6TGFiZWw3NzY3ODEyODE=",
                "url": "https://api.github.com/repos/rails/rails/labels/ci%20issues",
                "name": "ci issues",
                "color": "aaafff",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-04T15:49:54Z",
        "updated_at": "2024-01-04T15:56:29Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Ref #49373\r\n\r\nhttps://buildkite.com/rails/rails/builds/103367#018cd514-4e51-4bac-be7c-c8656888c21e\r\n\r\nI'm pretty sure this means that some other test is leaking, but I have not dug in at all.",
        "reactions": {
            "url": "https://api.github.com/repos/rails/rails/issues/50579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/rails/rails/issues/50579/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]